{
    "kind": "NodeList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "11412"
    },
    "items": [
        {
            "metadata": {
                "name": "ip-192-168-29-13.ec2.internal",
                "uid": "f36b4fcf-cd6a-468c-8ef2-ab11a0d08053",
                "resourceVersion": "11110",
                "creationTimestamp": "2022-07-21T16:23:34Z",
                "labels": {
                    "alpha.eksctl.io/cluster-name": "kluster4",
                    "alpha.eksctl.io/nodegroup-name": "linux-nodes",
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/instance-type": "t2.micro",
                    "beta.kubernetes.io/os": "linux",
                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                    "eks.amazonaws.com/nodegroup": "linux-nodes",
                    "eks.amazonaws.com/nodegroup-image": "ami-0f80e6144aa24f34d",
                    "eks.amazonaws.com/sourceLaunchTemplateId": "lt-0275131a245ceac75",
                    "eks.amazonaws.com/sourceLaunchTemplateVersion": "1",
                    "failure-domain.beta.kubernetes.io/region": "us-east-1",
                    "failure-domain.beta.kubernetes.io/zone": "us-east-1a",
                    "k8s.io/cloud-provider-aws": "992637ffea641cf07aa80425f650c1b5",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "ip-192-168-29-13.ec2.internal",
                    "kubernetes.io/os": "linux",
                    "node.kubernetes.io/instance-type": "t2.micro",
                    "topology.kubernetes.io/region": "us-east-1",
                    "topology.kubernetes.io/zone": "us-east-1a"
                },
                "annotations": {
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "providerID": "aws:///us-east-1a/i-0ff908e7b0503f4f3"
            },
            "status": {
                "capacity": {
                    "attachable-volumes-aws-ebs": "39",
                    "cpu": "1",
                    "ephemeral-storage": "83873772Ki",
                    "hugepages-2Mi": "0",
                    "memory": "997844Ki",
                    "pods": "4"
                },
                "allocatable": {
                    "attachable-volumes-aws-ebs": "39",
                    "cpu": "940m",
                    "ephemeral-storage": "76224326324",
                    "hugepages-2Mi": "0",
                    "memory": "589268Ki",
                    "pods": "4"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2022-07-21T17:17:17Z",
                        "lastTransitionTime": "2022-07-21T16:23:32Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2022-07-21T17:17:17Z",
                        "lastTransitionTime": "2022-07-21T16:23:32Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2022-07-21T17:17:17Z",
                        "lastTransitionTime": "2022-07-21T16:23:32Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2022-07-21T17:17:17Z",
                        "lastTransitionTime": "2022-07-21T16:24:04Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "192.168.29.13"
                    },
                    {
                        "type": "ExternalIP",
                        "address": "3.80.203.140"
                    },
                    {
                        "type": "Hostname",
                        "address": "ip-192-168-29-13.ec2.internal"
                    },
                    {
                        "type": "InternalDNS",
                        "address": "ip-192-168-29-13.ec2.internal"
                    },
                    {
                        "type": "ExternalDNS",
                        "address": "ec2-3-80-203-140.compute-1.amazonaws.com"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "aab5d7fe057a46f4bc344f1c147d7b9d",
                    "systemUUID": "ec2d6ccf-e632-ff81-c6d3-a0b0e488fb34",
                    "bootID": "f5a833da-d26f-4536-984b-3715446ca34c",
                    "kernelVersion": "5.4.196-108.356.amzn2.x86_64",
                    "osImage": "Amazon Linux 2",
                    "containerRuntimeVersion": "docker://20.10.13",
                    "kubeletVersion": "v1.22.9-eks-810597c",
                    "kubeProxyVersion": "v1.22.9-eks-810597c",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "mfadhiligitau/image1@sha256:e9c2b604b49cadcd8e99d48aa8f804a84fd3bc5a3e8166e497d8038ac9063a4f",
                            "mfadhiligitau/image1:latest"
                        ],
                        "sizeBytes": 943332377
                    },
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni@sha256:3b6db8b6fb23424366ef91d7e9e818e42291316fa81c00c2c75dcafa614340c5",
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.10.1-eksbuild.1"
                        ],
                        "sizeBytes": 302003068
                    },
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init@sha256:6c70af7bf257712105a89a896b2afb86c86ace865d32eb73765bf29163a08c56",
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.10.1-eksbuild.1"
                        ],
                        "sizeBytes": 276136949
                    },
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy@sha256:c8abb4b8efc94090458f34e5f456791d9f7f57b5c99517b6b4e197305c1f10f6",
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.22.6-eksbuild.1"
                        ],
                        "sizeBytes": 103649146
                    },
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/pause@sha256:1cb4ab85a3480446f9243178395e6bee7350f0d71296daeb6a9fdd221e23aea6",
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/pause:3.1-eksbuild.1"
                        ],
                        "sizeBytes": 682696
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "ip-192-168-48-116.ec2.internal",
                "uid": "50181d51-c55a-4166-80e6-24407b771970",
                "resourceVersion": "10666",
                "creationTimestamp": "2022-07-21T16:23:28Z",
                "labels": {
                    "alpha.eksctl.io/cluster-name": "kluster4",
                    "alpha.eksctl.io/nodegroup-name": "linux-nodes",
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/instance-type": "t2.micro",
                    "beta.kubernetes.io/os": "linux",
                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                    "eks.amazonaws.com/nodegroup": "linux-nodes",
                    "eks.amazonaws.com/nodegroup-image": "ami-0f80e6144aa24f34d",
                    "eks.amazonaws.com/sourceLaunchTemplateId": "lt-0275131a245ceac75",
                    "eks.amazonaws.com/sourceLaunchTemplateVersion": "1",
                    "failure-domain.beta.kubernetes.io/region": "us-east-1",
                    "failure-domain.beta.kubernetes.io/zone": "us-east-1d",
                    "k8s.io/cloud-provider-aws": "992637ffea641cf07aa80425f650c1b5",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "ip-192-168-48-116.ec2.internal",
                    "kubernetes.io/os": "linux",
                    "node.kubernetes.io/instance-type": "t2.micro",
                    "topology.kubernetes.io/region": "us-east-1",
                    "topology.kubernetes.io/zone": "us-east-1d"
                },
                "annotations": {
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "providerID": "aws:///us-east-1d/i-0cf415453420f0b9b"
            },
            "status": {
                "capacity": {
                    "attachable-volumes-aws-ebs": "39",
                    "cpu": "1",
                    "ephemeral-storage": "83873772Ki",
                    "hugepages-2Mi": "0",
                    "memory": "997844Ki",
                    "pods": "4"
                },
                "allocatable": {
                    "attachable-volumes-aws-ebs": "39",
                    "cpu": "940m",
                    "ephemeral-storage": "76224326324",
                    "hugepages-2Mi": "0",
                    "memory": "589268Ki",
                    "pods": "4"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2022-07-21T17:14:39Z",
                        "lastTransitionTime": "2022-07-21T16:23:26Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2022-07-21T17:14:39Z",
                        "lastTransitionTime": "2022-07-21T16:23:26Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2022-07-21T17:14:39Z",
                        "lastTransitionTime": "2022-07-21T16:23:26Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2022-07-21T17:14:39Z",
                        "lastTransitionTime": "2022-07-21T16:23:58Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "192.168.48.116"
                    },
                    {
                        "type": "ExternalIP",
                        "address": "18.206.199.110"
                    },
                    {
                        "type": "Hostname",
                        "address": "ip-192-168-48-116.ec2.internal"
                    },
                    {
                        "type": "InternalDNS",
                        "address": "ip-192-168-48-116.ec2.internal"
                    },
                    {
                        "type": "ExternalDNS",
                        "address": "ec2-18-206-199-110.compute-1.amazonaws.com"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "b2c83569e21b4a4aa4637e75b2a925a3",
                    "systemUUID": "ec26bf04-fdb6-8d81-09d5-4c5756e15aee",
                    "bootID": "b40fce3a-68af-4d93-810b-731d92d71a64",
                    "kernelVersion": "5.4.196-108.356.amzn2.x86_64",
                    "osImage": "Amazon Linux 2",
                    "containerRuntimeVersion": "docker://20.10.13",
                    "kubeletVersion": "v1.22.9-eks-810597c",
                    "kubeProxyVersion": "v1.22.9-eks-810597c",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni@sha256:3b6db8b6fb23424366ef91d7e9e818e42291316fa81c00c2c75dcafa614340c5",
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.10.1-eksbuild.1"
                        ],
                        "sizeBytes": 302003068
                    },
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init@sha256:6c70af7bf257712105a89a896b2afb86c86ace865d32eb73765bf29163a08c56",
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.10.1-eksbuild.1"
                        ],
                        "sizeBytes": 276136949
                    },
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy@sha256:c8abb4b8efc94090458f34e5f456791d9f7f57b5c99517b6b4e197305c1f10f6",
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.22.6-eksbuild.1"
                        ],
                        "sizeBytes": 103649146
                    },
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns@sha256:09c4a9684cc63dc17565b656b57797498b4a5d5e10f4286ce5ad6ff7435d7f3d",
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.8.7-eksbuild.1"
                        ],
                        "sizeBytes": 48975754
                    },
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/pause@sha256:1cb4ab85a3480446f9243178395e6bee7350f0d71296daeb6a9fdd221e23aea6",
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/pause:3.1-eksbuild.1"
                        ],
                        "sizeBytes": 682696
                    }
                ]
            }
        }
    ]
}
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "11417"
    },
    "items": [
        {
            "metadata": {
                "name": "aws-node-6tffv.1703e4c1b6f0fa01",
                "namespace": "kube-system",
                "uid": "8e593a95-9a25-4844-8d78-11184e96bd1f",
                "resourceVersion": "1821",
                "creationTimestamp": "2022-07-21T16:23:28Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "aws-node-6tffv",
                "uid": "890e63a2-7829-4ccc-bc04-079de4e568d3",
                "apiVersion": "v1",
                "resourceVersion": "1804"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/aws-node-6tffv to ip-192-168-48-116.ec2.internal",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2022-07-21T16:23:28Z",
            "lastTimestamp": "2022-07-21T16:23:28Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aws-node-6tffv.1703e4c291741566",
                "namespace": "kube-system",
                "uid": "ee88d7be-bdbf-464a-9075-7e704ae8611c",
                "resourceVersion": "1843",
                "creationTimestamp": "2022-07-21T16:23:32Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "aws-node-6tffv",
                "uid": "890e63a2-7829-4ccc-bc04-079de4e568d3",
                "apiVersion": "v1",
                "resourceVersion": "1813",
                "fieldPath": "spec.initContainers{aws-vpc-cni-init}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.10.1-eksbuild.1\"",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:32Z",
            "lastTimestamp": "2022-07-21T16:23:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aws-node-6tffv.1703e4c581ffe118",
                "namespace": "kube-system",
                "uid": "a09415ec-fda0-4a9d-a3c5-8797d8402a4e",
                "resourceVersion": "1916",
                "creationTimestamp": "2022-07-21T16:23:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "aws-node-6tffv",
                "uid": "890e63a2-7829-4ccc-bc04-079de4e568d3",
                "apiVersion": "v1",
                "resourceVersion": "1813",
                "fieldPath": "spec.initContainers{aws-vpc-cni-init}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.10.1-eksbuild.1\" in 12.625612769s",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:44Z",
            "lastTimestamp": "2022-07-21T16:23:44Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aws-node-6tffv.1703e4c58d956d40",
                "namespace": "kube-system",
                "uid": "d79b9bdd-175f-4198-b22b-f81ddb7c103d",
                "resourceVersion": "1918",
                "creationTimestamp": "2022-07-21T16:23:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "aws-node-6tffv",
                "uid": "890e63a2-7829-4ccc-bc04-079de4e568d3",
                "apiVersion": "v1",
                "resourceVersion": "1813",
                "fieldPath": "spec.initContainers{aws-vpc-cni-init}"
            },
            "reason": "Created",
            "message": "Created container aws-vpc-cni-init",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:44Z",
            "lastTimestamp": "2022-07-21T16:23:44Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aws-node-6tffv.1703e4c594e63a51",
                "namespace": "kube-system",
                "uid": "27d4da12-b874-4880-a251-1528af8fc191",
                "resourceVersion": "1920",
                "creationTimestamp": "2022-07-21T16:23:45Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "aws-node-6tffv",
                "uid": "890e63a2-7829-4ccc-bc04-079de4e568d3",
                "apiVersion": "v1",
                "resourceVersion": "1813",
                "fieldPath": "spec.initContainers{aws-vpc-cni-init}"
            },
            "reason": "Started",
            "message": "Started container aws-vpc-cni-init",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:45Z",
            "lastTimestamp": "2022-07-21T16:23:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aws-node-6tffv.1703e4c5affed55f",
                "namespace": "kube-system",
                "uid": "80bef911-bca4-482b-bb28-89fa5c36ddb8",
                "resourceVersion": "1926",
                "creationTimestamp": "2022-07-21T16:23:45Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "aws-node-6tffv",
                "uid": "890e63a2-7829-4ccc-bc04-079de4e568d3",
                "apiVersion": "v1",
                "resourceVersion": "1813",
                "fieldPath": "spec.containers{aws-node}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.10.1-eksbuild.1\"",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:45Z",
            "lastTimestamp": "2022-07-21T16:23:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aws-node-6tffv.1703e4c695435fe4",
                "namespace": "kube-system",
                "uid": "1643740e-1184-4773-a64f-c8454518e0a1",
                "resourceVersion": "1938",
                "creationTimestamp": "2022-07-21T16:23:49Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "aws-node-6tffv",
                "uid": "890e63a2-7829-4ccc-bc04-079de4e568d3",
                "apiVersion": "v1",
                "resourceVersion": "1813",
                "fieldPath": "spec.containers{aws-node}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.10.1-eksbuild.1\" in 3.846458982s",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:49Z",
            "lastTimestamp": "2022-07-21T16:23:49Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aws-node-6tffv.1703e4c69f670943",
                "namespace": "kube-system",
                "uid": "ba8d11b1-5815-4078-8b7e-04bca5a2b1a4",
                "resourceVersion": "1942",
                "creationTimestamp": "2022-07-21T16:23:49Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "aws-node-6tffv",
                "uid": "890e63a2-7829-4ccc-bc04-079de4e568d3",
                "apiVersion": "v1",
                "resourceVersion": "1813",
                "fieldPath": "spec.containers{aws-node}"
            },
            "reason": "Created",
            "message": "Created container aws-node",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:49Z",
            "lastTimestamp": "2022-07-21T16:23:49Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aws-node-6tffv.1703e4c6a571b6a6",
                "namespace": "kube-system",
                "uid": "ce2f3f89-cd3f-4f1a-8e6c-06dce4a04ab1",
                "resourceVersion": "1943",
                "creationTimestamp": "2022-07-21T16:23:49Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "aws-node-6tffv",
                "uid": "890e63a2-7829-4ccc-bc04-079de4e568d3",
                "apiVersion": "v1",
                "resourceVersion": "1813",
                "fieldPath": "spec.containers{aws-node}"
            },
            "reason": "Started",
            "message": "Started container aws-node",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:49Z",
            "lastTimestamp": "2022-07-21T16:23:49Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aws-node-97d5d.1703e4c30760c0d0",
                "namespace": "kube-system",
                "uid": "0f382c01-e97b-48f7-81d5-83db67c951df",
                "resourceVersion": "1864",
                "creationTimestamp": "2022-07-21T16:23:34Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "aws-node-97d5d",
                "uid": "b78ed540-cd0e-42d5-9048-132fa47c2b3c",
                "apiVersion": "v1",
                "resourceVersion": "1853"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/aws-node-97d5d to ip-192-168-29-13.ec2.internal",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2022-07-21T16:23:34Z",
            "lastTimestamp": "2022-07-21T16:23:34Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aws-node-97d5d.1703e4c3ebeb4d4f",
                "namespace": "kube-system",
                "uid": "0ea34c55-d145-4a52-84f9-bc0bdd20acd1",
                "resourceVersion": "1890",
                "creationTimestamp": "2022-07-21T16:23:37Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "aws-node-97d5d",
                "uid": "b78ed540-cd0e-42d5-9048-132fa47c2b3c",
                "apiVersion": "v1",
                "resourceVersion": "1858",
                "fieldPath": "spec.initContainers{aws-vpc-cni-init}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.10.1-eksbuild.1\"",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:37Z",
            "lastTimestamp": "2022-07-21T16:23:37Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aws-node-97d5d.1703e4c711ba949f",
                "namespace": "kube-system",
                "uid": "381d25fd-c414-44e0-9abb-5dcc76f9c080",
                "resourceVersion": "1950",
                "creationTimestamp": "2022-07-21T16:23:51Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "aws-node-97d5d",
                "uid": "b78ed540-cd0e-42d5-9048-132fa47c2b3c",
                "apiVersion": "v1",
                "resourceVersion": "1858",
                "fieldPath": "spec.initContainers{aws-vpc-cni-init}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.10.1-eksbuild.1\" in 13.519205477s",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:51Z",
            "lastTimestamp": "2022-07-21T16:23:51Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aws-node-97d5d.1703e4c71bea1101",
                "namespace": "kube-system",
                "uid": "ae4a71b7-f00d-4e93-aadd-0829be758a3a",
                "resourceVersion": "1954",
                "creationTimestamp": "2022-07-21T16:23:51Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "aws-node-97d5d",
                "uid": "b78ed540-cd0e-42d5-9048-132fa47c2b3c",
                "apiVersion": "v1",
                "resourceVersion": "1858",
                "fieldPath": "spec.initContainers{aws-vpc-cni-init}"
            },
            "reason": "Created",
            "message": "Created container aws-vpc-cni-init",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:51Z",
            "lastTimestamp": "2022-07-21T16:23:51Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aws-node-97d5d.1703e4c723337081",
                "namespace": "kube-system",
                "uid": "cc0c544d-2c4f-4bac-a2af-3acc4cd35ca8",
                "resourceVersion": "1955",
                "creationTimestamp": "2022-07-21T16:23:51Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "aws-node-97d5d",
                "uid": "b78ed540-cd0e-42d5-9048-132fa47c2b3c",
                "apiVersion": "v1",
                "resourceVersion": "1858",
                "fieldPath": "spec.initContainers{aws-vpc-cni-init}"
            },
            "reason": "Started",
            "message": "Started container aws-vpc-cni-init",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:51Z",
            "lastTimestamp": "2022-07-21T16:23:51Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aws-node-97d5d.1703e4c73e5e1996",
                "namespace": "kube-system",
                "uid": "65897bf8-ed7d-41fb-bd40-2d21837dfc79",
                "resourceVersion": "1960",
                "creationTimestamp": "2022-07-21T16:23:52Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "aws-node-97d5d",
                "uid": "b78ed540-cd0e-42d5-9048-132fa47c2b3c",
                "apiVersion": "v1",
                "resourceVersion": "1858",
                "fieldPath": "spec.containers{aws-node}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.10.1-eksbuild.1\"",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:52Z",
            "lastTimestamp": "2022-07-21T16:23:52Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aws-node-97d5d.1703e4c8132df498",
                "namespace": "kube-system",
                "uid": "ca4efd9e-ebc4-4194-ade1-852646c225da",
                "resourceVersion": "1972",
                "creationTimestamp": "2022-07-21T16:23:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "aws-node-97d5d",
                "uid": "b78ed540-cd0e-42d5-9048-132fa47c2b3c",
                "apiVersion": "v1",
                "resourceVersion": "1858",
                "fieldPath": "spec.containers{aws-node}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.10.1-eksbuild.1\" in 3.570376513s",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:55Z",
            "lastTimestamp": "2022-07-21T16:23:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aws-node-97d5d.1703e4c81e86c74b",
                "namespace": "kube-system",
                "uid": "59b00c05-0b8a-4596-89b8-7afa4daa40b3",
                "resourceVersion": "1973",
                "creationTimestamp": "2022-07-21T16:23:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "aws-node-97d5d",
                "uid": "b78ed540-cd0e-42d5-9048-132fa47c2b3c",
                "apiVersion": "v1",
                "resourceVersion": "1858",
                "fieldPath": "spec.containers{aws-node}"
            },
            "reason": "Created",
            "message": "Created container aws-node",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:55Z",
            "lastTimestamp": "2022-07-21T16:23:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aws-node-97d5d.1703e4c823e13358",
                "namespace": "kube-system",
                "uid": "aee52b89-c2dc-41b7-a0e1-6602bc816828",
                "resourceVersion": "1974",
                "creationTimestamp": "2022-07-21T16:23:56Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "aws-node-97d5d",
                "uid": "b78ed540-cd0e-42d5-9048-132fa47c2b3c",
                "apiVersion": "v1",
                "resourceVersion": "1858",
                "fieldPath": "spec.containers{aws-node}"
            },
            "reason": "Started",
            "message": "Started container aws-node",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:56Z",
            "lastTimestamp": "2022-07-21T16:23:56Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aws-node.1703e4c1b52f093c",
                "namespace": "kube-system",
                "uid": "e99bc95d-f1fd-4b85-b47f-2ad00655a38f",
                "resourceVersion": "1818",
                "creationTimestamp": "2022-07-21T16:23:28Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "aws-node",
                "uid": "1a9f606e-2ec1-4742-a9f7-9f547bd6b702",
                "apiVersion": "apps/v1",
                "resourceVersion": "429"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: aws-node-6tffv",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2022-07-21T16:23:28Z",
            "lastTimestamp": "2022-07-21T16:23:28Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aws-node.1703e4c305dddc1d",
                "namespace": "kube-system",
                "uid": "9cfc8714-c75e-49a7-a4dd-18898a556eb9",
                "resourceVersion": "1861",
                "creationTimestamp": "2022-07-21T16:23:34Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "aws-node",
                "uid": "1a9f606e-2ec1-4742-a9f7-9f547bd6b702",
                "apiVersion": "apps/v1",
                "resourceVersion": "1820"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: aws-node-97d5d",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2022-07-21T16:23:34Z",
            "lastTimestamp": "2022-07-21T16:23:34Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-7f5998f4c-pvs6f.1703e4495edf3066",
                "namespace": "kube-system",
                "uid": "5bba8207-b803-41a9-af5a-e763b2ed8248",
                "resourceVersion": "1686",
                "creationTimestamp": "2022-07-21T16:14:51Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-7f5998f4c-pvs6f",
                "uid": "5bdf7b3d-6515-44f6-9f39-e6d58a6bb02b",
                "apiVersion": "v1",
                "resourceVersion": "438"
            },
            "reason": "FailedScheduling",
            "message": "no nodes available to schedule pods",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2022-07-21T16:14:51Z",
            "lastTimestamp": "2022-07-21T16:22:45Z",
            "count": 8,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-7f5998f4c-pvs6f.1703e4c1b446b80b",
                "namespace": "kube-system",
                "uid": "690e7c64-0fb7-4dd4-a949-4c194a811227",
                "resourceVersion": "1806",
                "creationTimestamp": "2022-07-21T16:23:28Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-7f5998f4c-pvs6f",
                "uid": "5bdf7b3d-6515-44f6-9f39-e6d58a6bb02b",
                "apiVersion": "v1",
                "resourceVersion": "449"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had taint {node.kubernetes.io/not-ready: }, that the pod didn't tolerate.",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2022-07-21T16:23:28Z",
            "lastTimestamp": "2022-07-21T16:23:28Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-7f5998f4c-pvs6f.1703e4c8d24c76e1",
                "namespace": "kube-system",
                "uid": "47b695b3-d2d7-4c78-a3e6-07d0a367a48b",
                "resourceVersion": "1992",
                "creationTimestamp": "2022-07-21T16:23:58Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-7f5998f4c-pvs6f",
                "uid": "5bdf7b3d-6515-44f6-9f39-e6d58a6bb02b",
                "apiVersion": "v1",
                "resourceVersion": "1807"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/coredns-7f5998f4c-pvs6f to ip-192-168-48-116.ec2.internal",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2022-07-21T16:23:58Z",
            "lastTimestamp": "2022-07-21T16:23:58Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-7f5998f4c-pvs6f.1703e4c92e1f6cc6",
                "namespace": "kube-system",
                "uid": "02c9c34d-7119-416d-a9c7-b159d744a35b",
                "resourceVersion": "2001",
                "creationTimestamp": "2022-07-21T16:24:00Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-7f5998f4c-pvs6f",
                "uid": "5bdf7b3d-6515-44f6-9f39-e6d58a6bb02b",
                "apiVersion": "v1",
                "resourceVersion": "1989",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.8.7-eksbuild.1\"",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:24:00Z",
            "lastTimestamp": "2022-07-21T16:24:00Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-7f5998f4c-pvs6f.1703e4c9b123f78b",
                "namespace": "kube-system",
                "uid": "1ef6ac20-7be6-4a33-a512-fd2e40e9cfbe",
                "resourceVersion": "2010",
                "creationTimestamp": "2022-07-21T16:24:02Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-7f5998f4c-pvs6f",
                "uid": "5bdf7b3d-6515-44f6-9f39-e6d58a6bb02b",
                "apiVersion": "v1",
                "resourceVersion": "1989",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.8.7-eksbuild.1\" in 2.198096917s",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:24:02Z",
            "lastTimestamp": "2022-07-21T16:24:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-7f5998f4c-pvs6f.1703e4c9b3279d1e",
                "namespace": "kube-system",
                "uid": "26c1fe20-fcaa-4671-8001-9ceb2c578c58",
                "resourceVersion": "2011",
                "creationTimestamp": "2022-07-21T16:24:02Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-7f5998f4c-pvs6f",
                "uid": "5bdf7b3d-6515-44f6-9f39-e6d58a6bb02b",
                "apiVersion": "v1",
                "resourceVersion": "1989",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Created",
            "message": "Created container coredns",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:24:02Z",
            "lastTimestamp": "2022-07-21T16:24:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-7f5998f4c-pvs6f.1703e4c9b8b0e9bf",
                "namespace": "kube-system",
                "uid": "6cd44b0b-db92-44f9-b471-eca2069eec21",
                "resourceVersion": "2012",
                "creationTimestamp": "2022-07-21T16:24:02Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-7f5998f4c-pvs6f",
                "uid": "5bdf7b3d-6515-44f6-9f39-e6d58a6bb02b",
                "apiVersion": "v1",
                "resourceVersion": "1989",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Started",
            "message": "Started container coredns",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:24:02Z",
            "lastTimestamp": "2022-07-21T16:24:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-7f5998f4c-ws7w2.1703e4495acdd3ab",
                "namespace": "kube-system",
                "uid": "b8257714-1b43-47e9-8fa3-a50cfe0e7a5b",
                "resourceVersion": "1765",
                "creationTimestamp": "2022-07-21T16:14:51Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-7f5998f4c-ws7w2",
                "uid": "653e4d17-cbb5-47ec-9e53-2764ccdec1b6",
                "apiVersion": "v1",
                "resourceVersion": "434"
            },
            "reason": "FailedScheduling",
            "message": "no nodes available to schedule pods",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2022-07-21T16:14:51Z",
            "lastTimestamp": "2022-07-21T16:23:15Z",
            "count": 9,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-7f5998f4c-ws7w2.1703e4c1b55cb66b",
                "namespace": "kube-system",
                "uid": "10a471b6-3180-4ee0-acd1-c98f9518679e",
                "resourceVersion": "1814",
                "creationTimestamp": "2022-07-21T16:23:28Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-7f5998f4c-ws7w2",
                "uid": "653e4d17-cbb5-47ec-9e53-2764ccdec1b6",
                "apiVersion": "v1",
                "resourceVersion": "444"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had taint {node.kubernetes.io/not-ready: }, that the pod didn't tolerate.",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2022-07-21T16:23:28Z",
            "lastTimestamp": "2022-07-21T16:23:28Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-7f5998f4c-ws7w2.1703e4c8d261b662",
                "namespace": "kube-system",
                "uid": "4c512240-6ded-43d8-8b85-729749c6ca09",
                "resourceVersion": "1993",
                "creationTimestamp": "2022-07-21T16:23:58Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-7f5998f4c-ws7w2",
                "uid": "653e4d17-cbb5-47ec-9e53-2764ccdec1b6",
                "apiVersion": "v1",
                "resourceVersion": "1817"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/coredns-7f5998f4c-ws7w2 to ip-192-168-48-116.ec2.internal",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2022-07-21T16:23:58Z",
            "lastTimestamp": "2022-07-21T16:23:58Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-7f5998f4c-ws7w2.1703e4c92ccf21f7",
                "namespace": "kube-system",
                "uid": "9ef1bc34-8dc4-4fd9-ac2a-5c25ae298c0c",
                "resourceVersion": "2000",
                "creationTimestamp": "2022-07-21T16:24:00Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-7f5998f4c-ws7w2",
                "uid": "653e4d17-cbb5-47ec-9e53-2764ccdec1b6",
                "apiVersion": "v1",
                "resourceVersion": "1990"
            },
            "reason": "FailedCreatePodSandBox",
            "message": "Failed to create pod sandbox: rpc error: code = Unknown desc = failed to set up sandbox container \"a7a24e2013b44ad9516c6e499006ee819a2ffbd63e3483399a3dc44abc23b7ab\" network for pod \"coredns-7f5998f4c-ws7w2\": networkPlugin cni failed to set up pod \"coredns-7f5998f4c-ws7w2_kube-system\" network: add cmd: failed to assign an IP address to container",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:24:00Z",
            "lastTimestamp": "2022-07-21T16:24:00Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-7f5998f4c-ws7w2.1703e4c95d0a32c7",
                "namespace": "kube-system",
                "uid": "66a6efdf-684d-4c41-810f-f8f5f84d01b8",
                "resourceVersion": "2073",
                "creationTimestamp": "2022-07-21T16:24:01Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-7f5998f4c-ws7w2",
                "uid": "653e4d17-cbb5-47ec-9e53-2764ccdec1b6",
                "apiVersion": "v1",
                "resourceVersion": "1990"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:24:01Z",
            "lastTimestamp": "2022-07-21T16:24:13Z",
            "count": 12,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-7f5998f4c-ws7w2.1703e4c9afa84ff9",
                "namespace": "kube-system",
                "uid": "67721007-8345-4d2c-85c4-7e05b4b47f71",
                "resourceVersion": "2009",
                "creationTimestamp": "2022-07-21T16:24:02Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-7f5998f4c-ws7w2",
                "uid": "653e4d17-cbb5-47ec-9e53-2764ccdec1b6",
                "apiVersion": "v1",
                "resourceVersion": "1990"
            },
            "reason": "FailedCreatePodSandBox",
            "message": "Failed to create pod sandbox: rpc error: code = Unknown desc = failed to set up sandbox container \"8f922c3bc9ca0707bab231596877b416e2df59609a55b76691c6ae4ae1682f88\" network for pod \"coredns-7f5998f4c-ws7w2\": networkPlugin cni failed to set up pod \"coredns-7f5998f4c-ws7w2_kube-system\" network: add cmd: failed to assign an IP address to container",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:24:02Z",
            "lastTimestamp": "2022-07-21T16:24:02Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-7f5998f4c-ws7w2.1703e4ca009c1e78",
                "namespace": "kube-system",
                "uid": "5430231e-d567-41db-886a-207f7332802f",
                "resourceVersion": "2026",
                "creationTimestamp": "2022-07-21T16:24:04Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-7f5998f4c-ws7w2",
                "uid": "653e4d17-cbb5-47ec-9e53-2764ccdec1b6",
                "apiVersion": "v1",
                "resourceVersion": "1990"
            },
            "reason": "FailedCreatePodSandBox",
            "message": "Failed to create pod sandbox: rpc error: code = Unknown desc = failed to set up sandbox container \"37a7e4b7fddc5f0fe1015383775a65ac577e827e0e283bf629ad4dd20402a148\" network for pod \"coredns-7f5998f4c-ws7w2\": networkPlugin cni failed to set up pod \"coredns-7f5998f4c-ws7w2_kube-system\" network: add cmd: failed to assign an IP address to container",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:24:04Z",
            "lastTimestamp": "2022-07-21T16:24:04Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-7f5998f4c-ws7w2.1703e4ca3b32af77",
                "namespace": "kube-system",
                "uid": "efc5042a-78a3-4c0d-98c5-070b9c8b85c2",
                "resourceVersion": "2033",
                "creationTimestamp": "2022-07-21T16:24:05Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-7f5998f4c-ws7w2",
                "uid": "653e4d17-cbb5-47ec-9e53-2764ccdec1b6",
                "apiVersion": "v1",
                "resourceVersion": "1990"
            },
            "reason": "FailedCreatePodSandBox",
            "message": "Failed to create pod sandbox: rpc error: code = Unknown desc = failed to set up sandbox container \"4a3bc5dfd3ddeb262155a480da517efab9b3814b0e9111c6e3baa616a90fa8de\" network for pod \"coredns-7f5998f4c-ws7w2\": networkPlugin cni failed to set up pod \"coredns-7f5998f4c-ws7w2_kube-system\" network: add cmd: failed to assign an IP address to container",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:24:05Z",
            "lastTimestamp": "2022-07-21T16:24:05Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-7f5998f4c-ws7w2.1703e4ca7692f97a",
                "namespace": "kube-system",
                "uid": "c47b0d7f-2319-472f-94a0-2660bca660e9",
                "resourceVersion": "2039",
                "creationTimestamp": "2022-07-21T16:24:06Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-7f5998f4c-ws7w2",
                "uid": "653e4d17-cbb5-47ec-9e53-2764ccdec1b6",
                "apiVersion": "v1",
                "resourceVersion": "1990"
            },
            "reason": "FailedCreatePodSandBox",
            "message": "Failed to create pod sandbox: rpc error: code = Unknown desc = failed to set up sandbox container \"9088e1c676cf9400cfcc4516f4781ec2af06637ab6e91a0dcb443566dc2b27c9\" network for pod \"coredns-7f5998f4c-ws7w2\": networkPlugin cni failed to set up pod \"coredns-7f5998f4c-ws7w2_kube-system\" network: add cmd: failed to assign an IP address to container",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:24:06Z",
            "lastTimestamp": "2022-07-21T16:24:06Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-7f5998f4c-ws7w2.1703e4cab35f9831",
                "namespace": "kube-system",
                "uid": "938bb3d5-3619-4e95-a3a5-4720c8224b2a",
                "resourceVersion": "2044",
                "creationTimestamp": "2022-07-21T16:24:07Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-7f5998f4c-ws7w2",
                "uid": "653e4d17-cbb5-47ec-9e53-2764ccdec1b6",
                "apiVersion": "v1",
                "resourceVersion": "1990"
            },
            "reason": "FailedCreatePodSandBox",
            "message": "Failed to create pod sandbox: rpc error: code = Unknown desc = failed to set up sandbox container \"116bcc008e03d414cd33ad4c20f66a4a0ff75dcb032d2291ad6fb34c762b13f3\" network for pod \"coredns-7f5998f4c-ws7w2\": networkPlugin cni failed to set up pod \"coredns-7f5998f4c-ws7w2_kube-system\" network: add cmd: failed to assign an IP address to container",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:24:07Z",
            "lastTimestamp": "2022-07-21T16:24:07Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-7f5998f4c-ws7w2.1703e4caeeec4dbf",
                "namespace": "kube-system",
                "uid": "25be6caa-6772-47a1-b760-aac43e618ad7",
                "resourceVersion": "2049",
                "creationTimestamp": "2022-07-21T16:24:08Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-7f5998f4c-ws7w2",
                "uid": "653e4d17-cbb5-47ec-9e53-2764ccdec1b6",
                "apiVersion": "v1",
                "resourceVersion": "1990"
            },
            "reason": "FailedCreatePodSandBox",
            "message": "Failed to create pod sandbox: rpc error: code = Unknown desc = failed to set up sandbox container \"0d60083582b42853651cca466da1ed583855e16100881968758066baf43fdc32\" network for pod \"coredns-7f5998f4c-ws7w2\": networkPlugin cni failed to set up pod \"coredns-7f5998f4c-ws7w2_kube-system\" network: add cmd: failed to assign an IP address to container",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:24:08Z",
            "lastTimestamp": "2022-07-21T16:24:08Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-7f5998f4c-ws7w2.1703e4cb2c8e19a1",
                "namespace": "kube-system",
                "uid": "44d900e7-ed50-4619-96f1-b08b71c77b32",
                "resourceVersion": "2053",
                "creationTimestamp": "2022-07-21T16:24:09Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-7f5998f4c-ws7w2",
                "uid": "653e4d17-cbb5-47ec-9e53-2764ccdec1b6",
                "apiVersion": "v1",
                "resourceVersion": "1990"
            },
            "reason": "FailedCreatePodSandBox",
            "message": "Failed to create pod sandbox: rpc error: code = Unknown desc = failed to set up sandbox container \"3df6f059f47362785278fa7332b2fe34d5bd2002e7a9dead9e27d7b04d50d769\" network for pod \"coredns-7f5998f4c-ws7w2\": networkPlugin cni failed to set up pod \"coredns-7f5998f4c-ws7w2_kube-system\" network: add cmd: failed to assign an IP address to container",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:24:09Z",
            "lastTimestamp": "2022-07-21T16:24:09Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-7f5998f4c-ws7w2.1703e4cb67c74538",
                "namespace": "kube-system",
                "uid": "2019efbf-e4e4-4dd7-b591-c8a6228408dc",
                "resourceVersion": "2058",
                "creationTimestamp": "2022-07-21T16:24:10Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-7f5998f4c-ws7w2",
                "uid": "653e4d17-cbb5-47ec-9e53-2764ccdec1b6",
                "apiVersion": "v1",
                "resourceVersion": "1990"
            },
            "reason": "FailedCreatePodSandBox",
            "message": "Failed to create pod sandbox: rpc error: code = Unknown desc = failed to set up sandbox container \"0c18598f91ec8000a05e790707008618a6ca51419b42f766a5fdf5d030b69708\" network for pod \"coredns-7f5998f4c-ws7w2\": networkPlugin cni failed to set up pod \"coredns-7f5998f4c-ws7w2_kube-system\" network: add cmd: failed to assign an IP address to container",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:24:10Z",
            "lastTimestamp": "2022-07-21T16:24:10Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-7f5998f4c-ws7w2.1703e4cba59230b9",
                "namespace": "kube-system",
                "uid": "ae50254c-1ce8-428f-913f-6935a910cdc7",
                "resourceVersion": "2077",
                "creationTimestamp": "2022-07-21T16:24:11Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-7f5998f4c-ws7w2",
                "uid": "653e4d17-cbb5-47ec-9e53-2764ccdec1b6",
                "apiVersion": "v1",
                "resourceVersion": "1990"
            },
            "reason": "FailedCreatePodSandBox",
            "message": "(combined from similar events): Failed to create pod sandbox: rpc error: code = Unknown desc = failed to set up sandbox container \"0aecbee2500352e4917819e0f14cd8c259ce00faf25228cd6cf7fd7e284bcc02\" network for pod \"coredns-7f5998f4c-ws7w2\": networkPlugin cni failed to set up pod \"coredns-7f5998f4c-ws7w2_kube-system\" network: add cmd: failed to assign an IP address to container",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:24:11Z",
            "lastTimestamp": "2022-07-21T16:24:14Z",
            "count": 4,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-7hgfh.1703e4c306124f9c",
                "namespace": "kube-system",
                "uid": "62d14018-8ee0-46bd-9266-4c943b88b7ff",
                "resourceVersion": "1860",
                "creationTimestamp": "2022-07-21T16:23:34Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-7hgfh",
                "uid": "13999229-0312-47d9-936b-8368c89584ea",
                "apiVersion": "v1",
                "resourceVersion": "1852"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kube-proxy-7hgfh to ip-192-168-29-13.ec2.internal",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2022-07-21T16:23:34Z",
            "lastTimestamp": "2022-07-21T16:23:34Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-7hgfh.1703e4c3eac43fe9",
                "namespace": "kube-system",
                "uid": "e9795782-2027-4439-bfee-48fc6093da89",
                "resourceVersion": "1889",
                "creationTimestamp": "2022-07-21T16:23:37Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-7hgfh",
                "uid": "13999229-0312-47d9-936b-8368c89584ea",
                "apiVersion": "v1",
                "resourceVersion": "1854",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.22.6-eksbuild.1\"",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:37Z",
            "lastTimestamp": "2022-07-21T16:23:37Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-7hgfh.1703e4c5740260d5",
                "namespace": "kube-system",
                "uid": "271e8a77-da65-4d2f-bbd9-e1c3b40a5fa1",
                "resourceVersion": "1915",
                "creationTimestamp": "2022-07-21T16:23:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-7hgfh",
                "uid": "13999229-0312-47d9-936b-8368c89584ea",
                "apiVersion": "v1",
                "resourceVersion": "1854",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.22.6-eksbuild.1\" in 6.597499398s",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:44Z",
            "lastTimestamp": "2022-07-21T16:23:44Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-7hgfh.1703e4c58a3c5b42",
                "namespace": "kube-system",
                "uid": "fd45bf06-a15e-4f16-9182-2fdd7940e2a9",
                "resourceVersion": "1917",
                "creationTimestamp": "2022-07-21T16:23:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-7hgfh",
                "uid": "13999229-0312-47d9-936b-8368c89584ea",
                "apiVersion": "v1",
                "resourceVersion": "1854",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Created",
            "message": "Created container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:44Z",
            "lastTimestamp": "2022-07-21T16:23:44Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-7hgfh.1703e4c596fd5942",
                "namespace": "kube-system",
                "uid": "739da431-ec75-4c39-893d-79e67719fba1",
                "resourceVersion": "1921",
                "creationTimestamp": "2022-07-21T16:23:45Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-7hgfh",
                "uid": "13999229-0312-47d9-936b-8368c89584ea",
                "apiVersion": "v1",
                "resourceVersion": "1854",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:45Z",
            "lastTimestamp": "2022-07-21T16:23:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-jgnfq.1703e4c1b695e064",
                "namespace": "kube-system",
                "uid": "2f2a517a-0343-4d90-9b7b-5aa2284614ba",
                "resourceVersion": "1819",
                "creationTimestamp": "2022-07-21T16:23:28Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-jgnfq",
                "uid": "53943b4d-2570-4c24-a6e2-8c73734b68b8",
                "apiVersion": "v1",
                "resourceVersion": "1805"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kube-proxy-jgnfq to ip-192-168-48-116.ec2.internal",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2022-07-21T16:23:28Z",
            "lastTimestamp": "2022-07-21T16:23:28Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-jgnfq.1703e4c28f56ea5b",
                "namespace": "kube-system",
                "uid": "557ab9b3-4b7f-463e-b20f-0aaf609f34e8",
                "resourceVersion": "1842",
                "creationTimestamp": "2022-07-21T16:23:32Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-jgnfq",
                "uid": "53943b4d-2570-4c24-a6e2-8c73734b68b8",
                "apiVersion": "v1",
                "resourceVersion": "1812",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.22.6-eksbuild.1\"",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:32Z",
            "lastTimestamp": "2022-07-21T16:23:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-jgnfq.1703e4c41d94f677",
                "namespace": "kube-system",
                "uid": "2b820289-2149-454c-803d-f24d682a38c1",
                "resourceVersion": "1893",
                "creationTimestamp": "2022-07-21T16:23:38Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-jgnfq",
                "uid": "53943b4d-2570-4c24-a6e2-8c73734b68b8",
                "apiVersion": "v1",
                "resourceVersion": "1812",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.22.6-eksbuild.1\" in 6.681361753s",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:38Z",
            "lastTimestamp": "2022-07-21T16:23:38Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-jgnfq.1703e4c439bdba15",
                "namespace": "kube-system",
                "uid": "2638e678-6a43-4346-87f3-5ef02d7b26d8",
                "resourceVersion": "1894",
                "creationTimestamp": "2022-07-21T16:23:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-jgnfq",
                "uid": "53943b4d-2570-4c24-a6e2-8c73734b68b8",
                "apiVersion": "v1",
                "resourceVersion": "1812",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Created",
            "message": "Created container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:39Z",
            "lastTimestamp": "2022-07-21T16:23:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-jgnfq.1703e4c4463a1fa5",
                "namespace": "kube-system",
                "uid": "c5caf2bd-af94-4dbc-af38-d85d0bba0ee4",
                "resourceVersion": "1898",
                "creationTimestamp": "2022-07-21T16:23:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-jgnfq",
                "uid": "53943b4d-2570-4c24-a6e2-8c73734b68b8",
                "apiVersion": "v1",
                "resourceVersion": "1812",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:39Z",
            "lastTimestamp": "2022-07-21T16:23:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy.1703e4c1b5203e3f",
                "namespace": "kube-system",
                "uid": "f839fd0b-ba96-49c4-b469-20b247a1676d",
                "resourceVersion": "1811",
                "creationTimestamp": "2022-07-21T16:23:28Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kube-proxy",
                "uid": "f6d46ae7-4cec-4c04-bf4e-08724f5c78ec",
                "apiVersion": "apps/v1",
                "resourceVersion": "430"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kube-proxy-jgnfq",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2022-07-21T16:23:28Z",
            "lastTimestamp": "2022-07-21T16:23:28Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy.1703e4c30581d45e",
                "namespace": "kube-system",
                "uid": "3cfd607c-98cf-4833-9120-f798a94ae5f3",
                "resourceVersion": "1856",
                "creationTimestamp": "2022-07-21T16:23:34Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kube-proxy",
                "uid": "f6d46ae7-4cec-4c04-bf4e-08724f5c78ec",
                "apiVersion": "apps/v1",
                "resourceVersion": "1815"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kube-proxy-7hgfh",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2022-07-21T16:23:34Z",
            "lastTimestamp": "2022-07-21T16:23:34Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "11424"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "11424"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-dns",
                "namespace": "kube-system",
                "uid": "5095866a-1685-476e-ab83-2aa35eb98c6e",
                "resourceVersion": "273",
                "creationTimestamp": "2022-07-21T16:14:47Z",
                "labels": {
                    "eks.amazonaws.com/component": "kube-dns",
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"prometheus.io/port\":\"9153\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"eks.amazonaws.com/component\":\"kube-dns\",\"k8s-app\":\"kube-dns\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"CoreDNS\"},\"name\":\"kube-dns\",\"namespace\":\"kube-system\"},\"spec\":{\"clusterIP\":\"10.100.0.10\",\"ports\":[{\"name\":\"dns\",\"port\":53,\"protocol\":\"UDP\"},{\"name\":\"dns-tcp\",\"port\":53,\"protocol\":\"TCP\"}],\"selector\":{\"k8s-app\":\"kube-dns\"}}}\n",
                    "prometheus.io/port": "9153",
                    "prometheus.io/scrape": "true"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "dns",
                        "protocol": "UDP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "dns-tcp",
                        "protocol": "TCP",
                        "port": 53,
                        "targetPort": 53
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "clusterIP": "10.100.0.10",
                "clusterIPs": [
                    "10.100.0.10"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "11424"
    },
    "items": [
        {
            "metadata": {
                "name": "aws-node",
                "namespace": "kube-system",
                "uid": "1a9f606e-2ec1-4742-a9f7-9f547bd6b702",
                "resourceVersion": "1985",
                "generation": 1,
                "creationTimestamp": "2022-07-21T16:14:46Z",
                "labels": {
                    "k8s-app": "aws-node"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"k8s-app\":\"aws-node\"},\"name\":\"aws-node\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"aws-node\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"aws-node\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]},{\"key\":\"kubernetes.io/arch\",\"operator\":\"In\",\"values\":[\"amd64\",\"arm64\"]},{\"key\":\"eks.amazonaws.com/compute-type\",\"operator\":\"NotIn\",\"values\":[\"fargate\"]}]}]}}},\"containers\":[{\"env\":[{\"name\":\"ADDITIONAL_ENI_TAGS\",\"value\":\"{}\"},{\"name\":\"AWS_VPC_CNI_NODE_PORT_SUPPORT\",\"value\":\"true\"},{\"name\":\"AWS_VPC_ENI_MTU\",\"value\":\"9001\"},{\"name\":\"AWS_VPC_K8S_CNI_CONFIGURE_RPFILTER\",\"value\":\"false\"},{\"name\":\"AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG\",\"value\":\"false\"},{\"name\":\"AWS_VPC_K8S_CNI_EXTERNALSNAT\",\"value\":\"false\"},{\"name\":\"AWS_VPC_K8S_CNI_LOGLEVEL\",\"value\":\"DEBUG\"},{\"name\":\"AWS_VPC_K8S_CNI_LOG_FILE\",\"value\":\"/host/var/log/aws-routed-eni/ipamd.log\"},{\"name\":\"AWS_VPC_K8S_CNI_RANDOMIZESNAT\",\"value\":\"prng\"},{\"name\":\"AWS_VPC_K8S_CNI_VETHPREFIX\",\"value\":\"eni\"},{\"name\":\"AWS_VPC_K8S_PLUGIN_LOG_FILE\",\"value\":\"/var/log/aws-routed-eni/plugin.log\"},{\"name\":\"AWS_VPC_K8S_PLUGIN_LOG_LEVEL\",\"value\":\"DEBUG\"},{\"name\":\"DISABLE_INTROSPECTION\",\"value\":\"false\"},{\"name\":\"DISABLE_METRICS\",\"value\":\"false\"},{\"name\":\"DISABLE_NETWORK_RESOURCE_PROVISIONING\",\"value\":\"false\"},{\"name\":\"ENABLE_IPv4\",\"value\":\"true\"},{\"name\":\"ENABLE_IPv6\",\"value\":\"false\"},{\"name\":\"ENABLE_POD_ENI\",\"value\":\"false\"},{\"name\":\"ENABLE_PREFIX_DELEGATION\",\"value\":\"false\"},{\"name\":\"MY_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"WARM_ENI_TARGET\",\"value\":\"1\"},{\"name\":\"WARM_PREFIX_TARGET\",\"value\":\"1\"}],\"image\":\"602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.10.1-eksbuild.1\",\"livenessProbe\":{\"exec\":{\"command\":[\"/app/grpc-health-probe\",\"-addr=:50051\",\"-connect-timeout=5s\",\"-rpc-timeout=5s\"]},\"initialDelaySeconds\":60,\"timeoutSeconds\":10},\"name\":\"aws-node\",\"ports\":[{\"containerPort\":61678,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"exec\":{\"command\":[\"/app/grpc-health-probe\",\"-addr=:50051\",\"-connect-timeout=5s\",\"-rpc-timeout=5s\"]},\"initialDelaySeconds\":1,\"timeoutSeconds\":10},\"resources\":{\"requests\":{\"cpu\":\"25m\"}},\"securityContext\":{\"capabilities\":{\"add\":[\"NET_ADMIN\"]}},\"volumeMounts\":[{\"mountPath\":\"/host/opt/cni/bin\",\"name\":\"cni-bin-dir\"},{\"mountPath\":\"/host/etc/cni/net.d\",\"name\":\"cni-net-dir\"},{\"mountPath\":\"/host/var/log/aws-routed-eni\",\"name\":\"log-dir\"},{\"mountPath\":\"/var/run/aws-node\",\"name\":\"run-dir\"},{\"mountPath\":\"/var/run/dockershim.sock\",\"name\":\"dockershim\"},{\"mountPath\":\"/run/xtables.lock\",\"name\":\"xtables-lock\"}]}],\"hostNetwork\":true,\"initContainers\":[{\"env\":[{\"name\":\"DISABLE_TCP_EARLY_DEMUX\",\"value\":\"false\"},{\"name\":\"ENABLE_IPv6\",\"value\":\"false\"}],\"image\":\"602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.10.1-eksbuild.1\",\"name\":\"aws-vpc-cni-init\",\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/host/opt/cni/bin\",\"name\":\"cni-bin-dir\"}]}],\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"aws-node\",\"terminationGracePeriodSeconds\":10,\"tolerations\":[{\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/opt/cni/bin\"},\"name\":\"cni-bin-dir\"},{\"hostPath\":{\"path\":\"/etc/cni/net.d\"},\"name\":\"cni-net-dir\"},{\"hostPath\":{\"path\":\"/var/run/dockershim.sock\"},\"name\":\"dockershim\"},{\"hostPath\":{\"path\":\"/run/xtables.lock\"},\"name\":\"xtables-lock\"},{\"hostPath\":{\"path\":\"/var/log/aws-routed-eni\",\"type\":\"DirectoryOrCreate\"},\"name\":\"log-dir\"},{\"hostPath\":{\"path\":\"/var/run/aws-node\",\"type\":\"DirectoryOrCreate\"},\"name\":\"run-dir\"}]}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":\"10%\"},\"type\":\"RollingUpdate\"}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "aws-node"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "aws-node"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "cni-bin-dir",
                                "hostPath": {
                                    "path": "/opt/cni/bin",
                                    "type": ""
                                }
                            },
                            {
                                "name": "cni-net-dir",
                                "hostPath": {
                                    "path": "/etc/cni/net.d",
                                    "type": ""
                                }
                            },
                            {
                                "name": "dockershim",
                                "hostPath": {
                                    "path": "/var/run/dockershim.sock",
                                    "type": ""
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": ""
                                }
                            },
                            {
                                "name": "log-dir",
                                "hostPath": {
                                    "path": "/var/log/aws-routed-eni",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "run-dir",
                                "hostPath": {
                                    "path": "/var/run/aws-node",
                                    "type": "DirectoryOrCreate"
                                }
                            }
                        ],
                        "initContainers": [
                            {
                                "name": "aws-vpc-cni-init",
                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.10.1-eksbuild.1",
                                "env": [
                                    {
                                        "name": "DISABLE_TCP_EARLY_DEMUX",
                                        "value": "false"
                                    },
                                    {
                                        "name": "ENABLE_IPv6",
                                        "value": "false"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "cni-bin-dir",
                                        "mountPath": "/host/opt/cni/bin"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "aws-node",
                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.10.1-eksbuild.1",
                                "ports": [
                                    {
                                        "name": "metrics",
                                        "hostPort": 61678,
                                        "containerPort": 61678,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "ADDITIONAL_ENI_TAGS",
                                        "value": "{}"
                                    },
                                    {
                                        "name": "AWS_VPC_CNI_NODE_PORT_SUPPORT",
                                        "value": "true"
                                    },
                                    {
                                        "name": "AWS_VPC_ENI_MTU",
                                        "value": "9001"
                                    },
                                    {
                                        "name": "AWS_VPC_K8S_CNI_CONFIGURE_RPFILTER",
                                        "value": "false"
                                    },
                                    {
                                        "name": "AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG",
                                        "value": "false"
                                    },
                                    {
                                        "name": "AWS_VPC_K8S_CNI_EXTERNALSNAT",
                                        "value": "false"
                                    },
                                    {
                                        "name": "AWS_VPC_K8S_CNI_LOGLEVEL",
                                        "value": "DEBUG"
                                    },
                                    {
                                        "name": "AWS_VPC_K8S_CNI_LOG_FILE",
                                        "value": "/host/var/log/aws-routed-eni/ipamd.log"
                                    },
                                    {
                                        "name": "AWS_VPC_K8S_CNI_RANDOMIZESNAT",
                                        "value": "prng"
                                    },
                                    {
                                        "name": "AWS_VPC_K8S_CNI_VETHPREFIX",
                                        "value": "eni"
                                    },
                                    {
                                        "name": "AWS_VPC_K8S_PLUGIN_LOG_FILE",
                                        "value": "/var/log/aws-routed-eni/plugin.log"
                                    },
                                    {
                                        "name": "AWS_VPC_K8S_PLUGIN_LOG_LEVEL",
                                        "value": "DEBUG"
                                    },
                                    {
                                        "name": "DISABLE_INTROSPECTION",
                                        "value": "false"
                                    },
                                    {
                                        "name": "DISABLE_METRICS",
                                        "value": "false"
                                    },
                                    {
                                        "name": "DISABLE_NETWORK_RESOURCE_PROVISIONING",
                                        "value": "false"
                                    },
                                    {
                                        "name": "ENABLE_IPv4",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ENABLE_IPv6",
                                        "value": "false"
                                    },
                                    {
                                        "name": "ENABLE_POD_ENI",
                                        "value": "false"
                                    },
                                    {
                                        "name": "ENABLE_PREFIX_DELEGATION",
                                        "value": "false"
                                    },
                                    {
                                        "name": "MY_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "WARM_ENI_TARGET",
                                        "value": "1"
                                    },
                                    {
                                        "name": "WARM_PREFIX_TARGET",
                                        "value": "1"
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "25m"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "cni-bin-dir",
                                        "mountPath": "/host/opt/cni/bin"
                                    },
                                    {
                                        "name": "cni-net-dir",
                                        "mountPath": "/host/etc/cni/net.d"
                                    },
                                    {
                                        "name": "log-dir",
                                        "mountPath": "/host/var/log/aws-routed-eni"
                                    },
                                    {
                                        "name": "run-dir",
                                        "mountPath": "/var/run/aws-node"
                                    },
                                    {
                                        "name": "dockershim",
                                        "mountPath": "/var/run/dockershim.sock"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    }
                                ],
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/app/grpc-health-probe",
                                            "-addr=:50051",
                                            "-connect-timeout=5s",
                                            "-rpc-timeout=5s"
                                        ]
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/app/grpc-health-probe",
                                            "-addr=:50051",
                                            "-connect-timeout=5s",
                                            "-rpc-timeout=5s"
                                        ]
                                    },
                                    "initialDelaySeconds": 1,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_ADMIN"
                                        ]
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 10,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "aws-node",
                        "serviceAccount": "aws-node",
                        "hostNetwork": true,
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/arch",
                                                    "operator": "In",
                                                    "values": [
                                                        "amd64",
                                                        "arm64"
                                                    ]
                                                },
                                                {
                                                    "key": "eks.amazonaws.com/compute-type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "fargate"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "10%",
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 2,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 2,
                "numberReady": 2,
                "observedGeneration": 1,
                "updatedNumberScheduled": 2,
                "numberAvailable": 2
            }
        },
        {
            "metadata": {
                "name": "kube-proxy",
                "namespace": "kube-system",
                "uid": "f6d46ae7-4cec-4c04-bf4e-08724f5c78ec",
                "resourceVersion": "1931",
                "generation": 1,
                "creationTimestamp": "2022-07-21T16:14:47Z",
                "labels": {
                    "eks.amazonaws.com/component": "kube-proxy",
                    "k8s-app": "kube-proxy"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"eks.amazonaws.com/component\":\"kube-proxy\",\"k8s-app\":\"kube-proxy\"},\"name\":\"kube-proxy\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"kube-proxy\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"kube-proxy\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]},{\"key\":\"kubernetes.io/arch\",\"operator\":\"In\",\"values\":[\"amd64\",\"arm64\"]},{\"key\":\"eks.amazonaws.com/compute-type\",\"operator\":\"NotIn\",\"values\":[\"fargate\"]}]}]}}},\"containers\":[{\"command\":[\"kube-proxy\",\"--v=2\",\"--config=/var/lib/kube-proxy-config/config\",\"--hostname-override=$(NODE_NAME)\"],\"env\":[{\"name\":\"NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.22.6-eksbuild.1\",\"name\":\"kube-proxy\",\"resources\":{\"requests\":{\"cpu\":\"100m\"}},\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/var/log\",\"name\":\"varlog\",\"readOnly\":false},{\"mountPath\":\"/run/xtables.lock\",\"name\":\"xtables-lock\",\"readOnly\":false},{\"mountPath\":\"/lib/modules\",\"name\":\"lib-modules\",\"readOnly\":true},{\"mountPath\":\"/var/lib/kube-proxy/\",\"name\":\"kubeconfig\"},{\"mountPath\":\"/var/lib/kube-proxy-config/\",\"name\":\"config\"}]}],\"hostNetwork\":true,\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"kube-proxy\",\"tolerations\":[{\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/var/log\"},\"name\":\"varlog\"},{\"hostPath\":{\"path\":\"/run/xtables.lock\",\"type\":\"FileOrCreate\"},\"name\":\"xtables-lock\"},{\"hostPath\":{\"path\":\"/lib/modules\"},\"name\":\"lib-modules\"},{\"configMap\":{\"name\":\"kube-proxy\"},\"name\":\"kubeconfig\"},{\"configMap\":{\"name\":\"kube-proxy-config\"},\"name\":\"config\"}]}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":\"10%\"},\"type\":\"RollingUpdate\"}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-proxy"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-proxy"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "varlog",
                                "hostPath": {
                                    "path": "/var/log",
                                    "type": ""
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            },
                            {
                                "name": "kubeconfig",
                                "configMap": {
                                    "name": "kube-proxy",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "config",
                                "configMap": {
                                    "name": "kube-proxy-config",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kube-proxy",
                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.22.6-eksbuild.1",
                                "command": [
                                    "kube-proxy",
                                    "--v=2",
                                    "--config=/var/lib/kube-proxy-config/config",
                                    "--hostname-override=$(NODE_NAME)"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "100m"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "varlog",
                                        "mountPath": "/var/log"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    },
                                    {
                                        "name": "kubeconfig",
                                        "mountPath": "/var/lib/kube-proxy/"
                                    },
                                    {
                                        "name": "config",
                                        "mountPath": "/var/lib/kube-proxy-config/"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "kube-proxy",
                        "serviceAccount": "kube-proxy",
                        "hostNetwork": true,
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/arch",
                                                    "operator": "In",
                                                    "values": [
                                                        "amd64",
                                                        "arm64"
                                                    ]
                                                },
                                                {
                                                    "key": "eks.amazonaws.com/compute-type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "fargate"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "10%",
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 2,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 2,
                "numberReady": 2,
                "observedGeneration": 1,
                "updatedNumberScheduled": 2,
                "numberAvailable": 2
            }
        }
    ]
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "11424"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns",
                "namespace": "kube-system",
                "uid": "698caf37-f824-4098-9c67-c88e2fe60a1a",
                "resourceVersion": "2147",
                "generation": 1,
                "creationTimestamp": "2022-07-21T16:14:47Z",
                "labels": {
                    "eks.amazonaws.com/component": "coredns",
                    "k8s-app": "kube-dns",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"eks.amazonaws.com/component\":\"coredns\",\"k8s-app\":\"kube-dns\",\"kubernetes.io/name\":\"CoreDNS\"},\"name\":\"coredns\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"eks.amazonaws.com/component\":\"coredns\",\"k8s-app\":\"kube-dns\"}},\"strategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"eks.amazonaws.com/compute-type\":\"ec2\"},\"labels\":{\"eks.amazonaws.com/component\":\"coredns\",\"k8s-app\":\"kube-dns\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"beta.kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]},{\"key\":\"beta.kubernetes.io/arch\",\"operator\":\"In\",\"values\":[\"amd64\",\"arm64\"]}]}]}},\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"k8s-app\",\"operator\":\"In\",\"values\":[\"kube-dns\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":100}]}},\"containers\":[{\"args\":[\"-conf\",\"/etc/coredns/Corefile\"],\"image\":\"602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.8.7-eksbuild.1\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/health\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"successThreshold\":1,\"timeoutSeconds\":5},\"name\":\"coredns\",\"ports\":[{\"containerPort\":53,\"name\":\"dns\",\"protocol\":\"UDP\"},{\"containerPort\":53,\"name\":\"dns-tcp\",\"protocol\":\"TCP\"},{\"containerPort\":9153,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/health\",\"port\":8080,\"scheme\":\"HTTP\"}},\"resources\":{\"limits\":{\"memory\":\"170Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"70Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"add\":[\"NET_BIND_SERVICE\"],\"drop\":[\"all\"]},\"readOnlyRootFilesystem\":true},\"volumeMounts\":[{\"mountPath\":\"/etc/coredns\",\"name\":\"config-volume\",\"readOnly\":true},{\"mountPath\":\"/tmp\",\"name\":\"tmp\"}]}],\"dnsPolicy\":\"Default\",\"priorityClassName\":\"system-cluster-critical\",\"serviceAccountName\":\"coredns\",\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"},{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"}],\"volumes\":[{\"emptyDir\":{},\"name\":\"tmp\"},{\"configMap\":{\"items\":[{\"key\":\"Corefile\",\"path\":\"Corefile\"}],\"name\":\"coredns\"},\"name\":\"config-volume\"}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "eks.amazonaws.com/component": "coredns",
                        "k8s-app": "kube-dns"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "eks.amazonaws.com/component": "coredns",
                            "k8s-app": "kube-dns"
                        },
                        "annotations": {
                            "eks.amazonaws.com/compute-type": "ec2"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "tmp",
                                "emptyDir": {}
                            },
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.8.7-eksbuild.1",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    },
                                    {
                                        "name": "tmp",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "beta.kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "beta.kubernetes.io/arch",
                                                    "operator": "In",
                                                    "values": [
                                                        "amd64",
                                                        "arm64"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2022-07-21T16:24:03Z",
                        "lastTransitionTime": "2022-07-21T16:24:03Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2022-07-21T16:24:36Z",
                        "lastTransitionTime": "2022-07-21T16:14:50Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"coredns-7f5998f4c\" has successfully progressed."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "11428"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-7f5998f4c",
                "namespace": "kube-system",
                "uid": "a606c2ca-50c6-42b3-a0b2-b8433c256f58",
                "resourceVersion": "2146",
                "generation": 1,
                "creationTimestamp": "2022-07-21T16:14:50Z",
                "labels": {
                    "eks.amazonaws.com/component": "coredns",
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "7f5998f4c"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "3",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns",
                        "uid": "698caf37-f824-4098-9c67-c88e2fe60a1a",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "eks.amazonaws.com/component": "coredns",
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "7f5998f4c"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "eks.amazonaws.com/component": "coredns",
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "7f5998f4c"
                        },
                        "annotations": {
                            "eks.amazonaws.com/compute-type": "ec2"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "tmp",
                                "emptyDir": {}
                            },
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.8.7-eksbuild.1",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    },
                                    {
                                        "name": "tmp",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "beta.kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "beta.kubernetes.io/arch",
                                                    "operator": "In",
                                                    "values": [
                                                        "amd64",
                                                        "arm64"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                }
            },
            "status": {
                "replicas": 2,
                "fullyLabeledReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "11428"
    },
    "items": [
        {
            "metadata": {
                "name": "aws-node-6tffv",
                "generateName": "aws-node-",
                "namespace": "kube-system",
                "uid": "890e63a2-7829-4ccc-bc04-079de4e568d3",
                "resourceVersion": "1956",
                "creationTimestamp": "2022-07-21T16:23:28Z",
                "labels": {
                    "controller-revision-hash": "5fcbd59b8b",
                    "k8s-app": "aws-node",
                    "pod-template-generation": "1"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "aws-node",
                        "uid": "1a9f606e-2ec1-4742-a9f7-9f547bd6b702",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "cni-bin-dir",
                        "hostPath": {
                            "path": "/opt/cni/bin",
                            "type": ""
                        }
                    },
                    {
                        "name": "cni-net-dir",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        }
                    },
                    {
                        "name": "dockershim",
                        "hostPath": {
                            "path": "/var/run/dockershim.sock",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": ""
                        }
                    },
                    {
                        "name": "log-dir",
                        "hostPath": {
                            "path": "/var/log/aws-routed-eni",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "run-dir",
                        "hostPath": {
                            "path": "/var/run/aws-node",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "kube-api-access-z887h",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "initContainers": [
                    {
                        "name": "aws-vpc-cni-init",
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.10.1-eksbuild.1",
                        "env": [
                            {
                                "name": "DISABLE_TCP_EARLY_DEMUX",
                                "value": "false"
                            },
                            {
                                "name": "ENABLE_IPv6",
                                "value": "false"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "cni-bin-dir",
                                "mountPath": "/host/opt/cni/bin"
                            },
                            {
                                "name": "kube-api-access-z887h",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "aws-node",
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.10.1-eksbuild.1",
                        "ports": [
                            {
                                "name": "metrics",
                                "hostPort": 61678,
                                "containerPort": 61678,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "ADDITIONAL_ENI_TAGS",
                                "value": "{}"
                            },
                            {
                                "name": "AWS_VPC_CNI_NODE_PORT_SUPPORT",
                                "value": "true"
                            },
                            {
                                "name": "AWS_VPC_ENI_MTU",
                                "value": "9001"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_CONFIGURE_RPFILTER",
                                "value": "false"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG",
                                "value": "false"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_EXTERNALSNAT",
                                "value": "false"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_LOGLEVEL",
                                "value": "DEBUG"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_LOG_FILE",
                                "value": "/host/var/log/aws-routed-eni/ipamd.log"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_RANDOMIZESNAT",
                                "value": "prng"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_VETHPREFIX",
                                "value": "eni"
                            },
                            {
                                "name": "AWS_VPC_K8S_PLUGIN_LOG_FILE",
                                "value": "/var/log/aws-routed-eni/plugin.log"
                            },
                            {
                                "name": "AWS_VPC_K8S_PLUGIN_LOG_LEVEL",
                                "value": "DEBUG"
                            },
                            {
                                "name": "DISABLE_INTROSPECTION",
                                "value": "false"
                            },
                            {
                                "name": "DISABLE_METRICS",
                                "value": "false"
                            },
                            {
                                "name": "DISABLE_NETWORK_RESOURCE_PROVISIONING",
                                "value": "false"
                            },
                            {
                                "name": "ENABLE_IPv4",
                                "value": "true"
                            },
                            {
                                "name": "ENABLE_IPv6",
                                "value": "false"
                            },
                            {
                                "name": "ENABLE_POD_ENI",
                                "value": "false"
                            },
                            {
                                "name": "ENABLE_PREFIX_DELEGATION",
                                "value": "false"
                            },
                            {
                                "name": "MY_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "WARM_ENI_TARGET",
                                "value": "1"
                            },
                            {
                                "name": "WARM_PREFIX_TARGET",
                                "value": "1"
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "25m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-bin-dir",
                                "mountPath": "/host/opt/cni/bin"
                            },
                            {
                                "name": "cni-net-dir",
                                "mountPath": "/host/etc/cni/net.d"
                            },
                            {
                                "name": "log-dir",
                                "mountPath": "/host/var/log/aws-routed-eni"
                            },
                            {
                                "name": "run-dir",
                                "mountPath": "/var/run/aws-node"
                            },
                            {
                                "name": "dockershim",
                                "mountPath": "/var/run/dockershim.sock"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "kube-api-access-z887h",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/app/grpc-health-probe",
                                    "-addr=:50051",
                                    "-connect-timeout=5s",
                                    "-rpc-timeout=5s"
                                ]
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "/app/grpc-health-probe",
                                    "-addr=:50051",
                                    "-connect-timeout=5s",
                                    "-rpc-timeout=5s"
                                ]
                            },
                            "initialDelaySeconds": 1,
                            "timeoutSeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_ADMIN"
                                ]
                            }
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 10,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "aws-node",
                "serviceAccount": "aws-node",
                "nodeName": "ip-192-168-48-116.ec2.internal",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "ip-192-168-48-116.ec2.internal"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T16:23:45Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T16:23:51Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T16:23:51Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T16:23:28Z"
                    }
                ],
                "hostIP": "192.168.48.116",
                "podIP": "192.168.48.116",
                "podIPs": [
                    {
                        "ip": "192.168.48.116"
                    }
                ],
                "startTime": "2022-07-21T16:23:29Z",
                "initContainerStatuses": [
                    {
                        "name": "aws-vpc-cni-init",
                        "state": {
                            "terminated": {
                                "exitCode": 0,
                                "reason": "Completed",
                                "startedAt": "2022-07-21T16:23:45Z",
                                "finishedAt": "2022-07-21T16:23:45Z",
                                "containerID": "docker://fe49f9cbb58b962670b1475d6b7d57c6e86c455c72a2790afb1e84ade4e4c4fe"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.10.1-eksbuild.1",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init@sha256:6c70af7bf257712105a89a896b2afb86c86ace865d32eb73765bf29163a08c56",
                        "containerID": "docker://fe49f9cbb58b962670b1475d6b7d57c6e86c455c72a2790afb1e84ade4e4c4fe"
                    }
                ],
                "containerStatuses": [
                    {
                        "name": "aws-node",
                        "state": {
                            "running": {
                                "startedAt": "2022-07-21T16:23:49Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.10.1-eksbuild.1",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni@sha256:3b6db8b6fb23424366ef91d7e9e818e42291316fa81c00c2c75dcafa614340c5",
                        "containerID": "docker://876d460299bbac6a915ad7b31353fbe55c9259261b6f8bdf19924d95ee3c6947",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "aws-node-97d5d",
                "generateName": "aws-node-",
                "namespace": "kube-system",
                "uid": "b78ed540-cd0e-42d5-9048-132fa47c2b3c",
                "resourceVersion": "1984",
                "creationTimestamp": "2022-07-21T16:23:34Z",
                "labels": {
                    "controller-revision-hash": "5fcbd59b8b",
                    "k8s-app": "aws-node",
                    "pod-template-generation": "1"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "aws-node",
                        "uid": "1a9f606e-2ec1-4742-a9f7-9f547bd6b702",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "cni-bin-dir",
                        "hostPath": {
                            "path": "/opt/cni/bin",
                            "type": ""
                        }
                    },
                    {
                        "name": "cni-net-dir",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        }
                    },
                    {
                        "name": "dockershim",
                        "hostPath": {
                            "path": "/var/run/dockershim.sock",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": ""
                        }
                    },
                    {
                        "name": "log-dir",
                        "hostPath": {
                            "path": "/var/log/aws-routed-eni",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "run-dir",
                        "hostPath": {
                            "path": "/var/run/aws-node",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "kube-api-access-4gdwv",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "initContainers": [
                    {
                        "name": "aws-vpc-cni-init",
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.10.1-eksbuild.1",
                        "env": [
                            {
                                "name": "DISABLE_TCP_EARLY_DEMUX",
                                "value": "false"
                            },
                            {
                                "name": "ENABLE_IPv6",
                                "value": "false"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "cni-bin-dir",
                                "mountPath": "/host/opt/cni/bin"
                            },
                            {
                                "name": "kube-api-access-4gdwv",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "aws-node",
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.10.1-eksbuild.1",
                        "ports": [
                            {
                                "name": "metrics",
                                "hostPort": 61678,
                                "containerPort": 61678,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "ADDITIONAL_ENI_TAGS",
                                "value": "{}"
                            },
                            {
                                "name": "AWS_VPC_CNI_NODE_PORT_SUPPORT",
                                "value": "true"
                            },
                            {
                                "name": "AWS_VPC_ENI_MTU",
                                "value": "9001"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_CONFIGURE_RPFILTER",
                                "value": "false"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG",
                                "value": "false"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_EXTERNALSNAT",
                                "value": "false"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_LOGLEVEL",
                                "value": "DEBUG"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_LOG_FILE",
                                "value": "/host/var/log/aws-routed-eni/ipamd.log"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_RANDOMIZESNAT",
                                "value": "prng"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_VETHPREFIX",
                                "value": "eni"
                            },
                            {
                                "name": "AWS_VPC_K8S_PLUGIN_LOG_FILE",
                                "value": "/var/log/aws-routed-eni/plugin.log"
                            },
                            {
                                "name": "AWS_VPC_K8S_PLUGIN_LOG_LEVEL",
                                "value": "DEBUG"
                            },
                            {
                                "name": "DISABLE_INTROSPECTION",
                                "value": "false"
                            },
                            {
                                "name": "DISABLE_METRICS",
                                "value": "false"
                            },
                            {
                                "name": "DISABLE_NETWORK_RESOURCE_PROVISIONING",
                                "value": "false"
                            },
                            {
                                "name": "ENABLE_IPv4",
                                "value": "true"
                            },
                            {
                                "name": "ENABLE_IPv6",
                                "value": "false"
                            },
                            {
                                "name": "ENABLE_POD_ENI",
                                "value": "false"
                            },
                            {
                                "name": "ENABLE_PREFIX_DELEGATION",
                                "value": "false"
                            },
                            {
                                "name": "MY_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "WARM_ENI_TARGET",
                                "value": "1"
                            },
                            {
                                "name": "WARM_PREFIX_TARGET",
                                "value": "1"
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "25m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-bin-dir",
                                "mountPath": "/host/opt/cni/bin"
                            },
                            {
                                "name": "cni-net-dir",
                                "mountPath": "/host/etc/cni/net.d"
                            },
                            {
                                "name": "log-dir",
                                "mountPath": "/host/var/log/aws-routed-eni"
                            },
                            {
                                "name": "run-dir",
                                "mountPath": "/var/run/aws-node"
                            },
                            {
                                "name": "dockershim",
                                "mountPath": "/var/run/dockershim.sock"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "kube-api-access-4gdwv",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/app/grpc-health-probe",
                                    "-addr=:50051",
                                    "-connect-timeout=5s",
                                    "-rpc-timeout=5s"
                                ]
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "/app/grpc-health-probe",
                                    "-addr=:50051",
                                    "-connect-timeout=5s",
                                    "-rpc-timeout=5s"
                                ]
                            },
                            "initialDelaySeconds": 1,
                            "timeoutSeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_ADMIN"
                                ]
                            }
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 10,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "aws-node",
                "serviceAccount": "aws-node",
                "nodeName": "ip-192-168-29-13.ec2.internal",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "ip-192-168-29-13.ec2.internal"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T16:23:52Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T16:23:58Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T16:23:58Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T16:23:34Z"
                    }
                ],
                "hostIP": "192.168.29.13",
                "podIP": "192.168.29.13",
                "podIPs": [
                    {
                        "ip": "192.168.29.13"
                    }
                ],
                "startTime": "2022-07-21T16:23:34Z",
                "initContainerStatuses": [
                    {
                        "name": "aws-vpc-cni-init",
                        "state": {
                            "terminated": {
                                "exitCode": 0,
                                "reason": "Completed",
                                "startedAt": "2022-07-21T16:23:51Z",
                                "finishedAt": "2022-07-21T16:23:51Z",
                                "containerID": "docker://6e1de85c86d2edb6a468d6f3464fb0142247097b16fa57a52c90714e4da93ec8"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.10.1-eksbuild.1",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init@sha256:6c70af7bf257712105a89a896b2afb86c86ace865d32eb73765bf29163a08c56",
                        "containerID": "docker://6e1de85c86d2edb6a468d6f3464fb0142247097b16fa57a52c90714e4da93ec8"
                    }
                ],
                "containerStatuses": [
                    {
                        "name": "aws-node",
                        "state": {
                            "running": {
                                "startedAt": "2022-07-21T16:23:56Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.10.1-eksbuild.1",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni@sha256:3b6db8b6fb23424366ef91d7e9e818e42291316fa81c00c2c75dcafa614340c5",
                        "containerID": "docker://7116f196bedc26838f3e6b0e2a8d6d98cfed05dcf688bda92f1ab8d009c5eff6",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-7f5998f4c-pvs6f",
                "generateName": "coredns-7f5998f4c-",
                "namespace": "kube-system",
                "uid": "5bdf7b3d-6515-44f6-9f39-e6d58a6bb02b",
                "resourceVersion": "2017",
                "creationTimestamp": "2022-07-21T16:14:51Z",
                "labels": {
                    "eks.amazonaws.com/component": "coredns",
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "7f5998f4c"
                },
                "annotations": {
                    "eks.amazonaws.com/compute-type": "ec2",
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-7f5998f4c",
                        "uid": "a606c2ca-50c6-42b3-a0b2-b8433c256f58",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "tmp",
                        "emptyDir": {}
                    },
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-flqgn",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.8.7-eksbuild.1",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "tmp",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "kube-api-access-flqgn",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "ip-192-168-48-116.ec2.internal",
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/os",
                                            "operator": "In",
                                            "values": [
                                                "linux"
                                            ]
                                        },
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "arm64"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T16:23:59Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T16:24:03Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T16:24:03Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T16:23:58Z"
                    }
                ],
                "hostIP": "192.168.48.116",
                "podIP": "192.168.42.81",
                "podIPs": [
                    {
                        "ip": "192.168.42.81"
                    }
                ],
                "startTime": "2022-07-21T16:23:59Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2022-07-21T16:24:02Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.8.7-eksbuild.1",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns@sha256:09c4a9684cc63dc17565b656b57797498b4a5d5e10f4286ce5ad6ff7435d7f3d",
                        "containerID": "docker://febb3b0ca74eeb2b567798b6fcd837402bcb1900394a148fc8c5849c27536b06",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-7f5998f4c-ws7w2",
                "generateName": "coredns-7f5998f4c-",
                "namespace": "kube-system",
                "uid": "653e4d17-cbb5-47ec-9e53-2764ccdec1b6",
                "resourceVersion": "2144",
                "creationTimestamp": "2022-07-21T16:14:51Z",
                "labels": {
                    "eks.amazonaws.com/component": "coredns",
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "7f5998f4c"
                },
                "annotations": {
                    "eks.amazonaws.com/compute-type": "ec2",
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-7f5998f4c",
                        "uid": "a606c2ca-50c6-42b3-a0b2-b8433c256f58",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "tmp",
                        "emptyDir": {}
                    },
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-pnz8k",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.8.7-eksbuild.1",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "tmp",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "kube-api-access-pnz8k",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "ip-192-168-48-116.ec2.internal",
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/os",
                                            "operator": "In",
                                            "values": [
                                                "linux"
                                            ]
                                        },
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "arm64"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T16:23:58Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T16:24:36Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T16:24:36Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T16:23:58Z"
                    }
                ],
                "hostIP": "192.168.48.116",
                "podIP": "192.168.32.179",
                "podIPs": [
                    {
                        "ip": "192.168.32.179"
                    }
                ],
                "startTime": "2022-07-21T16:23:58Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2022-07-21T16:24:35Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.8.7-eksbuild.1",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns@sha256:09c4a9684cc63dc17565b656b57797498b4a5d5e10f4286ce5ad6ff7435d7f3d",
                        "containerID": "docker://701bf6717e11855dae0c4a33e83efd6cb413b41fc05d50f4add9a30fbdf31e17",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-7hgfh",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "13999229-0312-47d9-936b-8368c89584ea",
                "resourceVersion": "1930",
                "creationTimestamp": "2022-07-21T16:23:34Z",
                "labels": {
                    "controller-revision-hash": "799c56dccb",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "f6d46ae7-4cec-4c04-bf4e-08724f5c78ec",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "varlog",
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kubeconfig",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "config",
                        "configMap": {
                            "name": "kube-proxy-config",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-4ptfd",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.22.6-eksbuild.1",
                        "command": [
                            "kube-proxy",
                            "--v=2",
                            "--config=/var/lib/kube-proxy-config/config",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "varlog",
                                "mountPath": "/var/log"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kubeconfig",
                                "mountPath": "/var/lib/kube-proxy/"
                            },
                            {
                                "name": "config",
                                "mountPath": "/var/lib/kube-proxy-config/"
                            },
                            {
                                "name": "kube-api-access-4ptfd",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "ip-192-168-29-13.ec2.internal",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "ip-192-168-29-13.ec2.internal"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T16:23:34Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T16:23:46Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T16:23:46Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T16:23:34Z"
                    }
                ],
                "hostIP": "192.168.29.13",
                "podIP": "192.168.29.13",
                "podIPs": [
                    {
                        "ip": "192.168.29.13"
                    }
                ],
                "startTime": "2022-07-21T16:23:34Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2022-07-21T16:23:45Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.22.6-eksbuild.1",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy@sha256:c8abb4b8efc94090458f34e5f456791d9f7f57b5c99517b6b4e197305c1f10f6",
                        "containerID": "docker://65906d9a1e965bdf8f248fd754c08bc17bb6bc90be8b446b51809a94e1c1fee9",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-jgnfq",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "53943b4d-2570-4c24-a6e2-8c73734b68b8",
                "resourceVersion": "1901",
                "creationTimestamp": "2022-07-21T16:23:28Z",
                "labels": {
                    "controller-revision-hash": "799c56dccb",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "f6d46ae7-4cec-4c04-bf4e-08724f5c78ec",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "varlog",
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kubeconfig",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "config",
                        "configMap": {
                            "name": "kube-proxy-config",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-dhqft",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.22.6-eksbuild.1",
                        "command": [
                            "kube-proxy",
                            "--v=2",
                            "--config=/var/lib/kube-proxy-config/config",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "varlog",
                                "mountPath": "/var/log"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kubeconfig",
                                "mountPath": "/var/lib/kube-proxy/"
                            },
                            {
                                "name": "config",
                                "mountPath": "/var/lib/kube-proxy-config/"
                            },
                            {
                                "name": "kube-api-access-dhqft",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "ip-192-168-48-116.ec2.internal",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "ip-192-168-48-116.ec2.internal"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T16:23:28Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T16:23:40Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T16:23:40Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T16:23:28Z"
                    }
                ],
                "hostIP": "192.168.48.116",
                "podIP": "192.168.48.116",
                "podIPs": [
                    {
                        "ip": "192.168.48.116"
                    }
                ],
                "startTime": "2022-07-21T16:23:28Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2022-07-21T16:23:39Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.22.6-eksbuild.1",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy@sha256:c8abb4b8efc94090458f34e5f456791d9f7f57b5c99517b6b4e197305c1f10f6",
                        "containerID": "docker://4936733a45fd26b2bd99e05da116a5fbe18480d2f9e0d15279c93255801d69b2",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        }
    ]
}
==== START logs for container aws-vpc-cni-init of pod kube-system/aws-node-6tffv ====
+ PLUGIN_BINS='loopback portmap bandwidth aws-cni-support.sh'
+ for b in '$PLUGIN_BINS'
+ '[' '!' -f loopback ']'
+ for b in '$PLUGIN_BINS'
+ '[' '!' -f portmap ']'
+ for b in '$PLUGIN_BINS'
+ '[' '!' -f bandwidth ']'
+ for b in '$PLUGIN_BINS'
+ '[' '!' -f aws-cni-support.sh ']'
+ HOST_CNI_BIN_PATH=/host/opt/cni/bin
+ echo 'Copying CNI plugin binaries ... '
+ for b in '$PLUGIN_BINS'
+ install loopback /host/opt/cni/bin
Copying CNI plugin binaries ... 
+ for b in '$PLUGIN_BINS'
+ install portmap /host/opt/cni/bin
+ for b in '$PLUGIN_BINS'
+ install bandwidth /host/opt/cni/bin
+ for b in '$PLUGIN_BINS'
+ install aws-cni-support.sh /host/opt/cni/bin
+ echo 'Configure rp_filter loose... '
Configure rp_filter loose... 
++ get_metadata local-ipv4
+++ curl -X PUT http://169.254.169.254/latest/api/token -H 'X-aws-ec2-metadata-token-ttl-seconds: 60'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    56  100    56    0     0  14000      0 --:--:-- --:--:-- --:--:-- 14000
++ TOKEN=AQAAAGrsJYFjYEKYezg5B5N5LylMYIY9o0nUIGKxHbLQ5f2anGC0fg==
++ attempts=60
++ false
++ '[' 1 -gt 0 ']'
++ '[' 60 -eq 0 ']'
+++ curl -H 'X-aws-ec2-metadata-token: AQAAAGrsJYFjYEKYezg5B5N5LylMYIY9o0nUIGKxHbLQ5f2anGC0fg==' http://169.254.169.254/latest/meta-data/local-ipv4
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    14  100    14    0     0   4666      0 --:--:-- --:--:-- --:--:--  4666
++ meta=192.168.48.116
++ '[' 0 -gt 0 ']'
++ '[' 0 -gt 0 ']'
++ echo 192.168.48.116
+ HOST_IP=192.168.48.116
++ get_metadata mac
+++ curl -X PUT http://169.254.169.254/latest/api/token -H 'X-aws-ec2-metadata-token-ttl-seconds: 60'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    56  100    56    0     0  18666      0 --:--:-- --:--:-- --:--:-- 18666
++ TOKEN=AQAAAGrsJYE4RmOnFctGN0nMba2lKgtWUgeqP_nis5Mu2CYAd6YZPQ==
++ attempts=60
++ false
++ '[' 1 -gt 0 ']'
++ '[' 60 -eq 0 ']'
+++ curl -H 'X-aws-ec2-metadata-token: AQAAAGrsJYE4RmOnFctGN0nMba2lKgtWUgeqP_nis5Mu2CYAd6YZPQ==' http://169.254.169.254/latest/meta-data/mac
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    17  100    17    0     0   5666      0 --:--:-- --:--:-- --:--:--  5666
++ meta=0a:a2:f4:ca:fb:61
++ '[' 0 -gt 0 ']'
++ '[' 0 -gt 0 ']'
++ echo 0a:a2:f4:ca:fb:61
+ PRIMARY_MAC=0a:a2:f4:ca:fb:61
++ awk '-F[ :]+' '{print $2}'
++ grep -F 'link/ether 0a:a2:f4:ca:fb:61'
++ ip -o link show
+ PRIMARY_IF=eth0
+ sysctl -w net.ipv4.conf.eth0.rp_filter=2
net.ipv4.conf.eth0.rp_filter = 2
+ cat /proc/sys/net/ipv4/conf/eth0/rp_filter
2
+ '[' false == true ']'
+ sysctl -e -w net.ipv4.tcp_early_demux=1
net.ipv4.tcp_early_demux = 1
+ '[' false == true ']'
+ echo 'CNI init container done'
CNI init container done
==== END logs for container aws-vpc-cni-init of pod kube-system/aws-node-6tffv ====
==== START logs for container aws-node of pod kube-system/aws-node-6tffv ====
{"level":"info","ts":"2022-07-21T16:23:49.619Z","caller":"entrypoint.sh","msg":"Validating env variables ..."}
{"level":"info","ts":"2022-07-21T16:23:49.621Z","caller":"entrypoint.sh","msg":"Install CNI binaries.."}
{"level":"info","ts":"2022-07-21T16:23:49.646Z","caller":"entrypoint.sh","msg":"Starting IPAM daemon in the background ... "}
{"level":"info","ts":"2022-07-21T16:23:49.647Z","caller":"entrypoint.sh","msg":"Checking for IPAM connectivity ... "}
{"level":"info","ts":"2022-07-21T16:23:51.663Z","caller":"entrypoint.sh","msg":"Retrying waiting for IPAM-D"}
{"level":"info","ts":"2022-07-21T16:23:51.688Z","caller":"entrypoint.sh","msg":"Copying config file ... "}
{"level":"info","ts":"2022-07-21T16:23:51.698Z","caller":"entrypoint.sh","msg":"Successfully copied CNI plugin binary and config file."}
{"level":"info","ts":"2022-07-21T16:23:51.699Z","caller":"entrypoint.sh","msg":"Foregrounding IPAM daemon ..."}
==== END logs for container aws-node of pod kube-system/aws-node-6tffv ====
==== START logs for container aws-vpc-cni-init of pod kube-system/aws-node-97d5d ====
+ PLUGIN_BINS='loopback portmap bandwidth aws-cni-support.sh'
+ for b in '$PLUGIN_BINS'
+ '[' '!' -f loopback ']'
+ for b in '$PLUGIN_BINS'
+ '[' '!' -f portmap ']'
+ for b in '$PLUGIN_BINS'
+ '[' '!' -f bandwidth ']'
+ for b in '$PLUGIN_BINS'
+ '[' '!' -f aws-cni-support.sh ']'
+ HOST_CNI_BIN_PATH=/host/opt/cni/bin
+ echo 'Copying CNI plugin binaries ... '
+ for b in '$PLUGIN_BINS'
+ install loopback /host/opt/cni/bin
Copying CNI plugin binaries ... 
+ for b in '$PLUGIN_BINS'
+ install portmap /host/opt/cni/bin
+ for b in '$PLUGIN_BINS'
+ install bandwidth /host/opt/cni/bin
+ for b in '$PLUGIN_BINS'
+ install aws-cni-support.sh /host/opt/cni/bin
+ echo 'Configure rp_filter loose... '
Configure rp_filter loose... 
++ get_metadata local-ipv4
+++ curl -X PUT http://169.254.169.254/latest/api/token -H 'X-aws-ec2-metadata-token-ttl-seconds: 60'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    56  100    56    0     0  14000      0 --:--:-- --:--:-- --:--:-- 18666
++ TOKEN=AQAAAPwZR4EnDkxnRFYd6UUNXuDYD-aDoQU30pA8NJrVzDM9UCS-Vg==
++ attempts=60
++ false
++ '[' 1 -gt 0 ']'
++ '[' 60 -eq 0 ']'
+++ curl -H 'X-aws-ec2-metadata-token: AQAAAPwZR4EnDkxnRFYd6UUNXuDYD-aDoQU30pA8NJrVzDM9UCS-Vg==' http://169.254.169.254/latest/meta-data/local-ipv4
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    13  100    13    0     0   4333      0 --:--:-- --:--:-- --:--:--  4333
++ meta=192.168.29.13
++ '[' 0 -gt 0 ']'
++ '[' 0 -gt 0 ']'
++ echo 192.168.29.13
+ HOST_IP=192.168.29.13
++ get_metadata mac
+++ curl -X PUT http://169.254.169.254/latest/api/token -H 'X-aws-ec2-metadata-token-ttl-seconds: 60'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    56  100    56    0     0  18666      0 --:--:-- --:--:-- --:--:-- 18666
++ TOKEN=AQAAAPwZR4FhVrL74_bYvi4-sXAqf26fnsAN1Oe7HW8wejZ5H2a6Gw==
++ attempts=60
++ false
++ '[' 1 -gt 0 ']'
++ '[' 60 -eq 0 ']'
+++ curl -H 'X-aws-ec2-metadata-token: AQAAAPwZR4FhVrL74_bYvi4-sXAqf26fnsAN1Oe7HW8wejZ5H2a6Gw==' http://169.254.169.254/latest/meta-data/mac
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    17  100    17    0     0   4250      0 --:--:-- --:--:-- --:--:--  5666
++ meta=0e:28:5e:25:65:bd
++ '[' 0 -gt 0 ']'
++ '[' 0 -gt 0 ']'
++ echo 0e:28:5e:25:65:bd
+ PRIMARY_MAC=0e:28:5e:25:65:bd
++ awk '-F[ :]+' '{print $2}'
++ grep -F 'link/ether 0e:28:5e:25:65:bd'
++ ip -o link show
+ PRIMARY_IF=eth0
+ sysctl -w net.ipv4.conf.eth0.rp_filter=2
net.ipv4.conf.eth0.rp_filter = 2
+ cat /proc/sys/net/ipv4/conf/eth0/rp_filter
2
+ '[' false == true ']'
+ sysctl -e -w net.ipv4.tcp_early_demux=1
net.ipv4.tcp_early_demux = 1
+ '[' false == true ']'
+ echo 'CNI init container done'
CNI init container done
==== END logs for container aws-vpc-cni-init of pod kube-system/aws-node-97d5d ====
==== START logs for container aws-node of pod kube-system/aws-node-97d5d ====
{"level":"info","ts":"2022-07-21T16:23:56.043Z","caller":"entrypoint.sh","msg":"Validating env variables ..."}
{"level":"info","ts":"2022-07-21T16:23:56.045Z","caller":"entrypoint.sh","msg":"Install CNI binaries.."}
{"level":"info","ts":"2022-07-21T16:23:56.067Z","caller":"entrypoint.sh","msg":"Starting IPAM daemon in the background ... "}
{"level":"info","ts":"2022-07-21T16:23:56.068Z","caller":"entrypoint.sh","msg":"Checking for IPAM connectivity ... "}
{"level":"info","ts":"2022-07-21T16:23:58.087Z","caller":"entrypoint.sh","msg":"Retrying waiting for IPAM-D"}
{"level":"info","ts":"2022-07-21T16:23:58.108Z","caller":"entrypoint.sh","msg":"Copying config file ... "}
{"level":"info","ts":"2022-07-21T16:23:58.119Z","caller":"entrypoint.sh","msg":"Successfully copied CNI plugin binary and config file."}
{"level":"info","ts":"2022-07-21T16:23:58.121Z","caller":"entrypoint.sh","msg":"Foregrounding IPAM daemon ..."}
==== END logs for container aws-node of pod kube-system/aws-node-97d5d ====
==== START logs for container coredns of pod kube-system/coredns-7f5998f4c-pvs6f ====
.:53
[INFO] plugin/reload: Running configuration MD5 = 47d57903c0f0ba4ee0626a17181e5d94
CoreDNS-1.8.7
linux/amd64, go1.17.7, a9adfd56
==== END logs for container coredns of pod kube-system/coredns-7f5998f4c-pvs6f ====
==== START logs for container coredns of pod kube-system/coredns-7f5998f4c-ws7w2 ====
.:53
[INFO] plugin/reload: Running configuration MD5 = 47d57903c0f0ba4ee0626a17181e5d94
CoreDNS-1.8.7
linux/amd64, go1.17.7, a9adfd56
==== END logs for container coredns of pod kube-system/coredns-7f5998f4c-ws7w2 ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-7hgfh ====
I0721 16:23:45.114954       1 flags.go:59] FLAG: --add-dir-header="false"
I0721 16:23:45.115002       1 flags.go:59] FLAG: --alsologtostderr="false"
I0721 16:23:45.115008       1 flags.go:59] FLAG: --bind-address="0.0.0.0"
I0721 16:23:45.115022       1 flags.go:59] FLAG: --bind-address-hard-fail="false"
I0721 16:23:45.115028       1 flags.go:59] FLAG: --boot-id-file="/proc/sys/kernel/random/boot_id"
I0721 16:23:45.115033       1 flags.go:59] FLAG: --cleanup="false"
I0721 16:23:45.115037       1 flags.go:59] FLAG: --cluster-cidr=""
I0721 16:23:45.115042       1 flags.go:59] FLAG: --config="/var/lib/kube-proxy-config/config"
I0721 16:23:45.115047       1 flags.go:59] FLAG: --config-sync-period="15m0s"
I0721 16:23:45.115052       1 flags.go:59] FLAG: --conntrack-max-per-core="32768"
I0721 16:23:45.115058       1 flags.go:59] FLAG: --conntrack-min="131072"
I0721 16:23:45.115062       1 flags.go:59] FLAG: --conntrack-tcp-timeout-close-wait="1h0m0s"
I0721 16:23:45.115067       1 flags.go:59] FLAG: --conntrack-tcp-timeout-established="24h0m0s"
I0721 16:23:45.115072       1 flags.go:59] FLAG: --detect-local-mode=""
I0721 16:23:45.115076       1 flags.go:59] FLAG: --feature-gates=""
I0721 16:23:45.115082       1 flags.go:59] FLAG: --healthz-bind-address="0.0.0.0:10256"
I0721 16:23:45.115087       1 flags.go:59] FLAG: --healthz-port="10256"
I0721 16:23:45.115092       1 flags.go:59] FLAG: --help="false"
I0721 16:23:45.115096       1 flags.go:59] FLAG: --hostname-override="ip-192-168-29-13.ec2.internal"
I0721 16:23:45.115106       1 flags.go:59] FLAG: --iptables-masquerade-bit="14"
I0721 16:23:45.115115       1 flags.go:59] FLAG: --iptables-min-sync-period="1s"
I0721 16:23:45.115120       1 flags.go:59] FLAG: --iptables-sync-period="30s"
I0721 16:23:45.115125       1 flags.go:59] FLAG: --ipvs-exclude-cidrs="[]"
I0721 16:23:45.115137       1 flags.go:59] FLAG: --ipvs-min-sync-period="0s"
I0721 16:23:45.115142       1 flags.go:59] FLAG: --ipvs-scheduler=""
I0721 16:23:45.115146       1 flags.go:59] FLAG: --ipvs-strict-arp="false"
I0721 16:23:45.115151       1 flags.go:59] FLAG: --ipvs-sync-period="30s"
I0721 16:23:45.115155       1 flags.go:59] FLAG: --ipvs-tcp-timeout="0s"
I0721 16:23:45.115159       1 flags.go:59] FLAG: --ipvs-tcpfin-timeout="0s"
I0721 16:23:45.115163       1 flags.go:59] FLAG: --ipvs-udp-timeout="0s"
I0721 16:23:45.115168       1 flags.go:59] FLAG: --kube-api-burst="10"
I0721 16:23:45.115172       1 flags.go:59] FLAG: --kube-api-content-type="application/vnd.kubernetes.protobuf"
I0721 16:23:45.115177       1 flags.go:59] FLAG: --kube-api-qps="5"
I0721 16:23:45.115186       1 flags.go:59] FLAG: --kubeconfig=""
I0721 16:23:45.115190       1 flags.go:59] FLAG: --log-backtrace-at=":0"
I0721 16:23:45.115198       1 flags.go:59] FLAG: --log-dir=""
I0721 16:23:45.115203       1 flags.go:59] FLAG: --log-file=""
I0721 16:23:45.115207       1 flags.go:59] FLAG: --log-file-max-size="1800"
I0721 16:23:45.115212       1 flags.go:59] FLAG: --log-flush-frequency="5s"
I0721 16:23:45.115216       1 flags.go:59] FLAG: --logtostderr="true"
I0721 16:23:45.115221       1 flags.go:59] FLAG: --machine-id-file="/etc/machine-id,/var/lib/dbus/machine-id"
I0721 16:23:45.115226       1 flags.go:59] FLAG: --masquerade-all="false"
I0721 16:23:45.115231       1 flags.go:59] FLAG: --master=""
I0721 16:23:45.115235       1 flags.go:59] FLAG: --metrics-bind-address="127.0.0.1:10249"
I0721 16:23:45.115240       1 flags.go:59] FLAG: --metrics-port="10249"
I0721 16:23:45.115244       1 flags.go:59] FLAG: --nodeport-addresses="[]"
I0721 16:23:45.115251       1 flags.go:59] FLAG: --one-output="false"
I0721 16:23:45.115255       1 flags.go:59] FLAG: --oom-score-adj="-999"
I0721 16:23:45.115259       1 flags.go:59] FLAG: --profiling="false"
I0721 16:23:45.115264       1 flags.go:59] FLAG: --proxy-mode=""
I0721 16:23:45.115269       1 flags.go:59] FLAG: --proxy-port-range=""
I0721 16:23:45.115274       1 flags.go:59] FLAG: --show-hidden-metrics-for-version=""
I0721 16:23:45.115278       1 flags.go:59] FLAG: --skip-headers="false"
I0721 16:23:45.115283       1 flags.go:59] FLAG: --skip-log-headers="false"
I0721 16:23:45.115287       1 flags.go:59] FLAG: --stderrthreshold="2"
I0721 16:23:45.115292       1 flags.go:59] FLAG: --udp-timeout="250ms"
I0721 16:23:45.115296       1 flags.go:59] FLAG: --v="2"
I0721 16:23:45.115300       1 flags.go:59] FLAG: --version="false"
I0721 16:23:45.115306       1 flags.go:59] FLAG: --vmodule=""
I0721 16:23:45.115311       1 flags.go:59] FLAG: --write-config-to=""
I0721 16:23:45.119273       1 feature_gate.go:245] feature gates: &{map[]}
I0721 16:23:45.119386       1 feature_gate.go:245] feature gates: &{map[]}
I0721 16:23:45.364390       1 node.go:172] Successfully retrieved node IP: 192.168.29.13
I0721 16:23:45.364415       1 server_others.go:140] Detected node IP 192.168.29.13
I0721 16:23:45.364515       1 server_others.go:177] DetectLocalMode: 'ClusterCIDR'
I0721 16:23:45.451109       1 server_others.go:206] kube-proxy running in dual-stack mode, IPv4-primary
I0721 16:23:45.451136       1 server_others.go:212] Using iptables Proxier.
I0721 16:23:45.451149       1 server_others.go:219] creating dualStackProxier for iptables.
W0721 16:23:45.451155       1 server_others.go:479] detect-local-mode set to ClusterCIDR, but no cluster CIDR defined
W0721 16:23:45.451174       1 server_others.go:528] detect-local-mode: ClusterCIDR , defaulting to no-op detect-local
I0721 16:23:45.451285       1 utils.go:370] Changed sysctl "net/ipv4/conf/all/route_localnet": 0 -> 1
I0721 16:23:45.451491       1 proxier.go:282] "Using iptables mark for masquerade" ipFamily=IPv4 mark="0x00004000"
I0721 16:23:45.451539       1 proxier.go:328] "Iptables sync params" ipFamily=IPv4 minSyncPeriod="1s" syncPeriod="30s" burstSyncs=2
I0721 16:23:45.451562       1 proxier.go:338] "Iptables supports --random-fully" ipFamily=IPv4
I0721 16:23:45.451605       1 proxier.go:282] "Using iptables mark for masquerade" ipFamily=IPv6 mark="0x00004000"
I0721 16:23:45.451626       1 proxier.go:328] "Iptables sync params" ipFamily=IPv6 minSyncPeriod="1s" syncPeriod="30s" burstSyncs=2
I0721 16:23:45.451642       1 proxier.go:338] "Iptables supports --random-fully" ipFamily=IPv6
I0721 16:23:45.456093       1 server.go:649] Version: v1.22.6-eks-0d102a7
I0721 16:23:45.461361       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_max' to 131072
I0721 16:23:45.461930       1 conntrack.go:52] Setting nf_conntrack_max to 131072
I0721 16:23:45.462192       1 mount_linux.go:207] Detected OS without systemd
I0721 16:23:45.462583       1 conntrack.go:83] Setting conntrack hashsize to 32768
I0721 16:23:45.462965       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_tcp_timeout_established' to 86400
I0721 16:23:45.463030       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_tcp_timeout_close_wait' to 3600
I0721 16:23:45.476837       1 config.go:315] Starting service config controller
I0721 16:23:45.476860       1 shared_informer.go:240] Waiting for caches to sync for service config
I0721 16:23:45.476883       1 config.go:224] Starting endpoint slice config controller
I0721 16:23:45.476888       1 shared_informer.go:240] Waiting for caches to sync for endpoint slice config
I0721 16:23:45.484984       1 service.go:301] Service default/kubernetes updated: 1 ports
I0721 16:23:45.485039       1 service.go:301] Service kube-system/kube-dns updated: 2 ports
I0721 16:23:45.576909       1 shared_informer.go:247] Caches are synced for service config 
I0721 16:23:45.577015       1 proxier.go:805] "Not syncing iptables until Services and Endpoints have been received from master"
I0721 16:23:45.577078       1 proxier.go:805] "Not syncing iptables until Services and Endpoints have been received from master"
I0721 16:23:45.577092       1 shared_informer.go:247] Caches are synced for endpoint slice config 
I0721 16:23:45.577139       1 service.go:416] Adding new service port "default/kubernetes:https" at 10.100.0.1:443/TCP
I0721 16:23:45.577156       1 service.go:416] Adding new service port "kube-system/kube-dns:dns" at 10.100.0.10:53/UDP
I0721 16:23:45.577165       1 service.go:416] Adding new service port "kube-system/kube-dns:dns-tcp" at 10.100.0.10:53/TCP
I0721 16:23:45.577217       1 proxier.go:846] "Syncing iptables rules"
I0721 16:23:45.692831       1 proxier.go:813] "SyncProxyRules complete" elapsed="115.675226ms"
I0721 16:23:45.692864       1 proxier.go:846] "Syncing iptables rules"
I0721 16:23:45.771009       1 proxier.go:813] "SyncProxyRules complete" elapsed="78.145962ms"
I0721 16:24:03.462560       1 proxier.go:846] "Syncing iptables rules"
I0721 16:24:03.518403       1 proxier.go:813] "SyncProxyRules complete" elapsed="55.88405ms"
I0721 16:24:03.518728       1 proxier.go:830] "Stale service" protocol="udp" svcPortName="kube-system/kube-dns:dns" clusterIP="10.100.0.10"
I0721 16:24:03.518832       1 proxier.go:846] "Syncing iptables rules"
I0721 16:24:03.565159       1 proxier.go:813] "SyncProxyRules complete" elapsed="46.523354ms"
I0721 16:24:36.204888       1 proxier.go:846] "Syncing iptables rules"
I0721 16:24:36.236997       1 proxier.go:813] "SyncProxyRules complete" elapsed="32.145924ms"
I0721 16:24:37.208680       1 proxier.go:846] "Syncing iptables rules"
I0721 16:24:37.246881       1 proxier.go:813] "SyncProxyRules complete" elapsed="38.248748ms"
I0721 17:02:41.962074       1 service.go:301] Service default/myapp updated: 1 ports
I0721 17:02:41.962952       1 service.go:416] Adding new service port "default/myapp" at 10.100.179.151:80/TCP
I0721 17:02:41.964267       1 proxier.go:846] "Syncing iptables rules"
I0721 17:02:42.019710       1 proxier.go:813] "SyncProxyRules complete" elapsed="57.549903ms"
I0721 17:02:42.019994       1 proxier.go:846] "Syncing iptables rules"
I0721 17:02:42.051872       1 proxier.go:813] "SyncProxyRules complete" elapsed="31.893121ms"
==== END logs for container kube-proxy of pod kube-system/kube-proxy-7hgfh ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-jgnfq ====
I0721 16:23:39.447222       1 flags.go:59] FLAG: --add-dir-header="false"
I0721 16:23:39.447266       1 flags.go:59] FLAG: --alsologtostderr="false"
I0721 16:23:39.447272       1 flags.go:59] FLAG: --bind-address="0.0.0.0"
I0721 16:23:39.447278       1 flags.go:59] FLAG: --bind-address-hard-fail="false"
I0721 16:23:39.447283       1 flags.go:59] FLAG: --boot-id-file="/proc/sys/kernel/random/boot_id"
I0721 16:23:39.447288       1 flags.go:59] FLAG: --cleanup="false"
I0721 16:23:39.447292       1 flags.go:59] FLAG: --cluster-cidr=""
I0721 16:23:39.447297       1 flags.go:59] FLAG: --config="/var/lib/kube-proxy-config/config"
I0721 16:23:39.447302       1 flags.go:59] FLAG: --config-sync-period="15m0s"
I0721 16:23:39.447307       1 flags.go:59] FLAG: --conntrack-max-per-core="32768"
I0721 16:23:39.447312       1 flags.go:59] FLAG: --conntrack-min="131072"
I0721 16:23:39.447317       1 flags.go:59] FLAG: --conntrack-tcp-timeout-close-wait="1h0m0s"
I0721 16:23:39.447327       1 flags.go:59] FLAG: --conntrack-tcp-timeout-established="24h0m0s"
I0721 16:23:39.447332       1 flags.go:59] FLAG: --detect-local-mode=""
I0721 16:23:39.447341       1 flags.go:59] FLAG: --feature-gates=""
I0721 16:23:39.447347       1 flags.go:59] FLAG: --healthz-bind-address="0.0.0.0:10256"
I0721 16:23:39.447352       1 flags.go:59] FLAG: --healthz-port="10256"
I0721 16:23:39.447357       1 flags.go:59] FLAG: --help="false"
I0721 16:23:39.447361       1 flags.go:59] FLAG: --hostname-override="ip-192-168-48-116.ec2.internal"
I0721 16:23:39.447366       1 flags.go:59] FLAG: --iptables-masquerade-bit="14"
I0721 16:23:39.447370       1 flags.go:59] FLAG: --iptables-min-sync-period="1s"
I0721 16:23:39.447375       1 flags.go:59] FLAG: --iptables-sync-period="30s"
I0721 16:23:39.447379       1 flags.go:59] FLAG: --ipvs-exclude-cidrs="[]"
I0721 16:23:39.447388       1 flags.go:59] FLAG: --ipvs-min-sync-period="0s"
I0721 16:23:39.447392       1 flags.go:59] FLAG: --ipvs-scheduler=""
I0721 16:23:39.447396       1 flags.go:59] FLAG: --ipvs-strict-arp="false"
I0721 16:23:39.447401       1 flags.go:59] FLAG: --ipvs-sync-period="30s"
I0721 16:23:39.447405       1 flags.go:59] FLAG: --ipvs-tcp-timeout="0s"
I0721 16:23:39.447409       1 flags.go:59] FLAG: --ipvs-tcpfin-timeout="0s"
I0721 16:23:39.447413       1 flags.go:59] FLAG: --ipvs-udp-timeout="0s"
I0721 16:23:39.447417       1 flags.go:59] FLAG: --kube-api-burst="10"
I0721 16:23:39.447421       1 flags.go:59] FLAG: --kube-api-content-type="application/vnd.kubernetes.protobuf"
I0721 16:23:39.447426       1 flags.go:59] FLAG: --kube-api-qps="5"
I0721 16:23:39.447436       1 flags.go:59] FLAG: --kubeconfig=""
I0721 16:23:39.447441       1 flags.go:59] FLAG: --log-backtrace-at=":0"
I0721 16:23:39.447448       1 flags.go:59] FLAG: --log-dir=""
I0721 16:23:39.447453       1 flags.go:59] FLAG: --log-file=""
I0721 16:23:39.447457       1 flags.go:59] FLAG: --log-file-max-size="1800"
I0721 16:23:39.447462       1 flags.go:59] FLAG: --log-flush-frequency="5s"
I0721 16:23:39.447466       1 flags.go:59] FLAG: --logtostderr="true"
I0721 16:23:39.447470       1 flags.go:59] FLAG: --machine-id-file="/etc/machine-id,/var/lib/dbus/machine-id"
I0721 16:23:39.447476       1 flags.go:59] FLAG: --masquerade-all="false"
I0721 16:23:39.447480       1 flags.go:59] FLAG: --master=""
I0721 16:23:39.447485       1 flags.go:59] FLAG: --metrics-bind-address="127.0.0.1:10249"
I0721 16:23:39.447489       1 flags.go:59] FLAG: --metrics-port="10249"
I0721 16:23:39.447494       1 flags.go:59] FLAG: --nodeport-addresses="[]"
I0721 16:23:39.447499       1 flags.go:59] FLAG: --one-output="false"
I0721 16:23:39.447503       1 flags.go:59] FLAG: --oom-score-adj="-999"
I0721 16:23:39.447508       1 flags.go:59] FLAG: --profiling="false"
I0721 16:23:39.447512       1 flags.go:59] FLAG: --proxy-mode=""
I0721 16:23:39.447517       1 flags.go:59] FLAG: --proxy-port-range=""
I0721 16:23:39.447522       1 flags.go:59] FLAG: --show-hidden-metrics-for-version=""
I0721 16:23:39.447527       1 flags.go:59] FLAG: --skip-headers="false"
I0721 16:23:39.447531       1 flags.go:59] FLAG: --skip-log-headers="false"
I0721 16:23:39.447536       1 flags.go:59] FLAG: --stderrthreshold="2"
I0721 16:23:39.447540       1 flags.go:59] FLAG: --udp-timeout="250ms"
I0721 16:23:39.447545       1 flags.go:59] FLAG: --v="2"
I0721 16:23:39.447549       1 flags.go:59] FLAG: --version="false"
I0721 16:23:39.447557       1 flags.go:59] FLAG: --vmodule=""
I0721 16:23:39.447562       1 flags.go:59] FLAG: --write-config-to=""
I0721 16:23:39.451608       1 feature_gate.go:245] feature gates: &{map[]}
I0721 16:23:39.451720       1 feature_gate.go:245] feature gates: &{map[]}
I0721 16:23:39.646336       1 node.go:172] Successfully retrieved node IP: 192.168.48.116
I0721 16:23:39.646360       1 server_others.go:140] Detected node IP 192.168.48.116
I0721 16:23:39.646434       1 server_others.go:177] DetectLocalMode: 'ClusterCIDR'
I0721 16:23:39.740424       1 server_others.go:206] kube-proxy running in dual-stack mode, IPv4-primary
I0721 16:23:39.740464       1 server_others.go:212] Using iptables Proxier.
I0721 16:23:39.740477       1 server_others.go:219] creating dualStackProxier for iptables.
W0721 16:23:39.740484       1 server_others.go:479] detect-local-mode set to ClusterCIDR, but no cluster CIDR defined
W0721 16:23:39.740490       1 server_others.go:528] detect-local-mode: ClusterCIDR , defaulting to no-op detect-local
I0721 16:23:39.740562       1 utils.go:370] Changed sysctl "net/ipv4/conf/all/route_localnet": 0 -> 1
I0721 16:23:39.740609       1 proxier.go:282] "Using iptables mark for masquerade" ipFamily=IPv4 mark="0x00004000"
I0721 16:23:39.740640       1 proxier.go:328] "Iptables sync params" ipFamily=IPv4 minSyncPeriod="1s" syncPeriod="30s" burstSyncs=2
I0721 16:23:39.740665       1 proxier.go:338] "Iptables supports --random-fully" ipFamily=IPv4
I0721 16:23:39.740703       1 proxier.go:282] "Using iptables mark for masquerade" ipFamily=IPv6 mark="0x00004000"
I0721 16:23:39.740729       1 proxier.go:328] "Iptables sync params" ipFamily=IPv6 minSyncPeriod="1s" syncPeriod="30s" burstSyncs=2
I0721 16:23:39.740746       1 proxier.go:338] "Iptables supports --random-fully" ipFamily=IPv6
I0721 16:23:39.740892       1 server.go:649] Version: v1.22.6-eks-0d102a7
I0721 16:23:39.741759       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_max' to 131072
I0721 16:23:39.741780       1 conntrack.go:52] Setting nf_conntrack_max to 131072
I0721 16:23:39.741845       1 mount_linux.go:207] Detected OS without systemd
I0721 16:23:39.742242       1 conntrack.go:83] Setting conntrack hashsize to 32768
I0721 16:23:39.746048       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_tcp_timeout_established' to 86400
I0721 16:23:39.746100       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_tcp_timeout_close_wait' to 3600
I0721 16:23:39.753744       1 config.go:315] Starting service config controller
I0721 16:23:39.753763       1 shared_informer.go:240] Waiting for caches to sync for service config
I0721 16:23:39.753792       1 config.go:224] Starting endpoint slice config controller
I0721 16:23:39.753798       1 shared_informer.go:240] Waiting for caches to sync for endpoint slice config
I0721 16:23:39.769125       1 service.go:301] Service default/kubernetes updated: 1 ports
I0721 16:23:39.769161       1 service.go:301] Service kube-system/kube-dns updated: 2 ports
I0721 16:23:39.854823       1 shared_informer.go:247] Caches are synced for endpoint slice config 
I0721 16:23:39.854933       1 proxier.go:805] "Not syncing iptables until Services and Endpoints have been received from master"
I0721 16:23:39.855002       1 proxier.go:805] "Not syncing iptables until Services and Endpoints have been received from master"
I0721 16:23:39.855017       1 shared_informer.go:247] Caches are synced for service config 
I0721 16:23:39.855060       1 service.go:416] Adding new service port "default/kubernetes:https" at 10.100.0.1:443/TCP
I0721 16:23:39.855080       1 service.go:416] Adding new service port "kube-system/kube-dns:dns" at 10.100.0.10:53/UDP
I0721 16:23:39.855090       1 service.go:416] Adding new service port "kube-system/kube-dns:dns-tcp" at 10.100.0.10:53/TCP
I0721 16:23:39.855152       1 proxier.go:846] "Syncing iptables rules"
I0721 16:23:39.967540       1 proxier.go:813] "SyncProxyRules complete" elapsed="112.487073ms"
I0721 16:23:39.967572       1 proxier.go:846] "Syncing iptables rules"
I0721 16:23:40.042441       1 proxier.go:813] "SyncProxyRules complete" elapsed="74.865466ms"
I0721 16:24:03.462548       1 proxier.go:846] "Syncing iptables rules"
I0721 16:24:03.558011       1 proxier.go:813] "SyncProxyRules complete" elapsed="95.501883ms"
I0721 16:24:03.558503       1 proxier.go:830] "Stale service" protocol="udp" svcPortName="kube-system/kube-dns:dns" clusterIP="10.100.0.10"
I0721 16:24:03.558597       1 proxier.go:846] "Syncing iptables rules"
I0721 16:24:03.645804       1 proxier.go:813] "SyncProxyRules complete" elapsed="87.597075ms"
I0721 16:24:36.205351       1 proxier.go:846] "Syncing iptables rules"
I0721 16:24:36.236205       1 proxier.go:813] "SyncProxyRules complete" elapsed="30.901644ms"
I0721 16:24:37.208789       1 proxier.go:846] "Syncing iptables rules"
I0721 16:24:37.243955       1 proxier.go:813] "SyncProxyRules complete" elapsed="35.171782ms"
I0721 17:02:41.948640       1 service.go:301] Service default/myapp updated: 1 ports
I0721 17:02:41.948706       1 service.go:416] Adding new service port "default/myapp" at 10.100.179.151:80/TCP
I0721 17:02:41.948742       1 proxier.go:846] "Syncing iptables rules"
I0721 17:02:41.980964       1 proxier.go:813] "SyncProxyRules complete" elapsed="32.251857ms"
I0721 17:02:41.981178       1 proxier.go:846] "Syncing iptables rules"
I0721 17:02:42.011864       1 proxier.go:813] "SyncProxyRules complete" elapsed="30.700023ms"
==== END logs for container kube-proxy of pod kube-system/kube-proxy-jgnfq ====
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "11452"
    },
    "items": [
        {
            "metadata": {
                "name": "ip-192-168-29-13.ec2.internal.1703e4c283d6a384",
                "namespace": "default",
                "uid": "796b9551-85dd-4141-b314-39dab9d9f2d3",
                "resourceVersion": "1850",
                "creationTimestamp": "2022-07-21T16:23:34Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "ip-192-168-29-13.ec2.internal",
                "uid": "ip-192-168-29-13.ec2.internal"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:31Z",
            "lastTimestamp": "2022-07-21T16:23:31Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "ip-192-168-29-13.ec2.internal.1703e4c295f1a63a",
                "namespace": "default",
                "uid": "dca83797-2347-4c7c-89be-b9bb25ef3b11",
                "resourceVersion": "1867",
                "creationTimestamp": "2022-07-21T16:23:34Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "ip-192-168-29-13.ec2.internal",
                "uid": "ip-192-168-29-13.ec2.internal"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node ip-192-168-29-13.ec2.internal status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:32Z",
            "lastTimestamp": "2022-07-21T16:23:32Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "ip-192-168-29-13.ec2.internal.1703e4c295f883d4",
                "namespace": "default",
                "uid": "9f21da4f-d981-42f1-bae2-b4a19a6fb26b",
                "resourceVersion": "1868",
                "creationTimestamp": "2022-07-21T16:23:34Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "ip-192-168-29-13.ec2.internal",
                "uid": "ip-192-168-29-13.ec2.internal"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node ip-192-168-29-13.ec2.internal status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:32Z",
            "lastTimestamp": "2022-07-21T16:23:32Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "ip-192-168-29-13.ec2.internal.1703e4c295ff53dd",
                "namespace": "default",
                "uid": "1e3f76cc-6eee-4d14-8d55-e32fd0f94ddb",
                "resourceVersion": "1869",
                "creationTimestamp": "2022-07-21T16:23:34Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "ip-192-168-29-13.ec2.internal",
                "uid": "ip-192-168-29-13.ec2.internal"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node ip-192-168-29-13.ec2.internal status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:32Z",
            "lastTimestamp": "2022-07-21T16:23:32Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "ip-192-168-29-13.ec2.internal.1703e4c29a7b5de8",
                "namespace": "default",
                "uid": "e49d2f0d-2193-479d-a9a6-5dac7061c7b5",
                "resourceVersion": "1870",
                "creationTimestamp": "2022-07-21T16:23:34Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "ip-192-168-29-13.ec2.internal",
                "uid": "ip-192-168-29-13.ec2.internal"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:32Z",
            "lastTimestamp": "2022-07-21T16:23:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "ip-192-168-29-13.ec2.internal.1703e4c37520c3f2",
                "namespace": "default",
                "uid": "2d372e61-978b-4969-a82c-2790d28f0d83",
                "resourceVersion": "1882",
                "creationTimestamp": "2022-07-21T16:23:35Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "ip-192-168-29-13.ec2.internal",
                "uid": "f36b4fcf-cd6a-468c-8ef2-ab11a0d08053",
                "apiVersion": "v1"
            },
            "reason": "RegisteredNode",
            "message": "Node ip-192-168-29-13.ec2.internal event: Registered Node ip-192-168-29-13.ec2.internal in Controller",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2022-07-21T16:23:35Z",
            "lastTimestamp": "2022-07-21T16:23:35Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "ip-192-168-29-13.ec2.internal.1703e4c5ad0578f4",
                "namespace": "default",
                "uid": "7a7175ab-9504-46a4-91a4-85d9e37e1a4b",
                "resourceVersion": "1925",
                "creationTimestamp": "2022-07-21T16:23:45Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "ip-192-168-29-13.ec2.internal",
                "uid": "ip-192-168-29-13.ec2.internal"
            },
            "reason": "Starting",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Normal",
            "eventTime": "2022-07-21T16:23:45.464978Z",
            "action": "StartKubeProxy",
            "reportingComponent": "kube-proxy",
            "reportingInstance": "kube-proxy-ip-192-168-29-13.ec2.internal"
        },
        {
            "metadata": {
                "name": "ip-192-168-29-13.ec2.internal.1703e4ca1e06e742",
                "namespace": "default",
                "uid": "a99126aa-bf27-4b0b-b497-fdf9c772fd88",
                "resourceVersion": "2030",
                "creationTimestamp": "2022-07-21T16:24:04Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "ip-192-168-29-13.ec2.internal",
                "uid": "ip-192-168-29-13.ec2.internal"
            },
            "reason": "NodeReady",
            "message": "Node ip-192-168-29-13.ec2.internal status is now: NodeReady",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:24:04Z",
            "lastTimestamp": "2022-07-21T16:24:04Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "ip-192-168-48-116.ec2.internal.1703e4c125e6d642",
                "namespace": "default",
                "uid": "1f58bf7a-b8df-4801-aec2-3bb293c0ac02",
                "resourceVersion": "1798",
                "creationTimestamp": "2022-07-21T16:23:28Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "ip-192-168-48-116.ec2.internal",
                "uid": "ip-192-168-48-116.ec2.internal"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:26Z",
            "lastTimestamp": "2022-07-21T16:23:26Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "ip-192-168-48-116.ec2.internal.1703e4c1345f49da",
                "namespace": "default",
                "uid": "cb58d3f6-972f-4f48-99f6-7009db6fe9f1",
                "resourceVersion": "1808",
                "creationTimestamp": "2022-07-21T16:23:28Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "ip-192-168-48-116.ec2.internal",
                "uid": "ip-192-168-48-116.ec2.internal"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node ip-192-168-48-116.ec2.internal status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:26Z",
            "lastTimestamp": "2022-07-21T16:23:26Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "ip-192-168-48-116.ec2.internal.1703e4c134663e4d",
                "namespace": "default",
                "uid": "d9f73cf5-fca1-4f0e-89fe-880eb8ccf957",
                "resourceVersion": "1816",
                "creationTimestamp": "2022-07-21T16:23:28Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "ip-192-168-48-116.ec2.internal",
                "uid": "ip-192-168-48-116.ec2.internal"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node ip-192-168-48-116.ec2.internal status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:26Z",
            "lastTimestamp": "2022-07-21T16:23:26Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "ip-192-168-48-116.ec2.internal.1703e4c1346ced50",
                "namespace": "default",
                "uid": "176b63e7-0592-4c24-8b54-a52a32adc799",
                "resourceVersion": "1822",
                "creationTimestamp": "2022-07-21T16:23:28Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "ip-192-168-48-116.ec2.internal",
                "uid": "ip-192-168-48-116.ec2.internal"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node ip-192-168-48-116.ec2.internal status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:26Z",
            "lastTimestamp": "2022-07-21T16:23:26Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "ip-192-168-48-116.ec2.internal.1703e4c136fc8d62",
                "namespace": "default",
                "uid": "8b25bddb-b325-430b-801b-d5fb40f239a8",
                "resourceVersion": "1823",
                "creationTimestamp": "2022-07-21T16:23:28Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "ip-192-168-48-116.ec2.internal",
                "uid": "ip-192-168-48-116.ec2.internal"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:26Z",
            "lastTimestamp": "2022-07-21T16:23:26Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "ip-192-168-48-116.ec2.internal.1703e4c24b08d3f3",
                "namespace": "default",
                "uid": "cad91e40-dc94-44d1-9a7a-85ce8a79bd66",
                "resourceVersion": "1835",
                "creationTimestamp": "2022-07-21T16:23:30Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "ip-192-168-48-116.ec2.internal",
                "uid": "50181d51-c55a-4166-80e6-24407b771970",
                "apiVersion": "v1"
            },
            "reason": "RegisteredNode",
            "message": "Node ip-192-168-48-116.ec2.internal event: Registered Node ip-192-168-48-116.ec2.internal in Controller",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2022-07-21T16:23:30Z",
            "lastTimestamp": "2022-07-21T16:23:30Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "ip-192-168-48-116.ec2.internal.1703e4c458288459",
                "namespace": "default",
                "uid": "faf3b2b5-3656-4998-a457-fc8ec0ec5504",
                "resourceVersion": "1899",
                "creationTimestamp": "2022-07-21T16:23:39Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "ip-192-168-48-116.ec2.internal",
                "uid": "ip-192-168-48-116.ec2.internal"
            },
            "reason": "Starting",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Normal",
            "eventTime": "2022-07-21T16:23:39.746231Z",
            "action": "StartKubeProxy",
            "reportingComponent": "kube-proxy",
            "reportingInstance": "kube-proxy-ip-192-168-48-116.ec2.internal"
        },
        {
            "metadata": {
                "name": "ip-192-168-48-116.ec2.internal.1703e4c8cf250819",
                "namespace": "default",
                "uid": "631ccdee-5852-4fbb-a6b8-24e51ca72997",
                "resourceVersion": "1987",
                "creationTimestamp": "2022-07-21T16:23:58Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "ip-192-168-48-116.ec2.internal",
                "uid": "ip-192-168-48-116.ec2.internal"
            },
            "reason": "NodeReady",
            "message": "Node ip-192-168-48-116.ec2.internal status is now: NodeReady",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-48-116.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:23:58Z",
            "lastTimestamp": "2022-07-21T16:23:58Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-5799d8c4d7-k7nsv.1703e644986516c3",
                "namespace": "default",
                "uid": "5cc381f9-1e29-491d-9afe-11bcfa1eb2fd",
                "resourceVersion": "6596",
                "creationTimestamp": "2022-07-21T16:51:10Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-5799d8c4d7-k7nsv",
                "uid": "c1508304-395e-4533-ab10-a372f8d98a58",
                "apiVersion": "v1",
                "resourceVersion": "6592"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned default/myapp-5799d8c4d7-k7nsv to ip-192-168-29-13.ec2.internal",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2022-07-21T16:51:10Z",
            "lastTimestamp": "2022-07-21T16:51:10Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-5799d8c4d7-k7nsv.1703e644f28d336b",
                "namespace": "default",
                "uid": "abb5f875-6d8a-4bb4-8c8f-d9fe63160017",
                "resourceVersion": "9281",
                "creationTimestamp": "2022-07-21T16:51:11Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-5799d8c4d7-k7nsv",
                "uid": "c1508304-395e-4533-ab10-a372f8d98a58",
                "apiVersion": "v1",
                "resourceVersion": "6593",
                "fieldPath": "spec.containers{simple-node}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"mfadhiligitau/image1:latest\"",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:51:11Z",
            "lastTimestamp": "2022-07-21T17:06:31Z",
            "count": 10,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-5799d8c4d7-k7nsv.1703e64edbd7f983",
                "namespace": "default",
                "uid": "4d1e1ed5-5477-46ac-88fa-e7b021144756",
                "resourceVersion": "6755",
                "creationTimestamp": "2022-07-21T16:51:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-5799d8c4d7-k7nsv",
                "uid": "c1508304-395e-4533-ab10-a372f8d98a58",
                "apiVersion": "v1",
                "resourceVersion": "6593",
                "fieldPath": "spec.containers{simple-node}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"mfadhiligitau/image1:latest\" in 42.568683278s",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:51:54Z",
            "lastTimestamp": "2022-07-21T16:51:54Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-5799d8c4d7-k7nsv.1703e64ef78c3745",
                "namespace": "default",
                "uid": "50320c2a-0c85-45f1-8965-8370a641cf03",
                "resourceVersion": "7001",
                "creationTimestamp": "2022-07-21T16:51:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-5799d8c4d7-k7nsv",
                "uid": "c1508304-395e-4533-ab10-a372f8d98a58",
                "apiVersion": "v1",
                "resourceVersion": "6593",
                "fieldPath": "spec.containers{simple-node}"
            },
            "reason": "Created",
            "message": "Created container simple-node",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:51:54Z",
            "lastTimestamp": "2022-07-21T16:53:13Z",
            "count": 3,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-5799d8c4d7-k7nsv.1703e64f085469bf",
                "namespace": "default",
                "uid": "ade85639-ec01-43a7-ae4e-0f041ebf50a6",
                "resourceVersion": "7002",
                "creationTimestamp": "2022-07-21T16:51:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-5799d8c4d7-k7nsv",
                "uid": "c1508304-395e-4533-ab10-a372f8d98a58",
                "apiVersion": "v1",
                "resourceVersion": "6593",
                "fieldPath": "spec.containers{simple-node}"
            },
            "reason": "Started",
            "message": "Started container simple-node",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:51:54Z",
            "lastTimestamp": "2022-07-21T16:53:13Z",
            "count": 3,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-5799d8c4d7-k7nsv.1703e64fc6bed7d0",
                "namespace": "default",
                "uid": "5b13e1d2-61b0-482a-8538-61ff28cb3dcc",
                "resourceVersion": "7028",
                "creationTimestamp": "2022-07-21T16:51:58Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-5799d8c4d7-k7nsv",
                "uid": "c1508304-395e-4533-ab10-a372f8d98a58",
                "apiVersion": "v1",
                "resourceVersion": "6593",
                "fieldPath": "spec.containers{simple-node}"
            },
            "reason": "Unhealthy",
            "message": "Liveness probe failed: Get \"http://192.168.4.112:8080/health\": dial tcp 192.168.4.112:8080: connect: connection refused",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:51:58Z",
            "lastTimestamp": "2022-07-21T16:53:22Z",
            "count": 9,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-5799d8c4d7-k7nsv.1703e6512bcadf89",
                "namespace": "default",
                "uid": "71094d65-230d-4c04-96b0-174aa1e18ce2",
                "resourceVersion": "7029",
                "creationTimestamp": "2022-07-21T16:52:04Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-5799d8c4d7-k7nsv",
                "uid": "c1508304-395e-4533-ab10-a372f8d98a58",
                "apiVersion": "v1",
                "resourceVersion": "6593",
                "fieldPath": "spec.containers{simple-node}"
            },
            "reason": "Killing",
            "message": "Container simple-node failed liveness probe, will be restarted",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:52:04Z",
            "lastTimestamp": "2022-07-21T16:53:22Z",
            "count": 3,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-5799d8c4d7-k7nsv.1703e65836014bb9",
                "namespace": "default",
                "uid": "f7ca52f2-042a-4909-a291-4de9f0a3ad32",
                "resourceVersion": "6882",
                "creationTimestamp": "2022-07-21T16:52:34Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-5799d8c4d7-k7nsv",
                "uid": "c1508304-395e-4533-ab10-a372f8d98a58",
                "apiVersion": "v1",
                "resourceVersion": "6593",
                "fieldPath": "spec.containers{simple-node}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"mfadhiligitau/image1:latest\" in 127.09431ms",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:52:34Z",
            "lastTimestamp": "2022-07-21T16:52:34Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-5799d8c4d7-k7nsv.1703e6614ae1eef1",
                "namespace": "default",
                "uid": "a9915035-3bbd-4372-adac-33f79f3849c6",
                "resourceVersion": "7000",
                "creationTimestamp": "2022-07-21T16:53:13Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-5799d8c4d7-k7nsv",
                "uid": "c1508304-395e-4533-ab10-a372f8d98a58",
                "apiVersion": "v1",
                "resourceVersion": "6593",
                "fieldPath": "spec.containers{simple-node}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"mfadhiligitau/image1:latest\" in 127.571504ms",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:53:13Z",
            "lastTimestamp": "2022-07-21T16:53:13Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-5799d8c4d7-k7nsv.1703e67c80f30eb5",
                "namespace": "default",
                "uid": "eb6c4cab-630d-4431-9688-961eb6fc3169",
                "resourceVersion": "10946",
                "creationTimestamp": "2022-07-21T17:01:21Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-5799d8c4d7-k7nsv",
                "uid": "c1508304-395e-4533-ab10-a372f8d98a58",
                "apiVersion": "v1",
                "resourceVersion": "6593",
                "fieldPath": "spec.containers{simple-node}"
            },
            "reason": "BackOff",
            "message": "Back-off restarting failed container",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:55:10Z",
            "lastTimestamp": "2022-07-21T17:16:18Z",
            "count": 83,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-5799d8c4d7-kdzpz.1703e6449968aa03",
                "namespace": "default",
                "uid": "e59c0d9a-6ef9-401f-b6f1-592411057499",
                "resourceVersion": "6600",
                "creationTimestamp": "2022-07-21T16:51:10Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-5799d8c4d7-kdzpz",
                "uid": "80a1c79a-ff2d-45a6-b38e-06b8f2676d76",
                "apiVersion": "v1",
                "resourceVersion": "6595"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned default/myapp-5799d8c4d7-kdzpz to ip-192-168-29-13.ec2.internal",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2022-07-21T16:51:10Z",
            "lastTimestamp": "2022-07-21T16:51:10Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-5799d8c4d7-kdzpz.1703e644f2233d3a",
                "namespace": "default",
                "uid": "cd0350c7-39cd-4282-87a1-98d44f01b275",
                "resourceVersion": "6611",
                "creationTimestamp": "2022-07-21T16:51:11Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-5799d8c4d7-kdzpz",
                "uid": "80a1c79a-ff2d-45a6-b38e-06b8f2676d76",
                "apiVersion": "v1",
                "resourceVersion": "6597"
            },
            "reason": "FailedCreatePodSandBox",
            "message": "Failed to create pod sandbox: rpc error: code = Unknown desc = failed to set up sandbox container \"5e87d6133630b295b0f05aa87c7a81b96ddf35d68e1a56c49adf07610c2d914a\" network for pod \"myapp-5799d8c4d7-kdzpz\": networkPlugin cni failed to set up pod \"myapp-5799d8c4d7-kdzpz_default\" network: add cmd: failed to assign an IP address to container",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:51:11Z",
            "lastTimestamp": "2022-07-21T16:51:11Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-5799d8c4d7-kdzpz.1703e645255dee8f",
                "namespace": "default",
                "uid": "c8ea892c-375d-4109-b180-80ef8958e305",
                "resourceVersion": "6719",
                "creationTimestamp": "2022-07-21T16:51:12Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-5799d8c4d7-kdzpz",
                "uid": "80a1c79a-ff2d-45a6-b38e-06b8f2676d76",
                "apiVersion": "v1",
                "resourceVersion": "6597"
            },
            "reason": "SandboxChanged",
            "message": "Pod sandbox changed, it will be killed and re-created.",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:51:12Z",
            "lastTimestamp": "2022-07-21T16:51:41Z",
            "count": 12,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-5799d8c4d7-kdzpz.1703e64696fc01da",
                "namespace": "default",
                "uid": "de42b2cc-5478-40e9-ab7d-547e3dd930ba",
                "resourceVersion": "6632",
                "creationTimestamp": "2022-07-21T16:51:18Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-5799d8c4d7-kdzpz",
                "uid": "80a1c79a-ff2d-45a6-b38e-06b8f2676d76",
                "apiVersion": "v1",
                "resourceVersion": "6597"
            },
            "reason": "FailedCreatePodSandBox",
            "message": "Failed to create pod sandbox: rpc error: code = Unknown desc = failed to set up sandbox container \"e940090eb5fceddff91bad6031a94d8065f4b39f4d729239140f3315129f6097\" network for pod \"myapp-5799d8c4d7-kdzpz\": networkPlugin cni failed to set up pod \"myapp-5799d8c4d7-kdzpz_default\" network: add cmd: failed to assign an IP address to container",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:51:18Z",
            "lastTimestamp": "2022-07-21T16:51:18Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-5799d8c4d7-kdzpz.1703e647009910b6",
                "namespace": "default",
                "uid": "1ca16fbb-8f55-46d4-9b24-20f977f9f330",
                "resourceVersion": "6638",
                "creationTimestamp": "2022-07-21T16:51:20Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-5799d8c4d7-kdzpz",
                "uid": "80a1c79a-ff2d-45a6-b38e-06b8f2676d76",
                "apiVersion": "v1",
                "resourceVersion": "6597"
            },
            "reason": "FailedCreatePodSandBox",
            "message": "Failed to create pod sandbox: rpc error: code = Unknown desc = failed to set up sandbox container \"35f73005a8cdad81a2f994945d69f874935a7d1b3178d0e7cee3f65e65d5db11\" network for pod \"myapp-5799d8c4d7-kdzpz\": networkPlugin cni failed to set up pod \"myapp-5799d8c4d7-kdzpz_default\" network: add cmd: failed to assign an IP address to container",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:51:20Z",
            "lastTimestamp": "2022-07-21T16:51:20Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-5799d8c4d7-kdzpz.1703e6477dc248ca",
                "namespace": "default",
                "uid": "f057a568-b043-4a6c-97be-a35cd091b74a",
                "resourceVersion": "6647",
                "creationTimestamp": "2022-07-21T16:51:22Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-5799d8c4d7-kdzpz",
                "uid": "80a1c79a-ff2d-45a6-b38e-06b8f2676d76",
                "apiVersion": "v1",
                "resourceVersion": "6597"
            },
            "reason": "FailedCreatePodSandBox",
            "message": "Failed to create pod sandbox: rpc error: code = Unknown desc = failed to set up sandbox container \"f3500f1d00d540ae498bb852967a6dfdee8a3468c1171d5e5e638715383e1434\" network for pod \"myapp-5799d8c4d7-kdzpz\": networkPlugin cni failed to set up pod \"myapp-5799d8c4d7-kdzpz_default\" network: add cmd: failed to assign an IP address to container",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:51:22Z",
            "lastTimestamp": "2022-07-21T16:51:22Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-5799d8c4d7-kdzpz.1703e648050bec0d",
                "namespace": "default",
                "uid": "b7f1284b-0364-4d55-be38-9129cb81d13f",
                "resourceVersion": "6655",
                "creationTimestamp": "2022-07-21T16:51:24Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-5799d8c4d7-kdzpz",
                "uid": "80a1c79a-ff2d-45a6-b38e-06b8f2676d76",
                "apiVersion": "v1",
                "resourceVersion": "6597"
            },
            "reason": "FailedCreatePodSandBox",
            "message": "Failed to create pod sandbox: rpc error: code = Unknown desc = failed to set up sandbox container \"bb8e45d715a2dc249fd4e44645c67c41bdf061dfb51d1b8199206d13e40a57e8\" network for pod \"myapp-5799d8c4d7-kdzpz\": networkPlugin cni failed to set up pod \"myapp-5799d8c4d7-kdzpz_default\" network: add cmd: failed to assign an IP address to container",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:51:24Z",
            "lastTimestamp": "2022-07-21T16:51:24Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-5799d8c4d7-kdzpz.1703e6488c42f767",
                "namespace": "default",
                "uid": "6daf1203-2cad-4b80-9b53-af5fb4eb3d68",
                "resourceVersion": "6664",
                "creationTimestamp": "2022-07-21T16:51:27Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-5799d8c4d7-kdzpz",
                "uid": "80a1c79a-ff2d-45a6-b38e-06b8f2676d76",
                "apiVersion": "v1",
                "resourceVersion": "6597"
            },
            "reason": "FailedCreatePodSandBox",
            "message": "Failed to create pod sandbox: rpc error: code = Unknown desc = failed to set up sandbox container \"f77f98ddc189c60dbef952d7a097b60d650bc2f90322b0f2e5767156612f1869\" network for pod \"myapp-5799d8c4d7-kdzpz\": networkPlugin cni failed to set up pod \"myapp-5799d8c4d7-kdzpz_default\" network: add cmd: failed to assign an IP address to container",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:51:27Z",
            "lastTimestamp": "2022-07-21T16:51:27Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-5799d8c4d7-kdzpz.1703e64910e0da65",
                "namespace": "default",
                "uid": "1d6955ab-428d-4def-ad76-4cab92192033",
                "resourceVersion": "6674",
                "creationTimestamp": "2022-07-21T16:51:29Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-5799d8c4d7-kdzpz",
                "uid": "80a1c79a-ff2d-45a6-b38e-06b8f2676d76",
                "apiVersion": "v1",
                "resourceVersion": "6597"
            },
            "reason": "FailedCreatePodSandBox",
            "message": "Failed to create pod sandbox: rpc error: code = Unknown desc = failed to set up sandbox container \"0d737e6aea9bd1ebfe3b7c1818a2148e10156ca45b5b7752a58925045d9a59a0\" network for pod \"myapp-5799d8c4d7-kdzpz\": networkPlugin cni failed to set up pod \"myapp-5799d8c4d7-kdzpz_default\" network: add cmd: failed to assign an IP address to container",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:51:29Z",
            "lastTimestamp": "2022-07-21T16:51:29Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-5799d8c4d7-kdzpz.1703e649abd2f139",
                "namespace": "default",
                "uid": "5092b3e6-edfa-4fb3-9d9a-fbb1783cc480",
                "resourceVersion": "6682",
                "creationTimestamp": "2022-07-21T16:51:31Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-5799d8c4d7-kdzpz",
                "uid": "80a1c79a-ff2d-45a6-b38e-06b8f2676d76",
                "apiVersion": "v1",
                "resourceVersion": "6597"
            },
            "reason": "FailedCreatePodSandBox",
            "message": "Failed to create pod sandbox: rpc error: code = Unknown desc = failed to set up sandbox container \"c9cd811f950eb9008cccb25a1e3b3753924f4555d8431610a4604d011fd88e98\" network for pod \"myapp-5799d8c4d7-kdzpz\": networkPlugin cni failed to set up pod \"myapp-5799d8c4d7-kdzpz_default\" network: add cmd: failed to assign an IP address to container",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:51:31Z",
            "lastTimestamp": "2022-07-21T16:51:31Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-5799d8c4d7-kdzpz.1703e64a2f3386bb",
                "namespace": "default",
                "uid": "21a30e3e-bf34-466e-803b-1322174f0c82",
                "resourceVersion": "6690",
                "creationTimestamp": "2022-07-21T16:51:34Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-5799d8c4d7-kdzpz",
                "uid": "80a1c79a-ff2d-45a6-b38e-06b8f2676d76",
                "apiVersion": "v1",
                "resourceVersion": "6597"
            },
            "reason": "FailedCreatePodSandBox",
            "message": "Failed to create pod sandbox: rpc error: code = Unknown desc = failed to set up sandbox container \"2ffd15a9acc87086285c5369f14f2f2ed13fbc9a933c32ab8eaa87296fed195d\" network for pod \"myapp-5799d8c4d7-kdzpz\": networkPlugin cni failed to set up pod \"myapp-5799d8c4d7-kdzpz_default\" network: add cmd: failed to assign an IP address to container",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:51:34Z",
            "lastTimestamp": "2022-07-21T16:51:34Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-5799d8c4d7-kdzpz.1703e64ab6296d6b",
                "namespace": "default",
                "uid": "a8e74289-2008-4a8e-bd2d-31c897392e1e",
                "resourceVersion": "6722",
                "creationTimestamp": "2022-07-21T16:51:36Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-5799d8c4d7-kdzpz",
                "uid": "80a1c79a-ff2d-45a6-b38e-06b8f2676d76",
                "apiVersion": "v1",
                "resourceVersion": "6597"
            },
            "reason": "FailedCreatePodSandBox",
            "message": "(combined from similar events): Failed to create pod sandbox: rpc error: code = Unknown desc = failed to set up sandbox container \"7516c5732a6b8d7bb3eafa216a85462076c091966424a695016d8bb37f64e87c\" network for pod \"myapp-5799d8c4d7-kdzpz\": networkPlugin cni failed to set up pod \"myapp-5799d8c4d7-kdzpz_default\" network: add cmd: failed to assign an IP address to container",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:51:36Z",
            "lastTimestamp": "2022-07-21T16:51:43Z",
            "count": 4,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-5799d8c4d7-kdzpz.1703e64d56b61b17",
                "namespace": "default",
                "uid": "38ebf03c-c625-4ebf-8cc4-d2489ed11e09",
                "resourceVersion": "9300",
                "creationTimestamp": "2022-07-21T17:06:37Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-5799d8c4d7-kdzpz",
                "uid": "80a1c79a-ff2d-45a6-b38e-06b8f2676d76",
                "apiVersion": "v1",
                "resourceVersion": "6597",
                "fieldPath": "spec.containers{simple-node}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"mfadhiligitau/image1:latest\"",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:51:47Z",
            "lastTimestamp": "2022-07-21T17:06:37Z",
            "count": 10,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-5799d8c4d7-kdzpz.1703e64fc6ce41c5",
                "namespace": "default",
                "uid": "4a78b946-750c-4a86-b53e-7a534759f3c6",
                "resourceVersion": "7527",
                "creationTimestamp": "2022-07-21T16:56:13Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-5799d8c4d7-kdzpz",
                "uid": "80a1c79a-ff2d-45a6-b38e-06b8f2676d76",
                "apiVersion": "v1",
                "resourceVersion": "6597",
                "fieldPath": "spec.containers{simple-node}"
            },
            "reason": "Unhealthy",
            "message": "Liveness probe failed: Get \"http://192.168.8.215:8080/health\": dial tcp 192.168.8.215:8080: connect: connection refused",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:51:58Z",
            "lastTimestamp": "2022-07-21T16:56:13Z",
            "count": 18,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-5799d8c4d7-kdzpz.1703e67c81c2033c",
                "namespace": "default",
                "uid": "0e40c764-b65d-43ad-aa7a-d0f8ed848c2f",
                "resourceVersion": "10933",
                "creationTimestamp": "2022-07-21T17:01:18Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-5799d8c4d7-kdzpz",
                "uid": "80a1c79a-ff2d-45a6-b38e-06b8f2676d76",
                "apiVersion": "v1",
                "resourceVersion": "6597",
                "fieldPath": "spec.containers{simple-node}"
            },
            "reason": "BackOff",
            "message": "Back-off restarting failed container",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-29-13.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T16:55:10Z",
            "lastTimestamp": "2022-07-21T17:16:14Z",
            "count": 83,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-5799d8c4d7.1703e64497f3186c",
                "namespace": "default",
                "uid": "ecf8d726-98b0-484a-8b03-460665513c18",
                "resourceVersion": "6594",
                "creationTimestamp": "2022-07-21T16:51:10Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "default",
                "name": "myapp-5799d8c4d7",
                "uid": "a55c2c60-3a0e-460c-91d8-cf479780c8b4",
                "apiVersion": "apps/v1",
                "resourceVersion": "6588"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: myapp-5799d8c4d7-k7nsv",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2022-07-21T16:51:10Z",
            "lastTimestamp": "2022-07-21T16:51:10Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-5799d8c4d7.1703e6449900b8a2",
                "namespace": "default",
                "uid": "b822c467-4abc-4197-b53c-0bee92652fe9",
                "resourceVersion": "6598",
                "creationTimestamp": "2022-07-21T16:51:10Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "default",
                "name": "myapp-5799d8c4d7",
                "uid": "a55c2c60-3a0e-460c-91d8-cf479780c8b4",
                "apiVersion": "apps/v1",
                "resourceVersion": "6588"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: myapp-5799d8c4d7-kdzpz",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2022-07-21T16:51:10Z",
            "lastTimestamp": "2022-07-21T16:51:10Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp.1703e64489c8f7b0",
                "namespace": "default",
                "uid": "39a94715-faa1-4429-9a14-35c5ba281b40",
                "resourceVersion": "6590",
                "creationTimestamp": "2022-07-21T16:51:09Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "default",
                "name": "myapp",
                "uid": "7be25a1e-d41d-4647-b366-6453dd5b5f5e",
                "apiVersion": "apps/v1",
                "resourceVersion": "6587"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled up replica set myapp-5799d8c4d7 to 2",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2022-07-21T16:51:09Z",
            "lastTimestamp": "2022-07-21T16:51:09Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "11461"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "11463"
    },
    "items": [
        {
            "metadata": {
                "name": "kubernetes",
                "namespace": "default",
                "uid": "e0247d05-c0fe-4217-8ea3-6136d422129e",
                "resourceVersion": "230",
                "creationTimestamp": "2022-07-21T16:14:45Z",
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 443
                    }
                ],
                "clusterIP": "10.100.0.1",
                "clusterIPs": [
                    "10.100.0.1"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "myapp",
                "namespace": "default",
                "uid": "b2307670-a1ce-464d-92dd-d5aeee652c06",
                "resourceVersion": "8635",
                "creationTimestamp": "2022-07-21T17:02:41Z",
                "labels": {
                    "run": "myapp"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"run\":\"myapp\"},\"name\":\"myapp\",\"namespace\":\"default\"},\"spec\":{\"ports\":[{\"port\":80,\"protocol\":\"TCP\",\"targetPort\":80}],\"selector\":{\"app\":\"myapp\",\"run\":\"myapp\"}}}\n"
                }
            },
            "spec": {
                "ports": [
                    {
                        "protocol": "TCP",
                        "port": 80,
                        "targetPort": 80
                    }
                ],
                "selector": {
                    "app": "myapp",
                    "run": "myapp"
                },
                "clusterIP": "10.100.179.151",
                "clusterIPs": [
                    "10.100.179.151"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "11463"
    },
    "items": []
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "11463"
    },
    "items": [
        {
            "metadata": {
                "name": "myapp",
                "namespace": "default",
                "uid": "7be25a1e-d41d-4647-b366-6453dd5b5f5e",
                "resourceVersion": "11368",
                "generation": 1,
                "creationTimestamp": "2022-07-21T16:51:09Z",
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"name\":\"myapp\",\"namespace\":\"default\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"myapp\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"myapp\"}},\"spec\":{\"containers\":[{\"image\":\"mfadhiligitau/image1:latest\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/health\",\"port\":8080},\"initialDelaySeconds\":3,\"periodSeconds\":3},\"name\":\"simple-node\",\"ports\":[{\"containerPort\":80}],\"resources\":null}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "app": "myapp"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "myapp"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "simple-node",
                                "image": "mfadhiligitau/image1:latest",
                                "ports": [
                                    {
                                        "containerPort": 80,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 3,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 3,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "Always"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2022-07-21T16:51:56Z",
                        "lastTransitionTime": "2022-07-21T16:51:09Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"myapp-5799d8c4d7\" has successfully progressed."
                    },
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2022-07-21T17:18:47Z",
                        "lastTransitionTime": "2022-07-21T17:18:47Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "11464"
    },
    "items": [
        {
            "metadata": {
                "name": "myapp-5799d8c4d7",
                "namespace": "default",
                "uid": "a55c2c60-3a0e-460c-91d8-cf479780c8b4",
                "resourceVersion": "11365",
                "generation": 1,
                "creationTimestamp": "2022-07-21T16:51:09Z",
                "labels": {
                    "app": "myapp",
                    "pod-template-hash": "5799d8c4d7"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "3",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "myapp",
                        "uid": "7be25a1e-d41d-4647-b366-6453dd5b5f5e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "app": "myapp",
                        "pod-template-hash": "5799d8c4d7"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "myapp",
                            "pod-template-hash": "5799d8c4d7"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "simple-node",
                                "image": "mfadhiligitau/image1:latest",
                                "ports": [
                                    {
                                        "containerPort": 80,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 3,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 3,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "Always"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                }
            },
            "status": {
                "replicas": 2,
                "fullyLabeledReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "11468"
    },
    "items": [
        {
            "metadata": {
                "name": "myapp-5799d8c4d7-k7nsv",
                "generateName": "myapp-5799d8c4d7-",
                "namespace": "default",
                "uid": "c1508304-395e-4533-ab10-a372f8d98a58",
                "resourceVersion": "11351",
                "creationTimestamp": "2022-07-21T16:51:10Z",
                "labels": {
                    "app": "myapp",
                    "pod-template-hash": "5799d8c4d7"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "myapp-5799d8c4d7",
                        "uid": "a55c2c60-3a0e-460c-91d8-cf479780c8b4",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-api-access-2vjgd",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "simple-node",
                        "image": "mfadhiligitau/image1:latest",
                        "ports": [
                            {
                                "containerPort": 80,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-api-access-2vjgd",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 3,
                            "timeoutSeconds": 1,
                            "periodSeconds": 3,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "Always"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "nodeName": "ip-192-168-29-13.ec2.internal",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T16:51:10Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T17:18:44Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T17:18:44Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T16:51:10Z"
                    }
                ],
                "hostIP": "192.168.29.13",
                "podIP": "192.168.4.112",
                "podIPs": [
                    {
                        "ip": "192.168.4.112"
                    }
                ],
                "startTime": "2022-07-21T16:51:10Z",
                "containerStatuses": [
                    {
                        "name": "simple-node",
                        "state": {
                            "running": {
                                "startedAt": "2022-07-21T17:18:43Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 137,
                                "reason": "Error",
                                "startedAt": "2022-07-21T17:12:55Z",
                                "finishedAt": "2022-07-21T17:13:34Z",
                                "containerID": "docker://2d65d89aed76df50281c2fd5201c161f7996bd8670b5c8d6b7cfa406a7115eaa"
                            }
                        },
                        "ready": true,
                        "restartCount": 12,
                        "image": "mfadhiligitau/image1:latest",
                        "imageID": "docker-pullable://mfadhiligitau/image1@sha256:e9c2b604b49cadcd8e99d48aa8f804a84fd3bc5a3e8166e497d8038ac9063a4f",
                        "containerID": "docker://07c505d4ab899f8f4704d3fa0fb32bb0d7e257f7361197266b6b17d191416c1d",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "myapp-5799d8c4d7-kdzpz",
                "generateName": "myapp-5799d8c4d7-",
                "namespace": "default",
                "uid": "80a1c79a-ff2d-45a6-b38e-06b8f2676d76",
                "resourceVersion": "11364",
                "creationTimestamp": "2022-07-21T16:51:10Z",
                "labels": {
                    "app": "myapp",
                    "pod-template-hash": "5799d8c4d7"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "myapp-5799d8c4d7",
                        "uid": "a55c2c60-3a0e-460c-91d8-cf479780c8b4",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-api-access-mv2rd",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "simple-node",
                        "image": "mfadhiligitau/image1:latest",
                        "ports": [
                            {
                                "containerPort": 80,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-api-access-mv2rd",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 3,
                            "timeoutSeconds": 1,
                            "periodSeconds": 3,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "Always"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "nodeName": "ip-192-168-29-13.ec2.internal",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T16:51:10Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T17:18:47Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T17:18:47Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T16:51:10Z"
                    }
                ],
                "hostIP": "192.168.29.13",
                "podIP": "192.168.8.215",
                "podIPs": [
                    {
                        "ip": "192.168.8.215"
                    }
                ],
                "startTime": "2022-07-21T16:51:10Z",
                "containerStatuses": [
                    {
                        "name": "simple-node",
                        "state": {
                            "running": {
                                "startedAt": "2022-07-21T17:18:46Z"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 137,
                                "reason": "Error",
                                "startedAt": "2022-07-21T17:13:01Z",
                                "finishedAt": "2022-07-21T17:13:40Z",
                                "containerID": "docker://d2b6fd7ad524768ee01070dea030f46f5a83dfeb8d2132dcdb4989c24aa04285"
                            }
                        },
                        "ready": true,
                        "restartCount": 12,
                        "image": "mfadhiligitau/image1:latest",
                        "imageID": "docker-pullable://mfadhiligitau/image1@sha256:e9c2b604b49cadcd8e99d48aa8f804a84fd3bc5a3e8166e497d8038ac9063a4f",
                        "containerID": "docker://1674cac235799641d936efb7341180f726206507c70ae56383523b9550c7b576",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        }
    ]
}
==== START logs for container simple-node of pod default/myapp-5799d8c4d7-k7nsv ====
Containers rule!
==== END logs for container simple-node of pod default/myapp-5799d8c4d7-k7nsv ====
==== START logs for container simple-node of pod default/myapp-5799d8c4d7-kdzpz ====
Containers rule!
Containers rule!
Containers rule!
Containers rule!
Containers rule!
Containers rule!
Containers rule!
Containers rule!
==== END logs for container simple-node of pod default/myapp-5799d8c4d7-kdzpz ====
