{
    "kind": "NodeList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "13629"
    },
    "items": [
        {
            "metadata": {
                "name": "ip-192-168-14-170.ec2.internal",
                "uid": "16375875-a084-4097-b954-c435c388a71b",
                "resourceVersion": "13233",
                "creationTimestamp": "2022-07-21T07:13:24Z",
                "labels": {
                    "alpha.eksctl.io/cluster-name": "kluster3",
                    "alpha.eksctl.io/nodegroup-name": "linux-nodes",
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/instance-type": "t2.micro",
                    "beta.kubernetes.io/os": "linux",
                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                    "eks.amazonaws.com/nodegroup": "linux-nodes",
                    "eks.amazonaws.com/nodegroup-image": "ami-0f80e6144aa24f34d",
                    "eks.amazonaws.com/sourceLaunchTemplateId": "lt-0dc7864eb74422f5e",
                    "eks.amazonaws.com/sourceLaunchTemplateVersion": "1",
                    "failure-domain.beta.kubernetes.io/region": "us-east-1",
                    "failure-domain.beta.kubernetes.io/zone": "us-east-1c",
                    "k8s.io/cloud-provider-aws": "3049a26a8c42efc61b2eb41277dd0144",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "ip-192-168-14-170.ec2.internal",
                    "kubernetes.io/os": "linux",
                    "node.kubernetes.io/instance-type": "t2.micro",
                    "topology.kubernetes.io/region": "us-east-1",
                    "topology.kubernetes.io/zone": "us-east-1c"
                },
                "annotations": {
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "providerID": "aws:///us-east-1c/i-03f31f43bc2a87068"
            },
            "status": {
                "capacity": {
                    "attachable-volumes-aws-ebs": "39",
                    "cpu": "1",
                    "ephemeral-storage": "83873772Ki",
                    "hugepages-2Mi": "0",
                    "memory": "997844Ki",
                    "pods": "4"
                },
                "allocatable": {
                    "attachable-volumes-aws-ebs": "39",
                    "cpu": "940m",
                    "ephemeral-storage": "76224326324",
                    "hugepages-2Mi": "0",
                    "memory": "589268Ki",
                    "pods": "4"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2022-07-21T08:19:40Z",
                        "lastTransitionTime": "2022-07-21T07:13:23Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2022-07-21T08:19:40Z",
                        "lastTransitionTime": "2022-07-21T07:13:23Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2022-07-21T08:19:40Z",
                        "lastTransitionTime": "2022-07-21T07:13:23Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2022-07-21T08:19:40Z",
                        "lastTransitionTime": "2022-07-21T07:13:55Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "192.168.14.170"
                    },
                    {
                        "type": "ExternalIP",
                        "address": "52.91.68.111"
                    },
                    {
                        "type": "Hostname",
                        "address": "ip-192-168-14-170.ec2.internal"
                    },
                    {
                        "type": "InternalDNS",
                        "address": "ip-192-168-14-170.ec2.internal"
                    },
                    {
                        "type": "ExternalDNS",
                        "address": "ec2-52-91-68-111.compute-1.amazonaws.com"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "4c59c50b852c4f89be27e471d5110322",
                    "systemUUID": "ec2ffaf9-31a9-a7d2-3d58-c88222177ec9",
                    "bootID": "6e443209-4998-4b76-9eba-fdaac3f16717",
                    "kernelVersion": "5.4.196-108.356.amzn2.x86_64",
                    "osImage": "Amazon Linux 2",
                    "containerRuntimeVersion": "docker://20.10.13",
                    "kubeletVersion": "v1.22.9-eks-810597c",
                    "kubeProxyVersion": "v1.22.9-eks-810597c",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni@sha256:3b6db8b6fb23424366ef91d7e9e818e42291316fa81c00c2c75dcafa614340c5",
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.10.1-eksbuild.1"
                        ],
                        "sizeBytes": 302003068
                    },
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init@sha256:6c70af7bf257712105a89a896b2afb86c86ace865d32eb73765bf29163a08c56",
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.10.1-eksbuild.1"
                        ],
                        "sizeBytes": 276136949
                    },
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy@sha256:c8abb4b8efc94090458f34e5f456791d9f7f57b5c99517b6b4e197305c1f10f6",
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.22.6-eksbuild.1"
                        ],
                        "sizeBytes": 103649146
                    },
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns@sha256:09c4a9684cc63dc17565b656b57797498b4a5d5e10f4286ce5ad6ff7435d7f3d",
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.8.7-eksbuild.1"
                        ],
                        "sizeBytes": 48975754
                    },
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/pause@sha256:1cb4ab85a3480446f9243178395e6bee7350f0d71296daeb6a9fdd221e23aea6",
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/pause:3.1-eksbuild.1"
                        ],
                        "sizeBytes": 682696
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "ip-192-168-32-245.ec2.internal",
                "uid": "2a73a28b-5e0b-45f4-84ab-da202b3a07bc",
                "resourceVersion": "13332",
                "creationTimestamp": "2022-07-21T07:13:42Z",
                "labels": {
                    "alpha.eksctl.io/cluster-name": "kluster3",
                    "alpha.eksctl.io/nodegroup-name": "linux-nodes",
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/instance-type": "t2.micro",
                    "beta.kubernetes.io/os": "linux",
                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                    "eks.amazonaws.com/nodegroup": "linux-nodes",
                    "eks.amazonaws.com/nodegroup-image": "ami-0f80e6144aa24f34d",
                    "eks.amazonaws.com/sourceLaunchTemplateId": "lt-0dc7864eb74422f5e",
                    "eks.amazonaws.com/sourceLaunchTemplateVersion": "1",
                    "failure-domain.beta.kubernetes.io/region": "us-east-1",
                    "failure-domain.beta.kubernetes.io/zone": "us-east-1f",
                    "k8s.io/cloud-provider-aws": "3049a26a8c42efc61b2eb41277dd0144",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "ip-192-168-32-245.ec2.internal",
                    "kubernetes.io/os": "linux",
                    "node.kubernetes.io/instance-type": "t2.micro",
                    "topology.kubernetes.io/region": "us-east-1",
                    "topology.kubernetes.io/zone": "us-east-1f"
                },
                "annotations": {
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "providerID": "aws:///us-east-1f/i-03f22df9305ce6eed"
            },
            "status": {
                "capacity": {
                    "attachable-volumes-aws-ebs": "39",
                    "cpu": "1",
                    "ephemeral-storage": "83873772Ki",
                    "hugepages-2Mi": "0",
                    "memory": "997844Ki",
                    "pods": "4"
                },
                "allocatable": {
                    "attachable-volumes-aws-ebs": "39",
                    "cpu": "940m",
                    "ephemeral-storage": "76224326324",
                    "hugepages-2Mi": "0",
                    "memory": "589268Ki",
                    "pods": "4"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2022-07-21T08:20:16Z",
                        "lastTransitionTime": "2022-07-21T07:13:40Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2022-07-21T08:20:16Z",
                        "lastTransitionTime": "2022-07-21T07:13:40Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2022-07-21T08:20:16Z",
                        "lastTransitionTime": "2022-07-21T07:13:40Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2022-07-21T08:20:16Z",
                        "lastTransitionTime": "2022-07-21T07:14:12Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "192.168.32.245"
                    },
                    {
                        "type": "ExternalIP",
                        "address": "18.204.56.247"
                    },
                    {
                        "type": "Hostname",
                        "address": "ip-192-168-32-245.ec2.internal"
                    },
                    {
                        "type": "InternalDNS",
                        "address": "ip-192-168-32-245.ec2.internal"
                    },
                    {
                        "type": "ExternalDNS",
                        "address": "ec2-18-204-56-247.compute-1.amazonaws.com"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "0b6035c04b6941d28dc1142c2912c185",
                    "systemUUID": "ec213eb0-e5fb-9ae2-9169-7dd1af23daf8",
                    "bootID": "cb21255e-f31c-4459-a754-c8dbf7f21ffd",
                    "kernelVersion": "5.4.196-108.356.amzn2.x86_64",
                    "osImage": "Amazon Linux 2",
                    "containerRuntimeVersion": "docker://20.10.13",
                    "kubeletVersion": "v1.22.9-eks-810597c",
                    "kubeProxyVersion": "v1.22.9-eks-810597c",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "mfadhiligitau/image1@sha256:e9c2b604b49cadcd8e99d48aa8f804a84fd3bc5a3e8166e497d8038ac9063a4f",
                            "mfadhiligitau/image1:latest"
                        ],
                        "sizeBytes": 943332377
                    },
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni@sha256:3b6db8b6fb23424366ef91d7e9e818e42291316fa81c00c2c75dcafa614340c5",
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.10.1-eksbuild.1"
                        ],
                        "sizeBytes": 302003068
                    },
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init@sha256:6c70af7bf257712105a89a896b2afb86c86ace865d32eb73765bf29163a08c56",
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.10.1-eksbuild.1"
                        ],
                        "sizeBytes": 276136949
                    },
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy@sha256:c8abb4b8efc94090458f34e5f456791d9f7f57b5c99517b6b4e197305c1f10f6",
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.22.6-eksbuild.1"
                        ],
                        "sizeBytes": 103649146
                    },
                    {
                        "names": [
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/pause@sha256:1cb4ab85a3480446f9243178395e6bee7350f0d71296daeb6a9fdd221e23aea6",
                            "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/pause:3.1-eksbuild.1"
                        ],
                        "sizeBytes": 682696
                    }
                ]
            }
        }
    ]
}
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "13630"
    },
    "items": []
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "13630"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "13634"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-dns",
                "namespace": "kube-system",
                "uid": "b0506090-b315-4b89-9aa4-6b2837824a85",
                "resourceVersion": "260",
                "creationTimestamp": "2022-07-21T07:04:08Z",
                "labels": {
                    "eks.amazonaws.com/component": "kube-dns",
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"prometheus.io/port\":\"9153\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"eks.amazonaws.com/component\":\"kube-dns\",\"k8s-app\":\"kube-dns\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"CoreDNS\"},\"name\":\"kube-dns\",\"namespace\":\"kube-system\"},\"spec\":{\"clusterIP\":\"10.100.0.10\",\"ports\":[{\"name\":\"dns\",\"port\":53,\"protocol\":\"UDP\"},{\"name\":\"dns-tcp\",\"port\":53,\"protocol\":\"TCP\"}],\"selector\":{\"k8s-app\":\"kube-dns\"}}}\n",
                    "prometheus.io/port": "9153",
                    "prometheus.io/scrape": "true"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "dns",
                        "protocol": "UDP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "dns-tcp",
                        "protocol": "TCP",
                        "port": 53,
                        "targetPort": 53
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "clusterIP": "10.100.0.10",
                "clusterIPs": [
                    "10.100.0.10"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "13634"
    },
    "items": [
        {
            "metadata": {
                "name": "aws-node",
                "namespace": "kube-system",
                "uid": "f2205de8-7491-4060-af30-a9e43692cf8a",
                "resourceVersion": "2161",
                "generation": 1,
                "creationTimestamp": "2022-07-21T07:04:08Z",
                "labels": {
                    "k8s-app": "aws-node"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"k8s-app\":\"aws-node\"},\"name\":\"aws-node\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"aws-node\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"aws-node\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]},{\"key\":\"kubernetes.io/arch\",\"operator\":\"In\",\"values\":[\"amd64\",\"arm64\"]},{\"key\":\"eks.amazonaws.com/compute-type\",\"operator\":\"NotIn\",\"values\":[\"fargate\"]}]}]}}},\"containers\":[{\"env\":[{\"name\":\"ADDITIONAL_ENI_TAGS\",\"value\":\"{}\"},{\"name\":\"AWS_VPC_CNI_NODE_PORT_SUPPORT\",\"value\":\"true\"},{\"name\":\"AWS_VPC_ENI_MTU\",\"value\":\"9001\"},{\"name\":\"AWS_VPC_K8S_CNI_CONFIGURE_RPFILTER\",\"value\":\"false\"},{\"name\":\"AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG\",\"value\":\"false\"},{\"name\":\"AWS_VPC_K8S_CNI_EXTERNALSNAT\",\"value\":\"false\"},{\"name\":\"AWS_VPC_K8S_CNI_LOGLEVEL\",\"value\":\"DEBUG\"},{\"name\":\"AWS_VPC_K8S_CNI_LOG_FILE\",\"value\":\"/host/var/log/aws-routed-eni/ipamd.log\"},{\"name\":\"AWS_VPC_K8S_CNI_RANDOMIZESNAT\",\"value\":\"prng\"},{\"name\":\"AWS_VPC_K8S_CNI_VETHPREFIX\",\"value\":\"eni\"},{\"name\":\"AWS_VPC_K8S_PLUGIN_LOG_FILE\",\"value\":\"/var/log/aws-routed-eni/plugin.log\"},{\"name\":\"AWS_VPC_K8S_PLUGIN_LOG_LEVEL\",\"value\":\"DEBUG\"},{\"name\":\"DISABLE_INTROSPECTION\",\"value\":\"false\"},{\"name\":\"DISABLE_METRICS\",\"value\":\"false\"},{\"name\":\"DISABLE_NETWORK_RESOURCE_PROVISIONING\",\"value\":\"false\"},{\"name\":\"ENABLE_IPv4\",\"value\":\"true\"},{\"name\":\"ENABLE_IPv6\",\"value\":\"false\"},{\"name\":\"ENABLE_POD_ENI\",\"value\":\"false\"},{\"name\":\"ENABLE_PREFIX_DELEGATION\",\"value\":\"false\"},{\"name\":\"MY_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"WARM_ENI_TARGET\",\"value\":\"1\"},{\"name\":\"WARM_PREFIX_TARGET\",\"value\":\"1\"}],\"image\":\"602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.10.1-eksbuild.1\",\"livenessProbe\":{\"exec\":{\"command\":[\"/app/grpc-health-probe\",\"-addr=:50051\",\"-connect-timeout=5s\",\"-rpc-timeout=5s\"]},\"initialDelaySeconds\":60,\"timeoutSeconds\":10},\"name\":\"aws-node\",\"ports\":[{\"containerPort\":61678,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"exec\":{\"command\":[\"/app/grpc-health-probe\",\"-addr=:50051\",\"-connect-timeout=5s\",\"-rpc-timeout=5s\"]},\"initialDelaySeconds\":1,\"timeoutSeconds\":10},\"resources\":{\"requests\":{\"cpu\":\"25m\"}},\"securityContext\":{\"capabilities\":{\"add\":[\"NET_ADMIN\"]}},\"volumeMounts\":[{\"mountPath\":\"/host/opt/cni/bin\",\"name\":\"cni-bin-dir\"},{\"mountPath\":\"/host/etc/cni/net.d\",\"name\":\"cni-net-dir\"},{\"mountPath\":\"/host/var/log/aws-routed-eni\",\"name\":\"log-dir\"},{\"mountPath\":\"/var/run/aws-node\",\"name\":\"run-dir\"},{\"mountPath\":\"/var/run/dockershim.sock\",\"name\":\"dockershim\"},{\"mountPath\":\"/run/xtables.lock\",\"name\":\"xtables-lock\"}]}],\"hostNetwork\":true,\"initContainers\":[{\"env\":[{\"name\":\"DISABLE_TCP_EARLY_DEMUX\",\"value\":\"false\"},{\"name\":\"ENABLE_IPv6\",\"value\":\"false\"}],\"image\":\"602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.10.1-eksbuild.1\",\"name\":\"aws-vpc-cni-init\",\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/host/opt/cni/bin\",\"name\":\"cni-bin-dir\"}]}],\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"aws-node\",\"terminationGracePeriodSeconds\":10,\"tolerations\":[{\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/opt/cni/bin\"},\"name\":\"cni-bin-dir\"},{\"hostPath\":{\"path\":\"/etc/cni/net.d\"},\"name\":\"cni-net-dir\"},{\"hostPath\":{\"path\":\"/var/run/dockershim.sock\"},\"name\":\"dockershim\"},{\"hostPath\":{\"path\":\"/run/xtables.lock\"},\"name\":\"xtables-lock\"},{\"hostPath\":{\"path\":\"/var/log/aws-routed-eni\",\"type\":\"DirectoryOrCreate\"},\"name\":\"log-dir\"},{\"hostPath\":{\"path\":\"/var/run/aws-node\",\"type\":\"DirectoryOrCreate\"},\"name\":\"run-dir\"}]}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":\"10%\"},\"type\":\"RollingUpdate\"}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "aws-node"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "aws-node"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "cni-bin-dir",
                                "hostPath": {
                                    "path": "/opt/cni/bin",
                                    "type": ""
                                }
                            },
                            {
                                "name": "cni-net-dir",
                                "hostPath": {
                                    "path": "/etc/cni/net.d",
                                    "type": ""
                                }
                            },
                            {
                                "name": "dockershim",
                                "hostPath": {
                                    "path": "/var/run/dockershim.sock",
                                    "type": ""
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": ""
                                }
                            },
                            {
                                "name": "log-dir",
                                "hostPath": {
                                    "path": "/var/log/aws-routed-eni",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "run-dir",
                                "hostPath": {
                                    "path": "/var/run/aws-node",
                                    "type": "DirectoryOrCreate"
                                }
                            }
                        ],
                        "initContainers": [
                            {
                                "name": "aws-vpc-cni-init",
                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.10.1-eksbuild.1",
                                "env": [
                                    {
                                        "name": "DISABLE_TCP_EARLY_DEMUX",
                                        "value": "false"
                                    },
                                    {
                                        "name": "ENABLE_IPv6",
                                        "value": "false"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "cni-bin-dir",
                                        "mountPath": "/host/opt/cni/bin"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "aws-node",
                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.10.1-eksbuild.1",
                                "ports": [
                                    {
                                        "name": "metrics",
                                        "hostPort": 61678,
                                        "containerPort": 61678,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "ADDITIONAL_ENI_TAGS",
                                        "value": "{}"
                                    },
                                    {
                                        "name": "AWS_VPC_CNI_NODE_PORT_SUPPORT",
                                        "value": "true"
                                    },
                                    {
                                        "name": "AWS_VPC_ENI_MTU",
                                        "value": "9001"
                                    },
                                    {
                                        "name": "AWS_VPC_K8S_CNI_CONFIGURE_RPFILTER",
                                        "value": "false"
                                    },
                                    {
                                        "name": "AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG",
                                        "value": "false"
                                    },
                                    {
                                        "name": "AWS_VPC_K8S_CNI_EXTERNALSNAT",
                                        "value": "false"
                                    },
                                    {
                                        "name": "AWS_VPC_K8S_CNI_LOGLEVEL",
                                        "value": "DEBUG"
                                    },
                                    {
                                        "name": "AWS_VPC_K8S_CNI_LOG_FILE",
                                        "value": "/host/var/log/aws-routed-eni/ipamd.log"
                                    },
                                    {
                                        "name": "AWS_VPC_K8S_CNI_RANDOMIZESNAT",
                                        "value": "prng"
                                    },
                                    {
                                        "name": "AWS_VPC_K8S_CNI_VETHPREFIX",
                                        "value": "eni"
                                    },
                                    {
                                        "name": "AWS_VPC_K8S_PLUGIN_LOG_FILE",
                                        "value": "/var/log/aws-routed-eni/plugin.log"
                                    },
                                    {
                                        "name": "AWS_VPC_K8S_PLUGIN_LOG_LEVEL",
                                        "value": "DEBUG"
                                    },
                                    {
                                        "name": "DISABLE_INTROSPECTION",
                                        "value": "false"
                                    },
                                    {
                                        "name": "DISABLE_METRICS",
                                        "value": "false"
                                    },
                                    {
                                        "name": "DISABLE_NETWORK_RESOURCE_PROVISIONING",
                                        "value": "false"
                                    },
                                    {
                                        "name": "ENABLE_IPv4",
                                        "value": "true"
                                    },
                                    {
                                        "name": "ENABLE_IPv6",
                                        "value": "false"
                                    },
                                    {
                                        "name": "ENABLE_POD_ENI",
                                        "value": "false"
                                    },
                                    {
                                        "name": "ENABLE_PREFIX_DELEGATION",
                                        "value": "false"
                                    },
                                    {
                                        "name": "MY_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "WARM_ENI_TARGET",
                                        "value": "1"
                                    },
                                    {
                                        "name": "WARM_PREFIX_TARGET",
                                        "value": "1"
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "25m"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "cni-bin-dir",
                                        "mountPath": "/host/opt/cni/bin"
                                    },
                                    {
                                        "name": "cni-net-dir",
                                        "mountPath": "/host/etc/cni/net.d"
                                    },
                                    {
                                        "name": "log-dir",
                                        "mountPath": "/host/var/log/aws-routed-eni"
                                    },
                                    {
                                        "name": "run-dir",
                                        "mountPath": "/var/run/aws-node"
                                    },
                                    {
                                        "name": "dockershim",
                                        "mountPath": "/var/run/dockershim.sock"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    }
                                ],
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/app/grpc-health-probe",
                                            "-addr=:50051",
                                            "-connect-timeout=5s",
                                            "-rpc-timeout=5s"
                                        ]
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/app/grpc-health-probe",
                                            "-addr=:50051",
                                            "-connect-timeout=5s",
                                            "-rpc-timeout=5s"
                                        ]
                                    },
                                    "initialDelaySeconds": 1,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_ADMIN"
                                        ]
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 10,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "aws-node",
                        "serviceAccount": "aws-node",
                        "hostNetwork": true,
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/arch",
                                                    "operator": "In",
                                                    "values": [
                                                        "amd64",
                                                        "arm64"
                                                    ]
                                                },
                                                {
                                                    "key": "eks.amazonaws.com/compute-type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "fargate"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "10%",
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 2,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 2,
                "numberReady": 2,
                "observedGeneration": 1,
                "updatedNumberScheduled": 2,
                "numberAvailable": 2
            }
        },
        {
            "metadata": {
                "name": "kube-proxy",
                "namespace": "kube-system",
                "uid": "64e1a9df-4c2f-4e25-bb8d-91201f69f21e",
                "resourceVersion": "2065",
                "generation": 1,
                "creationTimestamp": "2022-07-21T07:04:08Z",
                "labels": {
                    "eks.amazonaws.com/component": "kube-proxy",
                    "k8s-app": "kube-proxy"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"eks.amazonaws.com/component\":\"kube-proxy\",\"k8s-app\":\"kube-proxy\"},\"name\":\"kube-proxy\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"kube-proxy\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"kube-proxy\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]},{\"key\":\"kubernetes.io/arch\",\"operator\":\"In\",\"values\":[\"amd64\",\"arm64\"]},{\"key\":\"eks.amazonaws.com/compute-type\",\"operator\":\"NotIn\",\"values\":[\"fargate\"]}]}]}}},\"containers\":[{\"command\":[\"kube-proxy\",\"--v=2\",\"--config=/var/lib/kube-proxy-config/config\",\"--hostname-override=$(NODE_NAME)\"],\"env\":[{\"name\":\"NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.22.6-eksbuild.1\",\"name\":\"kube-proxy\",\"resources\":{\"requests\":{\"cpu\":\"100m\"}},\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/var/log\",\"name\":\"varlog\",\"readOnly\":false},{\"mountPath\":\"/run/xtables.lock\",\"name\":\"xtables-lock\",\"readOnly\":false},{\"mountPath\":\"/lib/modules\",\"name\":\"lib-modules\",\"readOnly\":true},{\"mountPath\":\"/var/lib/kube-proxy/\",\"name\":\"kubeconfig\"},{\"mountPath\":\"/var/lib/kube-proxy-config/\",\"name\":\"config\"}]}],\"hostNetwork\":true,\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"kube-proxy\",\"tolerations\":[{\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/var/log\"},\"name\":\"varlog\"},{\"hostPath\":{\"path\":\"/run/xtables.lock\",\"type\":\"FileOrCreate\"},\"name\":\"xtables-lock\"},{\"hostPath\":{\"path\":\"/lib/modules\"},\"name\":\"lib-modules\"},{\"configMap\":{\"name\":\"kube-proxy\"},\"name\":\"kubeconfig\"},{\"configMap\":{\"name\":\"kube-proxy-config\"},\"name\":\"config\"}]}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":\"10%\"},\"type\":\"RollingUpdate\"}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-proxy"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-proxy"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "varlog",
                                "hostPath": {
                                    "path": "/var/log",
                                    "type": ""
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            },
                            {
                                "name": "kubeconfig",
                                "configMap": {
                                    "name": "kube-proxy",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "config",
                                "configMap": {
                                    "name": "kube-proxy-config",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kube-proxy",
                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.22.6-eksbuild.1",
                                "command": [
                                    "kube-proxy",
                                    "--v=2",
                                    "--config=/var/lib/kube-proxy-config/config",
                                    "--hostname-override=$(NODE_NAME)"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "100m"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "varlog",
                                        "mountPath": "/var/log"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    },
                                    {
                                        "name": "kubeconfig",
                                        "mountPath": "/var/lib/kube-proxy/"
                                    },
                                    {
                                        "name": "config",
                                        "mountPath": "/var/lib/kube-proxy-config/"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "kube-proxy",
                        "serviceAccount": "kube-proxy",
                        "hostNetwork": true,
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/arch",
                                                    "operator": "In",
                                                    "values": [
                                                        "amd64",
                                                        "arm64"
                                                    ]
                                                },
                                                {
                                                    "key": "eks.amazonaws.com/compute-type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "fargate"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "10%",
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 2,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 2,
                "numberReady": 2,
                "observedGeneration": 1,
                "updatedNumberScheduled": 2,
                "numberAvailable": 2
            }
        }
    ]
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "13634"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns",
                "namespace": "kube-system",
                "uid": "bdce77af-171e-453d-a2ad-1010372d3a95",
                "resourceVersion": "2240",
                "generation": 1,
                "creationTimestamp": "2022-07-21T07:04:08Z",
                "labels": {
                    "eks.amazonaws.com/component": "coredns",
                    "k8s-app": "kube-dns",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"eks.amazonaws.com/component\":\"coredns\",\"k8s-app\":\"kube-dns\",\"kubernetes.io/name\":\"CoreDNS\"},\"name\":\"coredns\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"eks.amazonaws.com/component\":\"coredns\",\"k8s-app\":\"kube-dns\"}},\"strategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"eks.amazonaws.com/compute-type\":\"ec2\"},\"labels\":{\"eks.amazonaws.com/component\":\"coredns\",\"k8s-app\":\"kube-dns\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"beta.kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]},{\"key\":\"beta.kubernetes.io/arch\",\"operator\":\"In\",\"values\":[\"amd64\",\"arm64\"]}]}]}},\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"k8s-app\",\"operator\":\"In\",\"values\":[\"kube-dns\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":100}]}},\"containers\":[{\"args\":[\"-conf\",\"/etc/coredns/Corefile\"],\"image\":\"602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.8.7-eksbuild.1\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/health\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"successThreshold\":1,\"timeoutSeconds\":5},\"name\":\"coredns\",\"ports\":[{\"containerPort\":53,\"name\":\"dns\",\"protocol\":\"UDP\"},{\"containerPort\":53,\"name\":\"dns-tcp\",\"protocol\":\"TCP\"},{\"containerPort\":9153,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/health\",\"port\":8080,\"scheme\":\"HTTP\"}},\"resources\":{\"limits\":{\"memory\":\"170Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"70Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"add\":[\"NET_BIND_SERVICE\"],\"drop\":[\"all\"]},\"readOnlyRootFilesystem\":true},\"volumeMounts\":[{\"mountPath\":\"/etc/coredns\",\"name\":\"config-volume\",\"readOnly\":true},{\"mountPath\":\"/tmp\",\"name\":\"tmp\"}]}],\"dnsPolicy\":\"Default\",\"priorityClassName\":\"system-cluster-critical\",\"serviceAccountName\":\"coredns\",\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"},{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"}],\"volumes\":[{\"emptyDir\":{},\"name\":\"tmp\"},{\"configMap\":{\"items\":[{\"key\":\"Corefile\",\"path\":\"Corefile\"}],\"name\":\"coredns\"},\"name\":\"config-volume\"}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "eks.amazonaws.com/component": "coredns",
                        "k8s-app": "kube-dns"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "eks.amazonaws.com/component": "coredns",
                            "k8s-app": "kube-dns"
                        },
                        "annotations": {
                            "eks.amazonaws.com/compute-type": "ec2"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "tmp",
                                "emptyDir": {}
                            },
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.8.7-eksbuild.1",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    },
                                    {
                                        "name": "tmp",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "beta.kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "beta.kubernetes.io/arch",
                                                    "operator": "In",
                                                    "values": [
                                                        "amd64",
                                                        "arm64"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2022-07-21T07:13:59Z",
                        "lastTransitionTime": "2022-07-21T07:13:59Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2022-07-21T07:14:30Z",
                        "lastTransitionTime": "2022-07-21T07:04:13Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"coredns-7f5998f4c\" has successfully progressed."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "13634"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-7f5998f4c",
                "namespace": "kube-system",
                "uid": "bd9dc9b2-e287-4612-a6ff-591c91bd86af",
                "resourceVersion": "2239",
                "generation": 1,
                "creationTimestamp": "2022-07-21T07:04:13Z",
                "labels": {
                    "eks.amazonaws.com/component": "coredns",
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "7f5998f4c"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "3",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns",
                        "uid": "bdce77af-171e-453d-a2ad-1010372d3a95",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "eks.amazonaws.com/component": "coredns",
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "7f5998f4c"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "eks.amazonaws.com/component": "coredns",
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "7f5998f4c"
                        },
                        "annotations": {
                            "eks.amazonaws.com/compute-type": "ec2"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "tmp",
                                "emptyDir": {}
                            },
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.8.7-eksbuild.1",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    },
                                    {
                                        "name": "tmp",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "beta.kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                },
                                                {
                                                    "key": "beta.kubernetes.io/arch",
                                                    "operator": "In",
                                                    "values": [
                                                        "amd64",
                                                        "arm64"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                }
            },
            "status": {
                "replicas": 2,
                "fullyLabeledReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "13638"
    },
    "items": [
        {
            "metadata": {
                "name": "aws-node-mzszx",
                "generateName": "aws-node-",
                "namespace": "kube-system",
                "uid": "34a39ebd-69a3-4c58-91da-ee40e2c995d2",
                "resourceVersion": "2160",
                "creationTimestamp": "2022-07-21T07:13:42Z",
                "labels": {
                    "controller-revision-hash": "5fcbd59b8b",
                    "k8s-app": "aws-node",
                    "pod-template-generation": "1"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "aws-node",
                        "uid": "f2205de8-7491-4060-af30-a9e43692cf8a",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "cni-bin-dir",
                        "hostPath": {
                            "path": "/opt/cni/bin",
                            "type": ""
                        }
                    },
                    {
                        "name": "cni-net-dir",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        }
                    },
                    {
                        "name": "dockershim",
                        "hostPath": {
                            "path": "/var/run/dockershim.sock",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": ""
                        }
                    },
                    {
                        "name": "log-dir",
                        "hostPath": {
                            "path": "/var/log/aws-routed-eni",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "run-dir",
                        "hostPath": {
                            "path": "/var/run/aws-node",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "kube-api-access-5fpd6",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "initContainers": [
                    {
                        "name": "aws-vpc-cni-init",
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.10.1-eksbuild.1",
                        "env": [
                            {
                                "name": "DISABLE_TCP_EARLY_DEMUX",
                                "value": "false"
                            },
                            {
                                "name": "ENABLE_IPv6",
                                "value": "false"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "cni-bin-dir",
                                "mountPath": "/host/opt/cni/bin"
                            },
                            {
                                "name": "kube-api-access-5fpd6",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "aws-node",
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.10.1-eksbuild.1",
                        "ports": [
                            {
                                "name": "metrics",
                                "hostPort": 61678,
                                "containerPort": 61678,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "ADDITIONAL_ENI_TAGS",
                                "value": "{}"
                            },
                            {
                                "name": "AWS_VPC_CNI_NODE_PORT_SUPPORT",
                                "value": "true"
                            },
                            {
                                "name": "AWS_VPC_ENI_MTU",
                                "value": "9001"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_CONFIGURE_RPFILTER",
                                "value": "false"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG",
                                "value": "false"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_EXTERNALSNAT",
                                "value": "false"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_LOGLEVEL",
                                "value": "DEBUG"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_LOG_FILE",
                                "value": "/host/var/log/aws-routed-eni/ipamd.log"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_RANDOMIZESNAT",
                                "value": "prng"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_VETHPREFIX",
                                "value": "eni"
                            },
                            {
                                "name": "AWS_VPC_K8S_PLUGIN_LOG_FILE",
                                "value": "/var/log/aws-routed-eni/plugin.log"
                            },
                            {
                                "name": "AWS_VPC_K8S_PLUGIN_LOG_LEVEL",
                                "value": "DEBUG"
                            },
                            {
                                "name": "DISABLE_INTROSPECTION",
                                "value": "false"
                            },
                            {
                                "name": "DISABLE_METRICS",
                                "value": "false"
                            },
                            {
                                "name": "DISABLE_NETWORK_RESOURCE_PROVISIONING",
                                "value": "false"
                            },
                            {
                                "name": "ENABLE_IPv4",
                                "value": "true"
                            },
                            {
                                "name": "ENABLE_IPv6",
                                "value": "false"
                            },
                            {
                                "name": "ENABLE_POD_ENI",
                                "value": "false"
                            },
                            {
                                "name": "ENABLE_PREFIX_DELEGATION",
                                "value": "false"
                            },
                            {
                                "name": "MY_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "WARM_ENI_TARGET",
                                "value": "1"
                            },
                            {
                                "name": "WARM_PREFIX_TARGET",
                                "value": "1"
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "25m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-bin-dir",
                                "mountPath": "/host/opt/cni/bin"
                            },
                            {
                                "name": "cni-net-dir",
                                "mountPath": "/host/etc/cni/net.d"
                            },
                            {
                                "name": "log-dir",
                                "mountPath": "/host/var/log/aws-routed-eni"
                            },
                            {
                                "name": "run-dir",
                                "mountPath": "/var/run/aws-node"
                            },
                            {
                                "name": "dockershim",
                                "mountPath": "/var/run/dockershim.sock"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "kube-api-access-5fpd6",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/app/grpc-health-probe",
                                    "-addr=:50051",
                                    "-connect-timeout=5s",
                                    "-rpc-timeout=5s"
                                ]
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "/app/grpc-health-probe",
                                    "-addr=:50051",
                                    "-connect-timeout=5s",
                                    "-rpc-timeout=5s"
                                ]
                            },
                            "initialDelaySeconds": 1,
                            "timeoutSeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_ADMIN"
                                ]
                            }
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 10,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "aws-node",
                "serviceAccount": "aws-node",
                "nodeName": "ip-192-168-32-245.ec2.internal",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "ip-192-168-32-245.ec2.internal"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T07:14:00Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T07:14:08Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T07:14:08Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T07:13:42Z"
                    }
                ],
                "hostIP": "192.168.32.245",
                "podIP": "192.168.32.245",
                "podIPs": [
                    {
                        "ip": "192.168.32.245"
                    }
                ],
                "startTime": "2022-07-21T07:13:43Z",
                "initContainerStatuses": [
                    {
                        "name": "aws-vpc-cni-init",
                        "state": {
                            "terminated": {
                                "exitCode": 0,
                                "reason": "Completed",
                                "startedAt": "2022-07-21T07:13:59Z",
                                "finishedAt": "2022-07-21T07:14:00Z",
                                "containerID": "docker://b0468da683308beeac07c2c186cce780f49a2fdee649bc52da3b0a483c335fb0"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.10.1-eksbuild.1",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init@sha256:6c70af7bf257712105a89a896b2afb86c86ace865d32eb73765bf29163a08c56",
                        "containerID": "docker://b0468da683308beeac07c2c186cce780f49a2fdee649bc52da3b0a483c335fb0"
                    }
                ],
                "containerStatuses": [
                    {
                        "name": "aws-node",
                        "state": {
                            "running": {
                                "startedAt": "2022-07-21T07:14:04Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.10.1-eksbuild.1",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni@sha256:3b6db8b6fb23424366ef91d7e9e818e42291316fa81c00c2c75dcafa614340c5",
                        "containerID": "docker://8c76beb8a353e66b4d8ccc1c56b8d56a4a7f2ea7fdd54cc74c7aef48ff480aac",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "aws-node-nf2dd",
                "generateName": "aws-node-",
                "namespace": "kube-system",
                "uid": "26997ae0-deba-47df-a297-13d728525c16",
                "resourceVersion": "2042",
                "creationTimestamp": "2022-07-21T07:13:24Z",
                "labels": {
                    "controller-revision-hash": "5fcbd59b8b",
                    "k8s-app": "aws-node",
                    "pod-template-generation": "1"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "aws-node",
                        "uid": "f2205de8-7491-4060-af30-a9e43692cf8a",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "cni-bin-dir",
                        "hostPath": {
                            "path": "/opt/cni/bin",
                            "type": ""
                        }
                    },
                    {
                        "name": "cni-net-dir",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        }
                    },
                    {
                        "name": "dockershim",
                        "hostPath": {
                            "path": "/var/run/dockershim.sock",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": ""
                        }
                    },
                    {
                        "name": "log-dir",
                        "hostPath": {
                            "path": "/var/log/aws-routed-eni",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "run-dir",
                        "hostPath": {
                            "path": "/var/run/aws-node",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "kube-api-access-9d9kf",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "initContainers": [
                    {
                        "name": "aws-vpc-cni-init",
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.10.1-eksbuild.1",
                        "env": [
                            {
                                "name": "DISABLE_TCP_EARLY_DEMUX",
                                "value": "false"
                            },
                            {
                                "name": "ENABLE_IPv6",
                                "value": "false"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "cni-bin-dir",
                                "mountPath": "/host/opt/cni/bin"
                            },
                            {
                                "name": "kube-api-access-9d9kf",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "aws-node",
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.10.1-eksbuild.1",
                        "ports": [
                            {
                                "name": "metrics",
                                "hostPort": 61678,
                                "containerPort": 61678,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "ADDITIONAL_ENI_TAGS",
                                "value": "{}"
                            },
                            {
                                "name": "AWS_VPC_CNI_NODE_PORT_SUPPORT",
                                "value": "true"
                            },
                            {
                                "name": "AWS_VPC_ENI_MTU",
                                "value": "9001"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_CONFIGURE_RPFILTER",
                                "value": "false"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG",
                                "value": "false"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_EXTERNALSNAT",
                                "value": "false"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_LOGLEVEL",
                                "value": "DEBUG"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_LOG_FILE",
                                "value": "/host/var/log/aws-routed-eni/ipamd.log"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_RANDOMIZESNAT",
                                "value": "prng"
                            },
                            {
                                "name": "AWS_VPC_K8S_CNI_VETHPREFIX",
                                "value": "eni"
                            },
                            {
                                "name": "AWS_VPC_K8S_PLUGIN_LOG_FILE",
                                "value": "/var/log/aws-routed-eni/plugin.log"
                            },
                            {
                                "name": "AWS_VPC_K8S_PLUGIN_LOG_LEVEL",
                                "value": "DEBUG"
                            },
                            {
                                "name": "DISABLE_INTROSPECTION",
                                "value": "false"
                            },
                            {
                                "name": "DISABLE_METRICS",
                                "value": "false"
                            },
                            {
                                "name": "DISABLE_NETWORK_RESOURCE_PROVISIONING",
                                "value": "false"
                            },
                            {
                                "name": "ENABLE_IPv4",
                                "value": "true"
                            },
                            {
                                "name": "ENABLE_IPv6",
                                "value": "false"
                            },
                            {
                                "name": "ENABLE_POD_ENI",
                                "value": "false"
                            },
                            {
                                "name": "ENABLE_PREFIX_DELEGATION",
                                "value": "false"
                            },
                            {
                                "name": "MY_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "WARM_ENI_TARGET",
                                "value": "1"
                            },
                            {
                                "name": "WARM_PREFIX_TARGET",
                                "value": "1"
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "25m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-bin-dir",
                                "mountPath": "/host/opt/cni/bin"
                            },
                            {
                                "name": "cni-net-dir",
                                "mountPath": "/host/etc/cni/net.d"
                            },
                            {
                                "name": "log-dir",
                                "mountPath": "/host/var/log/aws-routed-eni"
                            },
                            {
                                "name": "run-dir",
                                "mountPath": "/var/run/aws-node"
                            },
                            {
                                "name": "dockershim",
                                "mountPath": "/var/run/dockershim.sock"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "kube-api-access-9d9kf",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/app/grpc-health-probe",
                                    "-addr=:50051",
                                    "-connect-timeout=5s",
                                    "-rpc-timeout=5s"
                                ]
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "/app/grpc-health-probe",
                                    "-addr=:50051",
                                    "-connect-timeout=5s",
                                    "-rpc-timeout=5s"
                                ]
                            },
                            "initialDelaySeconds": 1,
                            "timeoutSeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_ADMIN"
                                ]
                            }
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 10,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "aws-node",
                "serviceAccount": "aws-node",
                "nodeName": "ip-192-168-14-170.ec2.internal",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "ip-192-168-14-170.ec2.internal"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T07:13:41Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T07:13:47Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T07:13:47Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T07:13:24Z"
                    }
                ],
                "hostIP": "192.168.14.170",
                "podIP": "192.168.14.170",
                "podIPs": [
                    {
                        "ip": "192.168.14.170"
                    }
                ],
                "startTime": "2022-07-21T07:13:25Z",
                "initContainerStatuses": [
                    {
                        "name": "aws-vpc-cni-init",
                        "state": {
                            "terminated": {
                                "exitCode": 0,
                                "reason": "Completed",
                                "startedAt": "2022-07-21T07:13:41Z",
                                "finishedAt": "2022-07-21T07:13:41Z",
                                "containerID": "docker://983801c72776236b57c9937b5ce04dd1489b67031825ba474c67585686c863fa"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init:v1.10.1-eksbuild.1",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni-init@sha256:6c70af7bf257712105a89a896b2afb86c86ace865d32eb73765bf29163a08c56",
                        "containerID": "docker://983801c72776236b57c9937b5ce04dd1489b67031825ba474c67585686c863fa"
                    }
                ],
                "containerStatuses": [
                    {
                        "name": "aws-node",
                        "state": {
                            "running": {
                                "startedAt": "2022-07-21T07:13:45Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni:v1.10.1-eksbuild.1",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon-k8s-cni@sha256:3b6db8b6fb23424366ef91d7e9e818e42291316fa81c00c2c75dcafa614340c5",
                        "containerID": "docker://eca50e7f0409f064f7a6946c124ab3109c2895adec9768f759a73794bb010866",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-7f5998f4c-6phtp",
                "generateName": "coredns-7f5998f4c-",
                "namespace": "kube-system",
                "uid": "9a2705cb-7efa-4cdd-a695-4c15b70350f1",
                "resourceVersion": "2236",
                "creationTimestamp": "2022-07-21T07:04:13Z",
                "labels": {
                    "eks.amazonaws.com/component": "coredns",
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "7f5998f4c"
                },
                "annotations": {
                    "eks.amazonaws.com/compute-type": "ec2",
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-7f5998f4c",
                        "uid": "bd9dc9b2-e287-4612-a6ff-591c91bd86af",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "tmp",
                        "emptyDir": {}
                    },
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-cmtz7",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.8.7-eksbuild.1",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "tmp",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "kube-api-access-cmtz7",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "ip-192-168-14-170.ec2.internal",
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/os",
                                            "operator": "In",
                                            "values": [
                                                "linux"
                                            ]
                                        },
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "arm64"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T07:13:55Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T07:14:30Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T07:14:30Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T07:13:55Z"
                    }
                ],
                "hostIP": "192.168.14.170",
                "podIP": "192.168.30.66",
                "podIPs": [
                    {
                        "ip": "192.168.30.66"
                    }
                ],
                "startTime": "2022-07-21T07:13:55Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2022-07-21T07:14:30Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.8.7-eksbuild.1",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns@sha256:09c4a9684cc63dc17565b656b57797498b4a5d5e10f4286ce5ad6ff7435d7f3d",
                        "containerID": "docker://02763cad8fd0d89e7b594810bcaaad452995760bb7b0e85ced0c2a956bc70f3c",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-7f5998f4c-xqblv",
                "generateName": "coredns-7f5998f4c-",
                "namespace": "kube-system",
                "uid": "bd78f44b-908f-4106-961f-4bc8b592527e",
                "resourceVersion": "2098",
                "creationTimestamp": "2022-07-21T07:04:13Z",
                "labels": {
                    "eks.amazonaws.com/component": "coredns",
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "7f5998f4c"
                },
                "annotations": {
                    "eks.amazonaws.com/compute-type": "ec2",
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-7f5998f4c",
                        "uid": "bd9dc9b2-e287-4612-a6ff-591c91bd86af",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "tmp",
                        "emptyDir": {}
                    },
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-nk7pt",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.8.7-eksbuild.1",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "tmp",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "kube-api-access-nk7pt",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "ip-192-168-14-170.ec2.internal",
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/os",
                                            "operator": "In",
                                            "values": [
                                                "linux"
                                            ]
                                        },
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "arm64"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T07:13:55Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T07:13:59Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T07:13:59Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T07:13:55Z"
                    }
                ],
                "hostIP": "192.168.14.170",
                "podIP": "192.168.24.104",
                "podIPs": [
                    {
                        "ip": "192.168.24.104"
                    }
                ],
                "startTime": "2022-07-21T07:13:55Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2022-07-21T07:13:58Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns:v1.8.7-eksbuild.1",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/coredns@sha256:09c4a9684cc63dc17565b656b57797498b4a5d5e10f4286ce5ad6ff7435d7f3d",
                        "containerID": "docker://bde2303f437d1b01519648da617b3a952830c40231e2f7bd51980b745fce71f4",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-g4j5n",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "b6fafc8b-1432-455b-a674-5622be4f9825",
                "resourceVersion": "1963",
                "creationTimestamp": "2022-07-21T07:13:24Z",
                "labels": {
                    "controller-revision-hash": "799c56dccb",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "64e1a9df-4c2f-4e25-bb8d-91201f69f21e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "varlog",
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kubeconfig",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "config",
                        "configMap": {
                            "name": "kube-proxy-config",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-dg9pz",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.22.6-eksbuild.1",
                        "command": [
                            "kube-proxy",
                            "--v=2",
                            "--config=/var/lib/kube-proxy-config/config",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "varlog",
                                "mountPath": "/var/log"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kubeconfig",
                                "mountPath": "/var/lib/kube-proxy/"
                            },
                            {
                                "name": "config",
                                "mountPath": "/var/lib/kube-proxy-config/"
                            },
                            {
                                "name": "kube-api-access-dg9pz",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "ip-192-168-14-170.ec2.internal",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "ip-192-168-14-170.ec2.internal"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T07:13:25Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T07:13:36Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T07:13:36Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T07:13:24Z"
                    }
                ],
                "hostIP": "192.168.14.170",
                "podIP": "192.168.14.170",
                "podIPs": [
                    {
                        "ip": "192.168.14.170"
                    }
                ],
                "startTime": "2022-07-21T07:13:25Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2022-07-21T07:13:36Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.22.6-eksbuild.1",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy@sha256:c8abb4b8efc94090458f34e5f456791d9f7f57b5c99517b6b4e197305c1f10f6",
                        "containerID": "docker://49a9aa21e44eb88731a2f69c3af2273afad8e921491f893a8bdd73f7b7504534",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-qbmkg",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "c7c5a434-3af3-4a8a-a10d-e94618dba48c",
                "resourceVersion": "2064",
                "creationTimestamp": "2022-07-21T07:13:42Z",
                "labels": {
                    "controller-revision-hash": "799c56dccb",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "64e1a9df-4c2f-4e25-bb8d-91201f69f21e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "varlog",
                        "hostPath": {
                            "path": "/var/log",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kubeconfig",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "config",
                        "configMap": {
                            "name": "kube-proxy-config",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-ncw8t",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.22.6-eksbuild.1",
                        "command": [
                            "kube-proxy",
                            "--v=2",
                            "--config=/var/lib/kube-proxy-config/config",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "varlog",
                                "mountPath": "/var/log"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kubeconfig",
                                "mountPath": "/var/lib/kube-proxy/"
                            },
                            {
                                "name": "config",
                                "mountPath": "/var/lib/kube-proxy-config/"
                            },
                            {
                                "name": "kube-api-access-ncw8t",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "ip-192-168-32-245.ec2.internal",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "ip-192-168-32-245.ec2.internal"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T07:13:43Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T07:13:54Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T07:13:54Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T07:13:42Z"
                    }
                ],
                "hostIP": "192.168.32.245",
                "podIP": "192.168.32.245",
                "podIPs": [
                    {
                        "ip": "192.168.32.245"
                    }
                ],
                "startTime": "2022-07-21T07:13:43Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2022-07-21T07:13:53Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy:v1.22.6-eksbuild.1",
                        "imageID": "docker-pullable://602401143452.dkr.ecr.us-east-1.amazonaws.com/eks/kube-proxy@sha256:c8abb4b8efc94090458f34e5f456791d9f7f57b5c99517b6b4e197305c1f10f6",
                        "containerID": "docker://d0d73ce2c191892fcde904810bf210c7e4873d2ac555f5f7de7a60dde9017cd3",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        }
    ]
}
==== START logs for container aws-vpc-cni-init of pod kube-system/aws-node-mzszx ====
+ PLUGIN_BINS='loopback portmap bandwidth aws-cni-support.sh'
+ for b in '$PLUGIN_BINS'
+ '[' '!' -f loopback ']'
+ for b in '$PLUGIN_BINS'
+ '[' '!' -f portmap ']'
+ for b in '$PLUGIN_BINS'
+ '[' '!' -f bandwidth ']'
+ for b in '$PLUGIN_BINS'
+ '[' '!' -f aws-cni-support.sh ']'
+ HOST_CNI_BIN_PATH=/host/opt/cni/bin
+ echo 'Copying CNI plugin binaries ... '
+ for b in '$PLUGIN_BINS'
+ install loopback /host/opt/cni/bin
Copying CNI plugin binaries ... 
+ for b in '$PLUGIN_BINS'
+ install portmap /host/opt/cni/bin
+ for b in '$PLUGIN_BINS'
+ install bandwidth /host/opt/cni/bin
+ for b in '$PLUGIN_BINS'
+ install aws-cni-support.sh /host/opt/cni/bin
+ echo 'Configure rp_filter loose... '
Configure rp_filter loose... 
++ get_metadata local-ipv4
+++ curl -X PUT http://169.254.169.254/latest/api/token -H 'X-aws-ec2-metadata-token-ttl-seconds: 60'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    56  100    56    0     0  14000      0 --:--:-- --:--:-- --:--:-- 14000
++ TOKEN=AQAAAKcTCvktTF5v1erfdeBPkWBiyMnZgiFzq8vvfNaHU4_6oce31A==
++ attempts=60
++ false
++ '[' 1 -gt 0 ']'
++ '[' 60 -eq 0 ']'
+++ curl -H 'X-aws-ec2-metadata-token: AQAAAKcTCvktTF5v1erfdeBPkWBiyMnZgiFzq8vvfNaHU4_6oce31A==' http://169.254.169.254/latest/meta-data/local-ipv4
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    14  100    14    0     0   4666      0 --:--:-- --:--:-- --:--:--  4666
++ meta=192.168.32.245
++ '[' 0 -gt 0 ']'
++ '[' 0 -gt 0 ']'
++ echo 192.168.32.245
+ HOST_IP=192.168.32.245
++ get_metadata mac
+++ curl -X PUT http://169.254.169.254/latest/api/token -H 'X-aws-ec2-metadata-token-ttl-seconds: 60'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    56  100    56    0     0  18666      0 --:--:-- --:--:-- --:--:-- 18666
++ TOKEN=AQAAAKcTCvmfM3tSSc_P7JQnLDXCgFnrd9JJ7pO4m94Hj2Djj33MjQ==
++ attempts=60
++ false
++ '[' 1 -gt 0 ']'
++ '[' 60 -eq 0 ']'
+++ curl -H 'X-aws-ec2-metadata-token: AQAAAKcTCvmfM3tSSc_P7JQnLDXCgFnrd9JJ7pO4m94Hj2Djj33MjQ==' http://169.254.169.254/latest/meta-data/mac
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    17  100    17    0     0   2428      0 --:--:-- --:--:-- --:--:--  2428
++ meta=16:f6:d1:cf:dc:89
++ '[' 0 -gt 0 ']'
++ '[' 0 -gt 0 ']'
++ echo 16:f6:d1:cf:dc:89
+ PRIMARY_MAC=16:f6:d1:cf:dc:89
++ grep -F 'link/ether 16:f6:d1:cf:dc:89'
++ ip -o link show
++ awk '-F[ :]+' '{print $2}'
+ PRIMARY_IF=eth0
+ sysctl -w net.ipv4.conf.eth0.rp_filter=2
net.ipv4.conf.eth0.rp_filter = 2
+ cat /proc/sys/net/ipv4/conf/eth0/rp_filter
2
+ '[' false == true ']'
+ sysctl -e -w net.ipv4.tcp_early_demux=1
net.ipv4.tcp_early_demux = 1
+ '[' false == true ']'
+ echo 'CNI init container done'
CNI init container done
==== END logs for container aws-vpc-cni-init of pod kube-system/aws-node-mzszx ====
==== START logs for container aws-node of pod kube-system/aws-node-mzszx ====
{"level":"info","ts":"2022-07-21T07:14:04.285Z","caller":"entrypoint.sh","msg":"Validating env variables ..."}
{"level":"info","ts":"2022-07-21T07:14:04.287Z","caller":"entrypoint.sh","msg":"Install CNI binaries.."}
{"level":"info","ts":"2022-07-21T07:14:04.313Z","caller":"entrypoint.sh","msg":"Starting IPAM daemon in the background ... "}
{"level":"info","ts":"2022-07-21T07:14:04.314Z","caller":"entrypoint.sh","msg":"Checking for IPAM connectivity ... "}
{"level":"info","ts":"2022-07-21T07:14:06.334Z","caller":"entrypoint.sh","msg":"Retrying waiting for IPAM-D"}
{"level":"info","ts":"2022-07-21T07:14:08.342Z","caller":"entrypoint.sh","msg":"Retrying waiting for IPAM-D"}
{"level":"info","ts":"2022-07-21T07:14:08.371Z","caller":"entrypoint.sh","msg":"Copying config file ... "}
{"level":"info","ts":"2022-07-21T07:14:08.382Z","caller":"entrypoint.sh","msg":"Successfully copied CNI plugin binary and config file."}
{"level":"info","ts":"2022-07-21T07:14:08.383Z","caller":"entrypoint.sh","msg":"Foregrounding IPAM daemon ..."}
==== END logs for container aws-node of pod kube-system/aws-node-mzszx ====
==== START logs for container aws-vpc-cni-init of pod kube-system/aws-node-nf2dd ====
+ PLUGIN_BINS='loopback portmap bandwidth aws-cni-support.sh'
+ for b in '$PLUGIN_BINS'
+ '[' '!' -f loopback ']'
+ for b in '$PLUGIN_BINS'
+ '[' '!' -f portmap ']'
+ for b in '$PLUGIN_BINS'
+ '[' '!' -f bandwidth ']'
+ for b in '$PLUGIN_BINS'
+ '[' '!' -f aws-cni-support.sh ']'
+ HOST_CNI_BIN_PATH=/host/opt/cni/bin
+ echo 'Copying CNI plugin binaries ... '
+ for b in '$PLUGIN_BINS'
+ install loopback /host/opt/cni/bin
Copying CNI plugin binaries ... 
+ for b in '$PLUGIN_BINS'
+ install portmap /host/opt/cni/bin
+ for b in '$PLUGIN_BINS'
+ install bandwidth /host/opt/cni/bin
+ for b in '$PLUGIN_BINS'
+ install aws-cni-support.sh /host/opt/cni/bin
+ echo 'Configure rp_filter loose... '
Configure rp_filter loose... 
++ get_metadata local-ipv4
+++ curl -X PUT http://169.254.169.254/latest/api/token -H 'X-aws-ec2-metadata-token-ttl-seconds: 60'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    56  100    56    0     0  14000      0 --:--:-- --:--:-- --:--:-- 18666
++ TOKEN=AQAAADVY-VdETTCTWFWUmih2YPTqdGP4pdcYSPFPWPfV0OPf6r0-Og==
++ attempts=60
++ false
++ '[' 1 -gt 0 ']'
++ '[' 60 -eq 0 ']'
+++ curl -H 'X-aws-ec2-metadata-token: AQAAADVY-VdETTCTWFWUmih2YPTqdGP4pdcYSPFPWPfV0OPf6r0-Og==' http://169.254.169.254/latest/meta-data/local-ipv4
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    14  100    14    0     0   4666      0 --:--:-- --:--:-- --:--:--  4666
++ meta=192.168.14.170
++ '[' 0 -gt 0 ']'
++ '[' 0 -gt 0 ']'
++ echo 192.168.14.170
+ HOST_IP=192.168.14.170
++ get_metadata mac
+++ curl -X PUT http://169.254.169.254/latest/api/token -H 'X-aws-ec2-metadata-token-ttl-seconds: 60'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    56  100    56    0     0  18666      0 --:--:-- --:--:-- --:--:-- 18666
++ TOKEN=AQAAADVY-VdobPk44Zg2vuUxv1SYdUWN3_GrULEoB9-LnUp7x4hisA==
++ attempts=60
++ false
++ '[' 1 -gt 0 ']'
++ '[' 60 -eq 0 ']'
+++ curl -H 'X-aws-ec2-metadata-token: AQAAADVY-VdobPk44Zg2vuUxv1SYdUWN3_GrULEoB9-LnUp7x4hisA==' http://169.254.169.254/latest/meta-data/mac
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100    17  100    17    0     0   5666      0 --:--:-- --:--:-- --:--:--  5666
++ meta=12:46:c4:14:c4:13
++ '[' 0 -gt 0 ']'
++ '[' 0 -gt 0 ']'
++ echo 12:46:c4:14:c4:13
+ PRIMARY_MAC=12:46:c4:14:c4:13
++ awk '-F[ :]+' '{print $2}'
++ grep -F 'link/ether 12:46:c4:14:c4:13'
++ ip -o link show
+ PRIMARY_IF=eth0
+ sysctl -w net.ipv4.conf.eth0.rp_filter=2
net.ipv4.conf.eth0.rp_filter = 2
+ cat /proc/sys/net/ipv4/conf/eth0/rp_filter
2
+ '[' false == true ']'
+ sysctl -e -w net.ipv4.tcp_early_demux=1
net.ipv4.tcp_early_demux = 1
+ '[' false == true ']'
+ echo 'CNI init container done'
CNI init container done
==== END logs for container aws-vpc-cni-init of pod kube-system/aws-node-nf2dd ====
==== START logs for container aws-node of pod kube-system/aws-node-nf2dd ====
{"level":"info","ts":"2022-07-21T07:13:45.872Z","caller":"entrypoint.sh","msg":"Validating env variables ..."}
{"level":"info","ts":"2022-07-21T07:13:45.873Z","caller":"entrypoint.sh","msg":"Install CNI binaries.."}
{"level":"info","ts":"2022-07-21T07:13:45.899Z","caller":"entrypoint.sh","msg":"Starting IPAM daemon in the background ... "}
{"level":"info","ts":"2022-07-21T07:13:45.900Z","caller":"entrypoint.sh","msg":"Checking for IPAM connectivity ... "}
{"level":"info","ts":"2022-07-21T07:13:47.918Z","caller":"entrypoint.sh","msg":"Retrying waiting for IPAM-D"}
{"level":"info","ts":"2022-07-21T07:13:47.939Z","caller":"entrypoint.sh","msg":"Copying config file ... "}
{"level":"info","ts":"2022-07-21T07:13:47.946Z","caller":"entrypoint.sh","msg":"Successfully copied CNI plugin binary and config file."}
{"level":"info","ts":"2022-07-21T07:13:47.947Z","caller":"entrypoint.sh","msg":"Foregrounding IPAM daemon ..."}
==== END logs for container aws-node of pod kube-system/aws-node-nf2dd ====
==== START logs for container coredns of pod kube-system/coredns-7f5998f4c-6phtp ====
.:53
[INFO] plugin/reload: Running configuration MD5 = 47d57903c0f0ba4ee0626a17181e5d94
CoreDNS-1.8.7
linux/amd64, go1.17.7, a9adfd56
==== END logs for container coredns of pod kube-system/coredns-7f5998f4c-6phtp ====
==== START logs for container coredns of pod kube-system/coredns-7f5998f4c-xqblv ====
.:53
[INFO] plugin/reload: Running configuration MD5 = 47d57903c0f0ba4ee0626a17181e5d94
CoreDNS-1.8.7
linux/amd64, go1.17.7, a9adfd56
==== END logs for container coredns of pod kube-system/coredns-7f5998f4c-xqblv ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-g4j5n ====
I0721 07:13:36.377299       1 flags.go:59] FLAG: --add-dir-header="false"
I0721 07:13:36.377354       1 flags.go:59] FLAG: --alsologtostderr="false"
I0721 07:13:36.377360       1 flags.go:59] FLAG: --bind-address="0.0.0.0"
I0721 07:13:36.377365       1 flags.go:59] FLAG: --bind-address-hard-fail="false"
I0721 07:13:36.377370       1 flags.go:59] FLAG: --boot-id-file="/proc/sys/kernel/random/boot_id"
I0721 07:13:36.377376       1 flags.go:59] FLAG: --cleanup="false"
I0721 07:13:36.377380       1 flags.go:59] FLAG: --cluster-cidr=""
I0721 07:13:36.377387       1 flags.go:59] FLAG: --config="/var/lib/kube-proxy-config/config"
I0721 07:13:36.377392       1 flags.go:59] FLAG: --config-sync-period="15m0s"
I0721 07:13:36.377398       1 flags.go:59] FLAG: --conntrack-max-per-core="32768"
I0721 07:13:36.377403       1 flags.go:59] FLAG: --conntrack-min="131072"
I0721 07:13:36.377408       1 flags.go:59] FLAG: --conntrack-tcp-timeout-close-wait="1h0m0s"
I0721 07:13:36.377412       1 flags.go:59] FLAG: --conntrack-tcp-timeout-established="24h0m0s"
I0721 07:13:36.377417       1 flags.go:59] FLAG: --detect-local-mode=""
I0721 07:13:36.377422       1 flags.go:59] FLAG: --feature-gates=""
I0721 07:13:36.377428       1 flags.go:59] FLAG: --healthz-bind-address="0.0.0.0:10256"
I0721 07:13:36.377433       1 flags.go:59] FLAG: --healthz-port="10256"
I0721 07:13:36.377437       1 flags.go:59] FLAG: --help="false"
I0721 07:13:36.377450       1 flags.go:59] FLAG: --hostname-override="ip-192-168-14-170.ec2.internal"
I0721 07:13:36.377455       1 flags.go:59] FLAG: --iptables-masquerade-bit="14"
I0721 07:13:36.377460       1 flags.go:59] FLAG: --iptables-min-sync-period="1s"
I0721 07:13:36.377464       1 flags.go:59] FLAG: --iptables-sync-period="30s"
I0721 07:13:36.377469       1 flags.go:59] FLAG: --ipvs-exclude-cidrs="[]"
I0721 07:13:36.377484       1 flags.go:59] FLAG: --ipvs-min-sync-period="0s"
I0721 07:13:36.377488       1 flags.go:59] FLAG: --ipvs-scheduler=""
I0721 07:13:36.377492       1 flags.go:59] FLAG: --ipvs-strict-arp="false"
I0721 07:13:36.377496       1 flags.go:59] FLAG: --ipvs-sync-period="30s"
I0721 07:13:36.377501       1 flags.go:59] FLAG: --ipvs-tcp-timeout="0s"
I0721 07:13:36.377505       1 flags.go:59] FLAG: --ipvs-tcpfin-timeout="0s"
I0721 07:13:36.377509       1 flags.go:59] FLAG: --ipvs-udp-timeout="0s"
I0721 07:13:36.377513       1 flags.go:59] FLAG: --kube-api-burst="10"
I0721 07:13:36.377518       1 flags.go:59] FLAG: --kube-api-content-type="application/vnd.kubernetes.protobuf"
I0721 07:13:36.377523       1 flags.go:59] FLAG: --kube-api-qps="5"
I0721 07:13:36.377528       1 flags.go:59] FLAG: --kubeconfig=""
I0721 07:13:36.377533       1 flags.go:59] FLAG: --log-backtrace-at=":0"
I0721 07:13:36.377540       1 flags.go:59] FLAG: --log-dir=""
I0721 07:13:36.377545       1 flags.go:59] FLAG: --log-file=""
I0721 07:13:36.377549       1 flags.go:59] FLAG: --log-file-max-size="1800"
I0721 07:13:36.377553       1 flags.go:59] FLAG: --log-flush-frequency="5s"
I0721 07:13:36.377558       1 flags.go:59] FLAG: --logtostderr="true"
I0721 07:13:36.377562       1 flags.go:59] FLAG: --machine-id-file="/etc/machine-id,/var/lib/dbus/machine-id"
I0721 07:13:36.377567       1 flags.go:59] FLAG: --masquerade-all="false"
I0721 07:13:36.377572       1 flags.go:59] FLAG: --master=""
I0721 07:13:36.377577       1 flags.go:59] FLAG: --metrics-bind-address="127.0.0.1:10249"
I0721 07:13:36.377581       1 flags.go:59] FLAG: --metrics-port="10249"
I0721 07:13:36.377586       1 flags.go:59] FLAG: --nodeport-addresses="[]"
I0721 07:13:36.377593       1 flags.go:59] FLAG: --one-output="false"
I0721 07:13:36.377597       1 flags.go:59] FLAG: --oom-score-adj="-999"
I0721 07:13:36.377602       1 flags.go:59] FLAG: --profiling="false"
I0721 07:13:36.377606       1 flags.go:59] FLAG: --proxy-mode=""
I0721 07:13:36.377611       1 flags.go:59] FLAG: --proxy-port-range=""
I0721 07:13:36.377616       1 flags.go:59] FLAG: --show-hidden-metrics-for-version=""
I0721 07:13:36.377620       1 flags.go:59] FLAG: --skip-headers="false"
I0721 07:13:36.377624       1 flags.go:59] FLAG: --skip-log-headers="false"
I0721 07:13:36.377629       1 flags.go:59] FLAG: --stderrthreshold="2"
I0721 07:13:36.377634       1 flags.go:59] FLAG: --udp-timeout="250ms"
I0721 07:13:36.377638       1 flags.go:59] FLAG: --v="2"
I0721 07:13:36.377642       1 flags.go:59] FLAG: --version="false"
I0721 07:13:36.377649       1 flags.go:59] FLAG: --vmodule=""
I0721 07:13:36.377653       1 flags.go:59] FLAG: --write-config-to=""
I0721 07:13:36.380471       1 feature_gate.go:245] feature gates: &{map[]}
I0721 07:13:36.380582       1 feature_gate.go:245] feature gates: &{map[]}
I0721 07:13:36.592335       1 node.go:172] Successfully retrieved node IP: 192.168.14.170
I0721 07:13:36.592379       1 server_others.go:140] Detected node IP 192.168.14.170
I0721 07:13:36.592452       1 server_others.go:177] DetectLocalMode: 'ClusterCIDR'
I0721 07:13:36.710154       1 server_others.go:206] kube-proxy running in dual-stack mode, IPv4-primary
I0721 07:13:36.710182       1 server_others.go:212] Using iptables Proxier.
I0721 07:13:36.710194       1 server_others.go:219] creating dualStackProxier for iptables.
W0721 07:13:36.710201       1 server_others.go:479] detect-local-mode set to ClusterCIDR, but no cluster CIDR defined
W0721 07:13:36.710206       1 server_others.go:528] detect-local-mode: ClusterCIDR , defaulting to no-op detect-local
I0721 07:13:36.710274       1 utils.go:370] Changed sysctl "net/ipv4/conf/all/route_localnet": 0 -> 1
I0721 07:13:36.710332       1 proxier.go:282] "Using iptables mark for masquerade" ipFamily=IPv4 mark="0x00004000"
I0721 07:13:36.710370       1 proxier.go:328] "Iptables sync params" ipFamily=IPv4 minSyncPeriod="1s" syncPeriod="30s" burstSyncs=2
I0721 07:13:36.710397       1 proxier.go:338] "Iptables supports --random-fully" ipFamily=IPv4
I0721 07:13:36.710461       1 proxier.go:282] "Using iptables mark for masquerade" ipFamily=IPv6 mark="0x00004000"
I0721 07:13:36.710489       1 proxier.go:328] "Iptables sync params" ipFamily=IPv6 minSyncPeriod="1s" syncPeriod="30s" burstSyncs=2
I0721 07:13:36.710504       1 proxier.go:338] "Iptables supports --random-fully" ipFamily=IPv6
I0721 07:13:36.710670       1 server.go:649] Version: v1.22.6-eks-0d102a7
I0721 07:13:36.711506       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_max' to 131072
I0721 07:13:36.711527       1 conntrack.go:52] Setting nf_conntrack_max to 131072
I0721 07:13:36.711606       1 mount_linux.go:207] Detected OS without systemd
I0721 07:13:36.711793       1 conntrack.go:83] Setting conntrack hashsize to 32768
I0721 07:13:36.715470       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_tcp_timeout_established' to 86400
I0721 07:13:36.715517       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_tcp_timeout_close_wait' to 3600
I0721 07:13:36.720150       1 config.go:315] Starting service config controller
I0721 07:13:36.720168       1 shared_informer.go:240] Waiting for caches to sync for service config
I0721 07:13:36.720191       1 config.go:224] Starting endpoint slice config controller
I0721 07:13:36.720196       1 shared_informer.go:240] Waiting for caches to sync for endpoint slice config
I0721 07:13:36.731286       1 service.go:301] Service default/kubernetes updated: 1 ports
I0721 07:13:36.731320       1 service.go:301] Service kube-system/kube-dns updated: 2 ports
I0721 07:13:36.821345       1 shared_informer.go:247] Caches are synced for endpoint slice config 
I0721 07:13:36.821439       1 proxier.go:805] "Not syncing iptables until Services and Endpoints have been received from master"
I0721 07:13:36.821534       1 shared_informer.go:247] Caches are synced for service config 
I0721 07:13:36.821574       1 service.go:416] Adding new service port "default/kubernetes:https" at 10.100.0.1:443/TCP
I0721 07:13:36.821590       1 service.go:416] Adding new service port "kube-system/kube-dns:dns" at 10.100.0.10:53/UDP
I0721 07:13:36.821599       1 service.go:416] Adding new service port "kube-system/kube-dns:dns-tcp" at 10.100.0.10:53/TCP
I0721 07:13:36.821656       1 proxier.go:846] "Syncing iptables rules"
I0721 07:13:36.822212       1 proxier.go:805] "Not syncing iptables until Services and Endpoints have been received from master"
I0721 07:13:36.942823       1 proxier.go:813] "SyncProxyRules complete" elapsed="121.230672ms"
I0721 07:13:36.942871       1 proxier.go:846] "Syncing iptables rules"
I0721 07:13:37.020864       1 proxier.go:813] "SyncProxyRules complete" elapsed="78.003374ms"
I0721 07:13:59.069342       1 proxier.go:846] "Syncing iptables rules"
I0721 07:13:59.145548       1 proxier.go:813] "SyncProxyRules complete" elapsed="76.248849ms"
I0721 07:13:59.145870       1 proxier.go:830] "Stale service" protocol="udp" svcPortName="kube-system/kube-dns:dns" clusterIP="10.100.0.10"
I0721 07:13:59.146001       1 proxier.go:846] "Syncing iptables rules"
I0721 07:13:59.194544       1 proxier.go:813] "SyncProxyRules complete" elapsed="48.802175ms"
I0721 07:14:30.805745       1 proxier.go:846] "Syncing iptables rules"
I0721 07:14:30.837815       1 proxier.go:813] "SyncProxyRules complete" elapsed="32.11112ms"
I0721 07:14:30.838053       1 proxier.go:846] "Syncing iptables rules"
I0721 07:14:30.869254       1 proxier.go:813] "SyncProxyRules complete" elapsed="31.240036ms"
I0721 08:05:01.247129       1 service.go:301] Service default/myapp updated: 1 ports
I0721 08:05:01.247200       1 service.go:416] Adding new service port "default/myapp" at 10.100.46.11:80/TCP
I0721 08:05:01.247235       1 proxier.go:846] "Syncing iptables rules"
I0721 08:05:01.279458       1 proxier.go:813] "SyncProxyRules complete" elapsed="32.2505ms"
I0721 08:05:01.279687       1 proxier.go:846] "Syncing iptables rules"
I0721 08:05:01.310862       1 proxier.go:813] "SyncProxyRules complete" elapsed="31.193125ms"
I0721 08:13:36.716575       1 proxier.go:846] "Syncing iptables rules"
I0721 08:13:36.746331       1 proxier.go:813] "SyncProxyRules complete" elapsed="29.773032ms"
==== END logs for container kube-proxy of pod kube-system/kube-proxy-g4j5n ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-qbmkg ====
I0721 07:13:53.437952       1 flags.go:59] FLAG: --add-dir-header="false"
I0721 07:13:53.440722       1 flags.go:59] FLAG: --alsologtostderr="false"
I0721 07:13:53.440743       1 flags.go:59] FLAG: --bind-address="0.0.0.0"
I0721 07:13:53.440751       1 flags.go:59] FLAG: --bind-address-hard-fail="false"
I0721 07:13:53.440757       1 flags.go:59] FLAG: --boot-id-file="/proc/sys/kernel/random/boot_id"
I0721 07:13:53.440762       1 flags.go:59] FLAG: --cleanup="false"
I0721 07:13:53.440767       1 flags.go:59] FLAG: --cluster-cidr=""
I0721 07:13:53.440772       1 flags.go:59] FLAG: --config="/var/lib/kube-proxy-config/config"
I0721 07:13:53.440777       1 flags.go:59] FLAG: --config-sync-period="15m0s"
I0721 07:13:53.440783       1 flags.go:59] FLAG: --conntrack-max-per-core="32768"
I0721 07:13:53.440789       1 flags.go:59] FLAG: --conntrack-min="131072"
I0721 07:13:53.440794       1 flags.go:59] FLAG: --conntrack-tcp-timeout-close-wait="1h0m0s"
I0721 07:13:53.440798       1 flags.go:59] FLAG: --conntrack-tcp-timeout-established="24h0m0s"
I0721 07:13:53.440803       1 flags.go:59] FLAG: --detect-local-mode=""
I0721 07:13:53.440808       1 flags.go:59] FLAG: --feature-gates=""
I0721 07:13:53.440814       1 flags.go:59] FLAG: --healthz-bind-address="0.0.0.0:10256"
I0721 07:13:53.440820       1 flags.go:59] FLAG: --healthz-port="10256"
I0721 07:13:53.440824       1 flags.go:59] FLAG: --help="false"
I0721 07:13:53.440828       1 flags.go:59] FLAG: --hostname-override="ip-192-168-32-245.ec2.internal"
I0721 07:13:53.440833       1 flags.go:59] FLAG: --iptables-masquerade-bit="14"
I0721 07:13:53.440838       1 flags.go:59] FLAG: --iptables-min-sync-period="1s"
I0721 07:13:53.440851       1 flags.go:59] FLAG: --iptables-sync-period="30s"
I0721 07:13:53.440856       1 flags.go:59] FLAG: --ipvs-exclude-cidrs="[]"
I0721 07:13:53.440878       1 flags.go:59] FLAG: --ipvs-min-sync-period="0s"
I0721 07:13:53.440882       1 flags.go:59] FLAG: --ipvs-scheduler=""
I0721 07:13:53.440887       1 flags.go:59] FLAG: --ipvs-strict-arp="false"
I0721 07:13:53.440892       1 flags.go:59] FLAG: --ipvs-sync-period="30s"
I0721 07:13:53.440896       1 flags.go:59] FLAG: --ipvs-tcp-timeout="0s"
I0721 07:13:53.440901       1 flags.go:59] FLAG: --ipvs-tcpfin-timeout="0s"
I0721 07:13:53.440905       1 flags.go:59] FLAG: --ipvs-udp-timeout="0s"
I0721 07:13:53.440909       1 flags.go:59] FLAG: --kube-api-burst="10"
I0721 07:13:53.440914       1 flags.go:59] FLAG: --kube-api-content-type="application/vnd.kubernetes.protobuf"
I0721 07:13:53.440919       1 flags.go:59] FLAG: --kube-api-qps="5"
I0721 07:13:53.440936       1 flags.go:59] FLAG: --kubeconfig=""
I0721 07:13:53.440941       1 flags.go:59] FLAG: --log-backtrace-at=":0"
I0721 07:13:53.440949       1 flags.go:59] FLAG: --log-dir=""
I0721 07:13:53.440956       1 flags.go:59] FLAG: --log-file=""
I0721 07:13:53.440960       1 flags.go:59] FLAG: --log-file-max-size="1800"
I0721 07:13:53.440965       1 flags.go:59] FLAG: --log-flush-frequency="5s"
I0721 07:13:53.440970       1 flags.go:59] FLAG: --logtostderr="true"
I0721 07:13:53.440974       1 flags.go:59] FLAG: --machine-id-file="/etc/machine-id,/var/lib/dbus/machine-id"
I0721 07:13:53.440979       1 flags.go:59] FLAG: --masquerade-all="false"
I0721 07:13:53.440984       1 flags.go:59] FLAG: --master=""
I0721 07:13:53.440988       1 flags.go:59] FLAG: --metrics-bind-address="127.0.0.1:10249"
I0721 07:13:53.440994       1 flags.go:59] FLAG: --metrics-port="10249"
I0721 07:13:53.440999       1 flags.go:59] FLAG: --nodeport-addresses="[]"
I0721 07:13:53.441004       1 flags.go:59] FLAG: --one-output="false"
I0721 07:13:53.441009       1 flags.go:59] FLAG: --oom-score-adj="-999"
I0721 07:13:53.441014       1 flags.go:59] FLAG: --profiling="false"
I0721 07:13:53.441018       1 flags.go:59] FLAG: --proxy-mode=""
I0721 07:13:53.441023       1 flags.go:59] FLAG: --proxy-port-range=""
I0721 07:13:53.441028       1 flags.go:59] FLAG: --show-hidden-metrics-for-version=""
I0721 07:13:53.441033       1 flags.go:59] FLAG: --skip-headers="false"
I0721 07:13:53.441037       1 flags.go:59] FLAG: --skip-log-headers="false"
I0721 07:13:53.441042       1 flags.go:59] FLAG: --stderrthreshold="2"
I0721 07:13:53.441047       1 flags.go:59] FLAG: --udp-timeout="250ms"
I0721 07:13:53.441052       1 flags.go:59] FLAG: --v="2"
I0721 07:13:53.441057       1 flags.go:59] FLAG: --version="false"
I0721 07:13:53.441063       1 flags.go:59] FLAG: --vmodule=""
I0721 07:13:53.441068       1 flags.go:59] FLAG: --write-config-to=""
I0721 07:13:53.443019       1 feature_gate.go:245] feature gates: &{map[]}
I0721 07:13:53.443140       1 feature_gate.go:245] feature gates: &{map[]}
I0721 07:13:53.678281       1 node.go:172] Successfully retrieved node IP: 192.168.32.245
I0721 07:13:53.678326       1 server_others.go:140] Detected node IP 192.168.32.245
I0721 07:13:53.678400       1 server_others.go:177] DetectLocalMode: 'ClusterCIDR'
I0721 07:13:53.799154       1 server_others.go:206] kube-proxy running in dual-stack mode, IPv4-primary
I0721 07:13:53.799191       1 server_others.go:212] Using iptables Proxier.
I0721 07:13:53.799225       1 server_others.go:219] creating dualStackProxier for iptables.
W0721 07:13:53.799234       1 server_others.go:479] detect-local-mode set to ClusterCIDR, but no cluster CIDR defined
W0721 07:13:53.799239       1 server_others.go:528] detect-local-mode: ClusterCIDR , defaulting to no-op detect-local
I0721 07:13:53.799301       1 utils.go:370] Changed sysctl "net/ipv4/conf/all/route_localnet": 0 -> 1
I0721 07:13:53.799378       1 proxier.go:282] "Using iptables mark for masquerade" ipFamily=IPv4 mark="0x00004000"
I0721 07:13:53.799409       1 proxier.go:328] "Iptables sync params" ipFamily=IPv4 minSyncPeriod="1s" syncPeriod="30s" burstSyncs=2
I0721 07:13:53.799460       1 proxier.go:338] "Iptables supports --random-fully" ipFamily=IPv4
I0721 07:13:53.799502       1 proxier.go:282] "Using iptables mark for masquerade" ipFamily=IPv6 mark="0x00004000"
I0721 07:13:53.799527       1 proxier.go:328] "Iptables sync params" ipFamily=IPv6 minSyncPeriod="1s" syncPeriod="30s" burstSyncs=2
I0721 07:13:53.799543       1 proxier.go:338] "Iptables supports --random-fully" ipFamily=IPv6
I0721 07:13:53.799739       1 server.go:649] Version: v1.22.6-eks-0d102a7
I0721 07:13:53.802968       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_max' to 131072
I0721 07:13:53.803019       1 conntrack.go:52] Setting nf_conntrack_max to 131072
I0721 07:13:53.803127       1 mount_linux.go:207] Detected OS without systemd
I0721 07:13:53.803363       1 conntrack.go:83] Setting conntrack hashsize to 32768
I0721 07:13:53.805496       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_tcp_timeout_established' to 86400
I0721 07:13:53.805547       1 conntrack.go:100] Set sysctl 'net/netfilter/nf_conntrack_tcp_timeout_close_wait' to 3600
I0721 07:13:53.809313       1 config.go:315] Starting service config controller
I0721 07:13:53.809331       1 shared_informer.go:240] Waiting for caches to sync for service config
I0721 07:13:53.809369       1 config.go:224] Starting endpoint slice config controller
I0721 07:13:53.809376       1 shared_informer.go:240] Waiting for caches to sync for endpoint slice config
I0721 07:13:53.818700       1 service.go:301] Service default/kubernetes updated: 1 ports
I0721 07:13:53.818729       1 service.go:301] Service kube-system/kube-dns updated: 2 ports
I0721 07:13:53.910094       1 shared_informer.go:247] Caches are synced for endpoint slice config 
I0721 07:13:53.910208       1 proxier.go:805] "Not syncing iptables until Services and Endpoints have been received from master"
I0721 07:13:53.910270       1 proxier.go:805] "Not syncing iptables until Services and Endpoints have been received from master"
I0721 07:13:53.910285       1 shared_informer.go:247] Caches are synced for service config 
I0721 07:13:53.910320       1 service.go:416] Adding new service port "default/kubernetes:https" at 10.100.0.1:443/TCP
I0721 07:13:53.910337       1 service.go:416] Adding new service port "kube-system/kube-dns:dns-tcp" at 10.100.0.10:53/TCP
I0721 07:13:53.910346       1 service.go:416] Adding new service port "kube-system/kube-dns:dns" at 10.100.0.10:53/UDP
I0721 07:13:53.910392       1 proxier.go:846] "Syncing iptables rules"
I0721 07:13:54.030232       1 proxier.go:813] "SyncProxyRules complete" elapsed="119.910085ms"
I0721 07:13:54.030284       1 proxier.go:846] "Syncing iptables rules"
I0721 07:13:54.109886       1 proxier.go:813] "SyncProxyRules complete" elapsed="79.601606ms"
I0721 07:13:59.069099       1 proxier.go:846] "Syncing iptables rules"
I0721 07:13:59.136324       1 proxier.go:813] "SyncProxyRules complete" elapsed="67.255509ms"
I0721 07:13:59.136456       1 proxier.go:830] "Stale service" protocol="udp" svcPortName="kube-system/kube-dns:dns" clusterIP="10.100.0.10"
I0721 07:13:59.136474       1 proxier.go:846] "Syncing iptables rules"
I0721 07:13:59.227658       1 proxier.go:813] "SyncProxyRules complete" elapsed="91.262872ms"
I0721 07:14:30.799643       1 proxier.go:846] "Syncing iptables rules"
I0721 07:14:30.842156       1 proxier.go:813] "SyncProxyRules complete" elapsed="42.562638ms"
I0721 07:14:30.842434       1 proxier.go:846] "Syncing iptables rules"
I0721 07:14:30.875672       1 proxier.go:813] "SyncProxyRules complete" elapsed="33.317115ms"
I0721 08:05:01.289574       1 proxier.go:846] "Syncing iptables rules"
I0721 08:05:01.306092       1 service.go:301] Service default/myapp updated: 1 ports
I0721 08:05:01.373855       1 proxier.go:813] "SyncProxyRules complete" elapsed="84.289603ms"
I0721 08:05:01.374950       1 service.go:416] Adding new service port "default/myapp" at 10.100.46.11:80/TCP
I0721 08:05:01.378188       1 proxier.go:846] "Syncing iptables rules"
I0721 08:05:01.415845       1 proxier.go:813] "SyncProxyRules complete" elapsed="41.767636ms"
I0721 08:13:53.812206       1 proxier.go:846] "Syncing iptables rules"
I0721 08:13:53.859200       1 proxier.go:813] "SyncProxyRules complete" elapsed="47.017886ms"
==== END logs for container kube-proxy of pod kube-system/kube-proxy-qbmkg ====
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "13658"
    },
    "items": [
        {
            "metadata": {
                "name": "myapp-86454f4887-h4tb7.1703c9831e114d9e",
                "namespace": "default",
                "uid": "75d6f33e-269c-4c66-8e9f-224d23cfe19b",
                "resourceVersion": "13578",
                "creationTimestamp": "2022-07-21T08:04:12Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-86454f4887-h4tb7",
                "uid": "a6269845-c543-4815-873f-19810599b562",
                "apiVersion": "v1",
                "resourceVersion": "10558"
            },
            "reason": "FailedScheduling",
            "message": "0/2 nodes are available: 1 Insufficient cpu, 1 Too many pods.",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2022-07-21T08:04:12Z",
            "lastTimestamp": "2022-07-21T08:21:42Z",
            "count": 18,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-86454f4887-npl8g.1703c9831db75b35",
                "namespace": "default",
                "uid": "baa762df-b25c-4c3f-904a-d54a75762666",
                "resourceVersion": "10561",
                "creationTimestamp": "2022-07-21T08:04:12Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-86454f4887-npl8g",
                "uid": "9d2f10c0-ab7f-4a15-9787-395ae7614f96",
                "apiVersion": "v1",
                "resourceVersion": "10555"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned default/myapp-86454f4887-npl8g to ip-192-168-32-245.ec2.internal",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2022-07-21T08:04:12Z",
            "lastTimestamp": "2022-07-21T08:04:12Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-86454f4887-npl8g.1703c983671fd3b8",
                "namespace": "default",
                "uid": "7b62b711-53b8-4fb1-bbf4-0a6eb91b5983",
                "resourceVersion": "11050",
                "creationTimestamp": "2022-07-21T08:04:14Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-86454f4887-npl8g",
                "uid": "9d2f10c0-ab7f-4a15-9787-395ae7614f96",
                "apiVersion": "v1",
                "resourceVersion": "10556",
                "fieldPath": "spec.containers{simple-node}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"mfadhiligitau/image1:latest\"",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-32-245.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T08:04:14Z",
            "lastTimestamp": "2022-07-21T08:06:51Z",
            "count": 4,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-86454f4887-npl8g.1703c98b2d543c6b",
                "namespace": "default",
                "uid": "1e1bd1b6-8491-43fa-aba2-d0bf486b6128",
                "resourceVersion": "10666",
                "creationTimestamp": "2022-07-21T08:04:47Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-86454f4887-npl8g",
                "uid": "9d2f10c0-ab7f-4a15-9787-395ae7614f96",
                "apiVersion": "v1",
                "resourceVersion": "10556",
                "fieldPath": "spec.containers{simple-node}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"mfadhiligitau/image1:latest\" in 33.390075653s",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-32-245.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T08:04:47Z",
            "lastTimestamp": "2022-07-21T08:04:47Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-86454f4887-npl8g.1703c98b45026e56",
                "namespace": "default",
                "uid": "5b75342a-306a-4130-ac13-219d9be197b1",
                "resourceVersion": "10925",
                "creationTimestamp": "2022-07-21T08:04:47Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-86454f4887-npl8g",
                "uid": "9d2f10c0-ab7f-4a15-9787-395ae7614f96",
                "apiVersion": "v1",
                "resourceVersion": "10556",
                "fieldPath": "spec.containers{simple-node}"
            },
            "reason": "Created",
            "message": "Created container simple-node",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-32-245.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T08:04:47Z",
            "lastTimestamp": "2022-07-21T08:06:10Z",
            "count": 3,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-86454f4887-npl8g.1703c98b538eb890",
                "namespace": "default",
                "uid": "10e71b8c-51b0-42ea-b0d9-9f8316740da1",
                "resourceVersion": "10926",
                "creationTimestamp": "2022-07-21T08:04:48Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-86454f4887-npl8g",
                "uid": "9d2f10c0-ab7f-4a15-9787-395ae7614f96",
                "apiVersion": "v1",
                "resourceVersion": "10556",
                "fieldPath": "spec.containers{simple-node}"
            },
            "reason": "Started",
            "message": "Started container simple-node",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-32-245.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T08:04:48Z",
            "lastTimestamp": "2022-07-21T08:06:10Z",
            "count": 3,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-86454f4887-npl8g.1703c98c348cbd19",
                "namespace": "default",
                "uid": "d2dd0996-65ff-47ca-9142-fdbed8846560",
                "resourceVersion": "10963",
                "creationTimestamp": "2022-07-21T08:04:51Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-86454f4887-npl8g",
                "uid": "9d2f10c0-ab7f-4a15-9787-395ae7614f96",
                "apiVersion": "v1",
                "resourceVersion": "10556",
                "fieldPath": "spec.containers{simple-node}"
            },
            "reason": "Unhealthy",
            "message": "Liveness probe failed: Get \"http://192.168.38.27:8080/health\": dial tcp 192.168.38.27:8080: connect: connection refused",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-32-245.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T08:04:51Z",
            "lastTimestamp": "2022-07-21T08:06:21Z",
            "count": 9,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-86454f4887-npl8g.1703c98d998e0396",
                "namespace": "default",
                "uid": "691de94b-0793-4d5d-8e6d-4f8aba98c268",
                "resourceVersion": "10964",
                "creationTimestamp": "2022-07-21T08:04:57Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-86454f4887-npl8g",
                "uid": "9d2f10c0-ab7f-4a15-9787-395ae7614f96",
                "apiVersion": "v1",
                "resourceVersion": "10556",
                "fieldPath": "spec.containers{simple-node}"
            },
            "reason": "Killing",
            "message": "Container simple-node failed liveness probe, will be restarted",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-32-245.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T08:04:57Z",
            "lastTimestamp": "2022-07-21T08:06:21Z",
            "count": 3,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-86454f4887-npl8g.1703c994a6fe06a3",
                "namespace": "default",
                "uid": "4640bed9-a458-4509-ad83-86736d9021a0",
                "resourceVersion": "10796",
                "creationTimestamp": "2022-07-21T08:05:28Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-86454f4887-npl8g",
                "uid": "9d2f10c0-ab7f-4a15-9787-395ae7614f96",
                "apiVersion": "v1",
                "resourceVersion": "10556",
                "fieldPath": "spec.containers{simple-node}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"mfadhiligitau/image1:latest\" in 153.579073ms",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-32-245.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T08:05:28Z",
            "lastTimestamp": "2022-07-21T08:05:28Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-86454f4887-npl8g.1703c99e6b786f56",
                "namespace": "default",
                "uid": "60b35d29-7bf7-4969-8ed8-a3476c9849e8",
                "resourceVersion": "10924",
                "creationTimestamp": "2022-07-21T08:06:10Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-86454f4887-npl8g",
                "uid": "9d2f10c0-ab7f-4a15-9787-395ae7614f96",
                "apiVersion": "v1",
                "resourceVersion": "10556",
                "fieldPath": "spec.containers{simple-node}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"mfadhiligitau/image1:latest\" in 154.542759ms",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-32-245.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T08:06:10Z",
            "lastTimestamp": "2022-07-21T08:06:10Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-86454f4887-npl8g.1703c9c57f278454",
                "namespace": "default",
                "uid": "816ee949-d2a8-4c0f-bbde-972a0d1a1ca8",
                "resourceVersion": "13184",
                "creationTimestamp": "2022-07-21T08:09:23Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "myapp-86454f4887-npl8g",
                "uid": "9d2f10c0-ab7f-4a15-9787-395ae7614f96",
                "apiVersion": "v1",
                "resourceVersion": "10556",
                "fieldPath": "spec.containers{simple-node}"
            },
            "reason": "BackOff",
            "message": "Back-off restarting failed container",
            "source": {
                "component": "kubelet",
                "host": "ip-192-168-32-245.ec2.internal"
            },
            "firstTimestamp": "2022-07-21T08:08:57Z",
            "lastTimestamp": "2022-07-21T08:19:25Z",
            "count": 47,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-86454f4887.1703c9831cb9127c",
                "namespace": "default",
                "uid": "57d56a97-dcee-4b68-a692-abb4b8e3c2c8",
                "resourceVersion": "10557",
                "creationTimestamp": "2022-07-21T08:04:12Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "default",
                "name": "myapp-86454f4887",
                "uid": "225dbef3-6831-4b66-9d59-402f68a2aa3d",
                "apiVersion": "apps/v1",
                "resourceVersion": "10550"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: myapp-86454f4887-npl8g",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2022-07-21T08:04:12Z",
            "lastTimestamp": "2022-07-21T08:04:12Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp-86454f4887.1703c9831dd2b032",
                "namespace": "default",
                "uid": "87a8868f-0904-491d-918d-eb4daf76e3b0",
                "resourceVersion": "10559",
                "creationTimestamp": "2022-07-21T08:04:12Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "default",
                "name": "myapp-86454f4887",
                "uid": "225dbef3-6831-4b66-9d59-402f68a2aa3d",
                "apiVersion": "apps/v1",
                "resourceVersion": "10550"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: myapp-86454f4887-h4tb7",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2022-07-21T08:04:12Z",
            "lastTimestamp": "2022-07-21T08:04:12Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "myapp.1703c9830e32a88f",
                "namespace": "default",
                "uid": "1545284b-247e-4040-a66a-9cc7744f1aec",
                "resourceVersion": "10552",
                "creationTimestamp": "2022-07-21T08:04:12Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "default",
                "name": "myapp",
                "uid": "8e8e4ebd-6228-47fc-8aa1-ad81051cd015",
                "apiVersion": "apps/v1",
                "resourceVersion": "10549"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled up replica set myapp-86454f4887 to 2",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2022-07-21T08:04:12Z",
            "lastTimestamp": "2022-07-21T08:04:12Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "13662"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "13662"
    },
    "items": [
        {
            "metadata": {
                "name": "kubernetes",
                "namespace": "default",
                "uid": "4cc37693-2b38-4300-8625-40ab8a1a0d4c",
                "resourceVersion": "230",
                "creationTimestamp": "2022-07-21T07:04:06Z",
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 443
                    }
                ],
                "clusterIP": "10.100.0.1",
                "clusterIPs": [
                    "10.100.0.1"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "myapp",
                "namespace": "default",
                "uid": "ba5762e0-26c5-48c4-9983-7dc26f0e72b3",
                "resourceVersion": "10715",
                "creationTimestamp": "2022-07-21T08:05:01Z",
                "labels": {
                    "run": "myapp"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"run\":\"myapp\"},\"name\":\"myapp\",\"namespace\":\"default\"},\"spec\":{\"ports\":[{\"port\":80,\"protocol\":\"TCP\",\"targetPort\":80}],\"selector\":{\"app\":\"myapp\",\"run\":\"myapp\"}}}\n"
                }
            },
            "spec": {
                "ports": [
                    {
                        "protocol": "TCP",
                        "port": 80,
                        "targetPort": 80
                    }
                ],
                "selector": {
                    "app": "myapp",
                    "run": "myapp"
                },
                "clusterIP": "10.100.46.11",
                "clusterIPs": [
                    "10.100.46.11"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "13662"
    },
    "items": []
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "13662"
    },
    "items": [
        {
            "metadata": {
                "name": "myapp",
                "namespace": "default",
                "uid": "8e8e4ebd-6228-47fc-8aa1-ad81051cd015",
                "resourceVersion": "13465",
                "generation": 1,
                "creationTimestamp": "2022-07-21T08:04:12Z",
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"name\":\"myapp\",\"namespace\":\"default\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"myapp\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"myapp\"}},\"spec\":{\"containers\":[{\"image\":\"mfadhiligitau/image1:latest\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/health\",\"port\":8080},\"initialDelaySeconds\":3,\"periodSeconds\":3},\"name\":\"simple-node\",\"ports\":[{\"containerPort\":80}],\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"128Mi\"}}}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "app": "myapp"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "myapp"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "simple-node",
                                "image": "mfadhiligitau/image1:latest",
                                "ports": [
                                    {
                                        "containerPort": 80,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "500m",
                                        "memory": "128Mi"
                                    }
                                },
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 3,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 3,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "Always"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 2,
                "updatedReplicas": 2,
                "unavailableReplicas": 2,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "False",
                        "lastUpdateTime": "2022-07-21T08:04:12Z",
                        "lastTransitionTime": "2022-07-21T08:04:12Z",
                        "reason": "MinimumReplicasUnavailable",
                        "message": "Deployment does not have minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2022-07-21T08:19:38Z",
                        "lastTransitionTime": "2022-07-21T08:04:12Z",
                        "reason": "ReplicaSetUpdated",
                        "message": "ReplicaSet \"myapp-86454f4887\" is progressing."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "13662"
    },
    "items": [
        {
            "metadata": {
                "name": "myapp-86454f4887",
                "namespace": "default",
                "uid": "225dbef3-6831-4b66-9d59-402f68a2aa3d",
                "resourceVersion": "13464",
                "generation": 1,
                "creationTimestamp": "2022-07-21T08:04:12Z",
                "labels": {
                    "app": "myapp",
                    "pod-template-hash": "86454f4887"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "3",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "myapp",
                        "uid": "8e8e4ebd-6228-47fc-8aa1-ad81051cd015",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "app": "myapp",
                        "pod-template-hash": "86454f4887"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "myapp",
                            "pod-template-hash": "86454f4887"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "simple-node",
                                "image": "mfadhiligitau/image1:latest",
                                "ports": [
                                    {
                                        "containerPort": 80,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "500m",
                                        "memory": "128Mi"
                                    }
                                },
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 3,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 3,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "Always"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                }
            },
            "status": {
                "replicas": 2,
                "fullyLabeledReplicas": 2,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "13662"
    },
    "items": [
        {
            "metadata": {
                "name": "myapp-86454f4887-h4tb7",
                "generateName": "myapp-86454f4887-",
                "namespace": "default",
                "uid": "a6269845-c543-4815-873f-19810599b562",
                "resourceVersion": "10562",
                "creationTimestamp": "2022-07-21T08:04:12Z",
                "labels": {
                    "app": "myapp",
                    "pod-template-hash": "86454f4887"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "myapp-86454f4887",
                        "uid": "225dbef3-6831-4b66-9d59-402f68a2aa3d",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-api-access-n2krn",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "simple-node",
                        "image": "mfadhiligitau/image1:latest",
                        "ports": [
                            {
                                "containerPort": 80,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "500m",
                                "memory": "128Mi"
                            },
                            "requests": {
                                "cpu": "500m",
                                "memory": "128Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kube-api-access-n2krn",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 3,
                            "timeoutSeconds": 1,
                            "periodSeconds": 3,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "Always"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Pending",
                "conditions": [
                    {
                        "type": "PodScheduled",
                        "status": "False",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T08:04:12Z",
                        "reason": "Unschedulable",
                        "message": "0/2 nodes are available: 1 Insufficient cpu, 1 Too many pods."
                    }
                ],
                "qosClass": "Guaranteed"
            }
        },
        {
            "metadata": {
                "name": "myapp-86454f4887-npl8g",
                "generateName": "myapp-86454f4887-",
                "namespace": "default",
                "uid": "9d2f10c0-ab7f-4a15-9787-395ae7614f96",
                "resourceVersion": "13463",
                "creationTimestamp": "2022-07-21T08:04:12Z",
                "labels": {
                    "app": "myapp",
                    "pod-template-hash": "86454f4887"
                },
                "annotations": {
                    "kubernetes.io/psp": "eks.privileged"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "myapp-86454f4887",
                        "uid": "225dbef3-6831-4b66-9d59-402f68a2aa3d",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-api-access-j9vqv",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "simple-node",
                        "image": "mfadhiligitau/image1:latest",
                        "ports": [
                            {
                                "containerPort": 80,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "500m",
                                "memory": "128Mi"
                            },
                            "requests": {
                                "cpu": "500m",
                                "memory": "128Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kube-api-access-j9vqv",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 3,
                            "timeoutSeconds": 1,
                            "periodSeconds": 3,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "Always"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "nodeName": "ip-192-168-32-245.ec2.internal",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T08:04:12Z"
                    },
                    {
                        "type": "Ready",
                        "status": "False",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T08:21:01Z",
                        "reason": "ContainersNotReady",
                        "message": "containers with unready status: [simple-node]"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "False",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T08:21:01Z",
                        "reason": "ContainersNotReady",
                        "message": "containers with unready status: [simple-node]"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-07-21T08:04:12Z"
                    }
                ],
                "hostIP": "192.168.32.245",
                "podIP": "192.168.38.27",
                "podIPs": [
                    {
                        "ip": "192.168.38.27"
                    }
                ],
                "startTime": "2022-07-21T08:04:12Z",
                "containerStatuses": [
                    {
                        "name": "simple-node",
                        "state": {
                            "waiting": {
                                "reason": "CrashLoopBackOff",
                                "message": "back-off 5m0s restarting failed container=simple-node pod=myapp-86454f4887-npl8g_default(9d2f10c0-ab7f-4a15-9787-395ae7614f96)"
                            }
                        },
                        "lastState": {
                            "terminated": {
                                "exitCode": 137,
                                "reason": "Error",
                                "startedAt": "2022-07-21T08:20:19Z",
                                "finishedAt": "2022-07-21T08:21:00Z",
                                "containerID": "docker://67debdddf849ed3be9c30208f1d0d84865b9a6656e73518ecfe83a9bf99ab421"
                            }
                        },
                        "ready": false,
                        "restartCount": 9,
                        "image": "mfadhiligitau/image1:latest",
                        "imageID": "docker-pullable://mfadhiligitau/image1@sha256:e9c2b604b49cadcd8e99d48aa8f804a84fd3bc5a3e8166e497d8038ac9063a4f",
                        "containerID": "docker://67debdddf849ed3be9c30208f1d0d84865b9a6656e73518ecfe83a9bf99ab421",
                        "started": false
                    }
                ],
                "qosClass": "Guaranteed"
            }
        }
    ]
}
==== START logs for container simple-node of pod default/myapp-86454f4887-h4tb7 ====
==== END logs for container simple-node of pod default/myapp-86454f4887-h4tb7 ====
==== START logs for container simple-node of pod default/myapp-86454f4887-npl8g ====
Containers rule!
Containers rule!
Containers rule!
Containers rule!
Containers rule!
Containers rule!
Containers rule!
Containers rule!
Containers rule!
==== END logs for container simple-node of pod default/myapp-86454f4887-npl8g ====
